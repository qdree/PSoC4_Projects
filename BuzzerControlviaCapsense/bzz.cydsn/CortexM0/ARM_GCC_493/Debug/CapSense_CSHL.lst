ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_BaseInit,"ax",%progbits
  18              		.align	2
  19              		.global	CapSense_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_BaseInit, %function
  23              	CapSense_BaseInit:
  24              	.LFB34:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 2


  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_40 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 3


  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     6400u, 
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0x8u, 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  26              		.loc 1 143 0
  27              		.cfi_startproc
  28              	.LVL0:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 4


 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  29              		.loc 1 160 0
  30 0000 4300     		lsl	r3, r0, #1
  31 0002 054A     		ldr	r2, .L2
  32 0004 9A5A     		ldrh	r2, [r3, r2]
  33 0006 0549     		ldr	r1, .L2+4
  34 0008 5A52     		strh	r2, [r3, r1]
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  35              		.loc 1 161 0
  36 000a 0818     		add	r0, r1, r0
  37              	.LVL1:
  38 000c 0021     		mov	r1, #0
  39 000e 0173     		strb	r1, [r0, #12]
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  40              		.loc 1 162 0
  41 0010 0175     		strb	r1, [r0, #20]
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  42              		.loc 1 178 0
  43 0012 0349     		ldr	r1, .L2+8
  44 0014 5A52     		strh	r2, [r3, r1]
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 5


 185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
  45              		.loc 1 190 0
  46              		@ sp needed
  47 0016 7047     		bx	lr
  48              	.L3:
  49              		.align	2
  50              	.L2:
  51 0018 00000000 		.word	CapSense_sensorRaw
  52 001c 00000000 		.word	.LANCHOR0
  53 0020 00000000 		.word	CapSense_rawFilterData1
  54              		.cfi_endproc
  55              	.LFE34:
  56              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  57              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  58              		.align	2
  59              		.global	CapSense_InitializeSensorBaseline
  60              		.code	16
  61              		.thumb_func
  62              		.type	CapSense_InitializeSensorBaseline, %function
  63              	CapSense_InitializeSensorBaseline:
  64              	.LFB35:
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  65              		.loc 1 218 0
  66              		.cfi_startproc
  67              	.LVL2:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 6


  68 0000 10B5     		push	{r4, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
  72 0002 041C     		mov	r4, r0
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  73              		.loc 1 220 0
  74 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  75              	.LVL3:
  76              	.L5:
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  77              		.loc 1 221 0 discriminator 1
  78 0008 FFF7FEFF 		bl	CapSense_IsBusy
  79              	.LVL4:
  80 000c 0028     		cmp	r0, #0
  81 000e FBD1     		bne	.L5
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
  82              		.loc 1 227 0
  83 0010 201C     		mov	r0, r4
  84 0012 FFF7FEFF 		bl	CapSense_BaseInit
  85              	.LVL5:
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
  86              		.loc 1 228 0
  87              		@ sp needed
  88              	.LVL6:
  89 0016 10BD     		pop	{r4, pc}
  90              		.cfi_endproc
  91              	.LFE35:
  92              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
  93              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
  94              		.align	2
  95              		.global	CapSense_InitializeAllBaselines
  96              		.code	16
  97              		.thumb_func
  98              		.type	CapSense_InitializeAllBaselines, %function
  99              	CapSense_InitializeAllBaselines:
 100              	.LFB36:
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 7


 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 101              		.loc 1 255 0
 102              		.cfi_startproc
 103 0000 10B5     		push	{r4, lr}
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 14, -4
 107              	.LVL7:
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 108              		.loc 1 258 0
 109 0002 0024     		mov	r4, #0
 110 0004 03E0     		b	.L7
 111              	.LVL8:
 112              	.L8:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 113              		.loc 1 260 0 discriminator 3
 114 0006 201C     		mov	r0, r4
 115 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 116              	.LVL9:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 117              		.loc 1 258 0 discriminator 3
 118 000c 0134     		add	r4, r4, #1
 119              	.LVL10:
 120              	.L7:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 121              		.loc 1 258 0 is_stmt 0 discriminator 1
 122 000e 042C     		cmp	r4, #4
 123 0010 F9D9     		bls	.L8
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 124              		.loc 1 262 0 is_stmt 1
 125              		@ sp needed
 126              	.LVL11:
 127 0012 10BD     		pop	{r4, pc}
 128              		.cfi_endproc
 129              	.LFE36:
 130              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 131              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 132              		.align	2
 133              		.global	CapSense_InitializeEnabledBaselines
 134              		.code	16
 135              		.thumb_func
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 8


 136              		.type	CapSense_InitializeEnabledBaselines, %function
 137              	CapSense_InitializeEnabledBaselines:
 138              	.LFB37:
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 139              		.loc 1 290 0
 140              		.cfi_startproc
 141 0000 10B5     		push	{r4, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
 144              		.cfi_offset 14, -4
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 145              		.loc 1 294 0
 146 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 147              	.LVL12:
 148              	.L10:
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 149              		.loc 1 295 0 discriminator 1
 150 0006 FFF7FEFF 		bl	CapSense_IsBusy
 151              	.LVL13:
 152 000a 0028     		cmp	r0, #0
 153 000c FBD1     		bne	.L10
 154 000e 0024     		mov	r4, #0
 155 0010 09E0     		b	.L11
 156              	.LVL14:
 157              	.L13:
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 9


 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 158              		.loc 1 302 0
 159 0012 0648     		ldr	r0, .L14
 160 0014 211C     		mov	r1, r4
 161 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 162              	.LVL15:
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 163              		.loc 1 305 0
 164 001a 0028     		cmp	r0, #0
 165 001c 02D0     		beq	.L12
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 166              		.loc 1 308 0
 167 001e 201C     		mov	r0, r4
 168              	.LVL16:
 169 0020 FFF7FEFF 		bl	CapSense_BaseInit
 170              	.LVL17:
 171              	.L12:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 172              		.loc 1 300 0 discriminator 2
 173 0024 0134     		add	r4, r4, #1
 174              	.LVL18:
 175              	.L11:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 176              		.loc 1 300 0 is_stmt 0 discriminator 1
 177 0026 042C     		cmp	r4, #4
 178 0028 F3D9     		bls	.L13
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 179              		.loc 1 311 0 is_stmt 1
 180              		@ sp needed
 181              	.LVL19:
 182 002a 10BD     		pop	{r4, pc}
 183              	.L15:
 184              		.align	2
 185              	.L14:
 186 002c 00000000 		.word	CapSense_sensorEnableMask
 187              		.cfi_endproc
 188              	.LFE37:
 189              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 190              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 191              		.align	2
 192              		.global	CapSense_GetBaselineData
 193              		.code	16
 194              		.thumb_func
 195              		.type	CapSense_GetBaselineData, %function
 196              	CapSense_GetBaselineData:
 197              	.LFB42:
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 10


 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 11


 370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 12


 427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 13


 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 14


 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 15


 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 16


 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 198              		.loc 1 695 0
 199              		.cfi_startproc
 200              	.LVL20:
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 201              		.loc 1 696 0
 202 0000 4000     		lsl	r0, r0, #1
 203              	.LVL21:
 204 0002 014B     		ldr	r3, .L17
 205 0004 185A     		ldrh	r0, [r3, r0]
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 206              		.loc 1 697 0
 207              		@ sp needed
 208 0006 7047     		bx	lr
 209              	.L18:
 210              		.align	2
 211              	.L17:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 17


 212 0008 00000000 		.word	.LANCHOR0
 213              		.cfi_endproc
 214              	.LFE42:
 215              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 216              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 217              		.align	2
 218              		.global	CapSense_SetBaselineData
 219              		.code	16
 220              		.thumb_func
 221              		.type	CapSense_SetBaselineData, %function
 222              	CapSense_SetBaselineData:
 223              	.LFB43:
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 224              		.loc 1 722 0
 225              		.cfi_startproc
 226              	.LVL22:
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 227              		.loc 1 723 0
 228 0000 4000     		lsl	r0, r0, #1
 229              	.LVL23:
 230 0002 014B     		ldr	r3, .L20
 231 0004 C152     		strh	r1, [r0, r3]
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 232              		.loc 1 724 0
 233              		@ sp needed
 234 0006 7047     		bx	lr
 235              	.L21:
 236              		.align	2
 237              	.L20:
 238 0008 00000000 		.word	.LANCHOR0
 239              		.cfi_endproc
 240              	.LFE43:
 241              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 18


 242              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 243              		.align	2
 244              		.global	CapSense_GetDiffCountData
 245              		.code	16
 246              		.thumb_func
 247              		.type	CapSense_GetDiffCountData, %function
 248              	CapSense_GetDiffCountData:
 249              	.LFB44:
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 250              		.loc 1 749 0
 251              		.cfi_startproc
 252              	.LVL24:
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 253              		.loc 1 750 0
 254 0000 014B     		ldr	r3, .L23
 255 0002 1818     		add	r0, r3, r0
 256              	.LVL25:
 257 0004 007D     		ldrb	r0, [r0, #20]
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 258              		.loc 1 751 0
 259              		@ sp needed
 260 0006 7047     		bx	lr
 261              	.L24:
 262              		.align	2
 263              	.L23:
 264 0008 00000000 		.word	.LANCHOR0
 265              		.cfi_endproc
 266              	.LFE44:
 267              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 268              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 269              		.align	2
 270              		.global	CapSense_SetDiffCountData
 271              		.code	16
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 19


 272              		.thumb_func
 273              		.type	CapSense_SetDiffCountData, %function
 274              	CapSense_SetDiffCountData:
 275              	.LFB45:
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 276              		.loc 1 776 0
 277              		.cfi_startproc
 278              	.LVL26:
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 279              		.loc 1 777 0
 280 0000 014B     		ldr	r3, .L26
 281 0002 1818     		add	r0, r3, r0
 282              	.LVL27:
 283 0004 0175     		strb	r1, [r0, #20]
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 284              		.loc 1 778 0
 285              		@ sp needed
 286 0006 7047     		bx	lr
 287              	.L27:
 288              		.align	2
 289              	.L26:
 290 0008 00000000 		.word	.LANCHOR0
 291              		.cfi_endproc
 292              	.LFE45:
 293              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 294              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 295              		.align	2
 296              		.global	CapSense_GetFingerThreshold
 297              		.code	16
 298              		.thumb_func
 299              		.type	CapSense_GetFingerThreshold, %function
 300              	CapSense_GetFingerThreshold:
 301              	.LFB46:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 20


 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 302              		.loc 1 803 0
 303              		.cfi_startproc
 304              	.LVL28:
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 305              		.loc 1 804 0
 306 0000 014B     		ldr	r3, .L29
 307 0002 185C     		ldrb	r0, [r3, r0]
 308              	.LVL29:
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 309              		.loc 1 805 0
 310              		@ sp needed
 311 0004 7047     		bx	lr
 312              	.L30:
 313 0006 C046     		.align	2
 314              	.L29:
 315 0008 00000000 		.word	CapSense_fingerThreshold
 316              		.cfi_endproc
 317              	.LFE46:
 318              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 319              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 320              		.align	2
 321              		.global	CapSense_GetNoiseThreshold
 322              		.code	16
 323              		.thumb_func
 324              		.type	CapSense_GetNoiseThreshold, %function
 325              	CapSense_GetNoiseThreshold:
 326              	.LFB47:
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 21


 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 327              		.loc 1 830 0
 328              		.cfi_startproc
 329              	.LVL30:
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 330              		.loc 1 831 0
 331 0000 014B     		ldr	r3, .L32
 332 0002 185C     		ldrb	r0, [r3, r0]
 333              	.LVL31:
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 334              		.loc 1 832 0
 335              		@ sp needed
 336 0004 7047     		bx	lr
 337              	.L33:
 338 0006 C046     		.align	2
 339              	.L32:
 340 0008 00000000 		.word	CapSense_noiseThreshold
 341              		.cfi_endproc
 342              	.LFE47:
 343              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 344              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 345              		.align	2
 346              		.global	CapSense_GetFingerHysteresis
 347              		.code	16
 348              		.thumb_func
 349              		.type	CapSense_GetFingerHysteresis, %function
 350              	CapSense_GetFingerHysteresis:
 351              	.LFB48:
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 22


 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 352              		.loc 1 858 0
 353              		.cfi_startproc
 354              	.LVL32:
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 355              		.loc 1 859 0
 356 0000 014B     		ldr	r3, .L35
 357 0002 185C     		ldrb	r0, [r3, r0]
 358              	.LVL33:
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 359              		.loc 1 860 0
 360              		@ sp needed
 361 0004 7047     		bx	lr
 362              	.L36:
 363 0006 C046     		.align	2
 364              	.L35:
 365 0008 00000000 		.word	CapSense_hysteresis
 366              		.cfi_endproc
 367              	.LFE48:
 368              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 369              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 370              		.align	2
 371              		.global	CapSense_GetNegativeNoiseThreshold
 372              		.code	16
 373              		.thumb_func
 374              		.type	CapSense_GetNegativeNoiseThreshold, %function
 375              	CapSense_GetNegativeNoiseThreshold:
 376              	.LFB49:
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 23


 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 377              		.loc 1 886 0
 378              		.cfi_startproc
 379              	.LVL34:
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 380              		.loc 1 888 0
 381 0000 014B     		ldr	r3, .L38
 382 0002 185C     		ldrb	r0, [r3, r0]
 383              	.LVL35:
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 384              		.loc 1 892 0
 385              		@ sp needed
 386 0004 7047     		bx	lr
 387              	.L39:
 388 0006 C046     		.align	2
 389              	.L38:
 390 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 391              		.cfi_endproc
 392              	.LFE49:
 393              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 394              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 395              		.align	2
 396              		.global	CapSense_SetFingerThreshold
 397              		.code	16
 398              		.thumb_func
 399              		.type	CapSense_SetFingerThreshold, %function
 400              	CapSense_SetFingerThreshold:
 401              	.LFB50:
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 24


 907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 402              		.loc 1 919 0
 403              		.cfi_startproc
 404              	.LVL36:
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 405              		.loc 1 920 0
 406 0000 014B     		ldr	r3, .L41
 407 0002 1954     		strb	r1, [r3, r0]
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 408              		.loc 1 921 0
 409              		@ sp needed
 410 0004 7047     		bx	lr
 411              	.L42:
 412 0006 C046     		.align	2
 413              	.L41:
 414 0008 00000000 		.word	CapSense_fingerThreshold
 415              		.cfi_endproc
 416              	.LFE50:
 417              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 418              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 419              		.align	2
 420              		.global	CapSense_SetNoiseThreshold
 421              		.code	16
 422              		.thumb_func
 423              		.type	CapSense_SetNoiseThreshold, %function
 424              	CapSense_SetNoiseThreshold:
 425              	.LFB51:
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 25


 940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 426              		.loc 1 947 0
 427              		.cfi_startproc
 428              	.LVL37:
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 429              		.loc 1 948 0
 430 0000 014B     		ldr	r3, .L44
 431 0002 1954     		strb	r1, [r3, r0]
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 432              		.loc 1 949 0
 433              		@ sp needed
 434 0004 7047     		bx	lr
 435              	.L45:
 436 0006 C046     		.align	2
 437              	.L44:
 438 0008 00000000 		.word	CapSense_noiseThreshold
 439              		.cfi_endproc
 440              	.LFE51:
 441              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 442              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 443              		.align	2
 444              		.global	CapSense_SetFingerHysteresis
 445              		.code	16
 446              		.thumb_func
 447              		.type	CapSense_SetFingerHysteresis, %function
 448              	CapSense_SetFingerHysteresis:
 449              	.LFB52:
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 26


 973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 450              		.loc 1 975 0
 451              		.cfi_startproc
 452              	.LVL38:
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 453              		.loc 1 976 0
 454 0000 014B     		ldr	r3, .L47
 455 0002 1954     		strb	r1, [r3, r0]
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 456              		.loc 1 977 0
 457              		@ sp needed
 458 0004 7047     		bx	lr
 459              	.L48:
 460 0006 C046     		.align	2
 461              	.L47:
 462 0008 00000000 		.word	CapSense_hysteresis
 463              		.cfi_endproc
 464              	.LFE52:
 465              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 466              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 467              		.align	2
 468              		.global	CapSense_SetNegativeNoiseThreshold
 469              		.code	16
 470              		.thumb_func
 471              		.type	CapSense_SetNegativeNoiseThreshold, %function
 472              	CapSense_SetNegativeNoiseThreshold:
 473              	.LFB53:
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 474              		.loc 1 1004 0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 27


 475              		.cfi_startproc
 476              	.LVL39:
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 477              		.loc 1 1005 0
 478 0000 014B     		ldr	r3, .L50
 479 0002 1954     		strb	r1, [r3, r0]
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 480              		.loc 1 1006 0
 481              		@ sp needed
 482 0004 7047     		bx	lr
 483              	.L51:
 484 0006 C046     		.align	2
 485              	.L50:
 486 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 487              		.cfi_endproc
 488              	.LFE53:
 489              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 490              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 491              		.align	2
 492              		.global	CapSense_SetDebounce
 493              		.code	16
 494              		.thumb_func
 495              		.type	CapSense_SetDebounce, %function
 496              	CapSense_SetDebounce:
 497              	.LFB54:
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 498              		.loc 1 1032 0
 499              		.cfi_startproc
 500              	.LVL40:
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 501              		.loc 1 1033 0
 502 0000 014B     		ldr	r3, .L53
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 28


 503 0002 1954     		strb	r1, [r3, r0]
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 504              		.loc 1 1034 0
 505              		@ sp needed
 506 0004 7047     		bx	lr
 507              	.L54:
 508 0006 C046     		.align	2
 509              	.L53:
 510 0008 00000000 		.word	.LANCHOR1
 511              		.cfi_endproc
 512              	.LFE54:
 513              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 514              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 515              		.align	2
 516              		.global	CapSense_SetLowBaselineReset
 517              		.code	16
 518              		.thumb_func
 519              		.type	CapSense_SetLowBaselineReset, %function
 520              	CapSense_SetLowBaselineReset:
 521              	.LFB55:
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 522              		.loc 1 1060 0
 523              		.cfi_startproc
 524              	.LVL41:
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 525              		.loc 1 1061 0
 526 0000 014B     		ldr	r3, .L56
 527 0002 1818     		add	r0, r3, r0
 528              	.LVL42:
 529 0004 0171     		strb	r1, [r0, #4]
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 530              		.loc 1 1062 0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 29


 531              		@ sp needed
 532 0006 7047     		bx	lr
 533              	.L57:
 534              		.align	2
 535              	.L56:
 536 0008 00000000 		.word	.LANCHOR1
 537              		.cfi_endproc
 538              	.LFE55:
 539              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 540              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 541              		.align	2
 542              		.global	CapSense_CheckIsSensorActive
 543              		.code	16
 544              		.thumb_func
 545              		.type	CapSense_CheckIsSensorActive, %function
 546              	CapSense_CheckIsSensorActive:
 547              	.LFB56:
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 30


1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 548              		.loc 1 1106 0
 549              		.cfi_startproc
 550              	.LVL43:
 551 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 552              		.cfi_def_cfa_offset 24
 553              		.cfi_offset 3, -24
 554              		.cfi_offset 4, -20
 555              		.cfi_offset 5, -16
 556              		.cfi_offset 6, -12
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 041C     		mov	r4, r0
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     static uint8 CapSense_debounceCounter[] = {
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 560              		.loc 1 1120 0
 561 0004 1F4B     		ldr	r3, .L63
 562 0006 1B5C     		ldrb	r3, [r3, r0]
 563              	.LVL44:
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 564              		.loc 1 1122 0
 565 0008 1F4A     		ldr	r2, .L63+4
 566 000a D65C     		ldrb	r6, [r2, r3]
 567              	.LVL45:
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 568              		.loc 1 1123 0
 569 000c 1F4A     		ldr	r2, .L63+8
 570 000e D55C     		ldrb	r5, [r2, r3]
 571              	.LVL46:
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 572              		.loc 1 1124 0
 573 0010 1F4A     		ldr	r2, .L63+12
 574 0012 D75C     		ldrb	r7, [r2, r3]
 575              	.LVL47:
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 576              		.loc 1 1127 0
 577 0014 1F48     		ldr	r0, .L63+16
 578              	.LVL48:
 579 0016 0123     		mov	r3, #1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 31


 580              	.LVL49:
 581 0018 0377     		strb	r3, [r0, #28]
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 582              		.loc 1 1131 0
 583 001a 2030     		add	r0, r0, #32
 584 001c 211C     		mov	r1, r4
 585 001e FFF7FEFF 		bl	CapSense_GetBitValue
 586              	.LVL50:
 587 0022 0028     		cmp	r0, #0
 588 0024 0ED0     		beq	.L59
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 589              		.loc 1 1134 0
 590 0026 1B4B     		ldr	r3, .L63+16
 591 0028 1B19     		add	r3, r3, r4
 592 002a 1B7D     		ldrb	r3, [r3, #20]
 593 002c 751B     		sub	r5, r6, r5
 594              	.LVL51:
 595 002e AB42     		cmp	r3, r5
 596 0030 1EDA     		bge	.L60
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 597              		.loc 1 1136 0
 598 0032 184D     		ldr	r5, .L63+16
 599 0034 281C     		mov	r0, r5
 600 0036 2030     		add	r0, r0, #32
 601 0038 211C     		mov	r1, r4
 602 003a 0022     		mov	r2, #0
 603 003c FFF7FEFF 		bl	CapSense_SetBitValue
 604              	.LVL52:
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 605              		.loc 1 1138 0
 606 0040 2F77     		strb	r7, [r5, #28]
 607 0042 15E0     		b	.L60
 608              	.LVL53:
 609              	.L59:
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 610              		.loc 1 1144 0
 611 0044 134B     		ldr	r3, .L63+16
 612 0046 1B19     		add	r3, r3, r4
 613 0048 1B7D     		ldrb	r3, [r3, #20]
 614 004a 7519     		add	r5, r6, r5
 615              	.LVL54:
 616 004c AB42     		cmp	r3, r5
 617 004e 0DDB     		blt	.L61
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 32


 618              		.loc 1 1146 0
 619 0050 104A     		ldr	r2, .L63+16
 620 0052 137F     		ldrb	r3, [r2, #28]
 621 0054 013B     		sub	r3, r3, #1
 622 0056 DBB2     		uxtb	r3, r3
 623 0058 1377     		strb	r3, [r2, #28]
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 624              		.loc 1 1148 0
 625 005a 002B     		cmp	r3, #0
 626 005c 08D1     		bne	.L60
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 627              		.loc 1 1150 0
 628 005e 101C     		mov	r0, r2
 629 0060 2030     		add	r0, r0, #32
 630 0062 211C     		mov	r1, r4
 631 0064 0122     		mov	r2, #1
 632 0066 FFF7FEFF 		bl	CapSense_SetBitValue
 633              	.LVL55:
 634 006a 01E0     		b	.L60
 635              	.L61:
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 636              		.loc 1 1156 0
 637 006c 094B     		ldr	r3, .L63+16
 638 006e 1F77     		strb	r7, [r3, #28]
 639              	.L60:
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 640              		.loc 1 1160 0
 641 0070 0848     		ldr	r0, .L63+16
 642 0072 2030     		add	r0, r0, #32
 643 0074 211C     		mov	r1, r4
 644 0076 FFF7FEFF 		bl	CapSense_GetBitValue
 645              	.LVL56:
 646 007a 0028     		cmp	r0, #0
 647 007c 00D0     		beq	.L62
 648 007e 0120     		mov	r0, #1
 649              	.L62:
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 650              		.loc 1 1161 0 discriminator 4
 651              		@ sp needed
 652              	.LVL57:
 653              	.LVL58:
 654              	.LVL59:
 655 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 656              	.L64:
 657 0082 C046     		.align	2
 658              	.L63:
 659 0084 00000000 		.word	CapSense_widgetNumber
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 33


 660 0088 00000000 		.word	CapSense_fingerThreshold
 661 008c 00000000 		.word	CapSense_hysteresis
 662 0090 00000000 		.word	.LANCHOR1
 663 0094 00000000 		.word	.LANCHOR0
 664              		.cfi_endproc
 665              	.LFE56:
 666              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 667              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 668              		.align	2
 669              		.global	CapSense_CheckIsWidgetActive
 670              		.code	16
 671              		.thumb_func
 672              		.type	CapSense_CheckIsWidgetActive, %function
 673              	CapSense_CheckIsWidgetActive:
 674              	.LFB57:
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 675              		.loc 1 1193 0
 676              		.cfi_startproc
 677              	.LVL60:
 678 0000 38B5     		push	{r3, r4, r5, lr}
 679              		.cfi_def_cfa_offset 16
 680              		.cfi_offset 3, -16
 681              		.cfi_offset 4, -12
 682              		.cfi_offset 5, -8
 683              		.cfi_offset 14, -4
 684              	.LVL61:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 34


1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 685              		.loc 1 1196 0
 686 0002 0025     		mov	r5, #0
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 687              		.loc 1 1194 0
 688 0004 0024     		mov	r4, #0
 689              	.LVL62:
 690              	.L67:
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 691              		.loc 1 1201 0
 692 0006 201C     		mov	r0, r4
 693 0008 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 694              	.LVL63:
 695 000c 0028     		cmp	r0, #0
 696 000e 00D0     		beq	.L66
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 697              		.loc 1 1203 0
 698 0010 0125     		mov	r5, #1
 699              	.LVL64:
 700              	.L66:
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 701              		.loc 1 1205 0
 702 0012 0134     		add	r4, r4, #1
 703              	.LVL65:
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 704              		.loc 1 1207 0
 705 0014 042C     		cmp	r4, #4
 706 0016 F6D9     		bls	.L67
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 707              		.loc 1 1212 0
 708 0018 281C     		mov	r0, r5
 709              		@ sp needed
 710              	.LVL66:
 711              	.LVL67:
 712 001a 38BD     		pop	{r3, r4, r5, pc}
 713              		.cfi_endproc
 714              	.LFE57:
 715              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 716              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 717              		.align	2
 718              		.global	CapSense_CheckIsAnyWidgetActive
 719              		.code	16
 720              		.thumb_func
 721              		.type	CapSense_CheckIsAnyWidgetActive, %function
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 35


 722              	CapSense_CheckIsAnyWidgetActive:
 723              	.LFB58:
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 724              		.loc 1 1239 0
 725              		.cfi_startproc
 726 0000 38B5     		push	{r3, r4, r5, lr}
 727              		.cfi_def_cfa_offset 16
 728              		.cfi_offset 3, -16
 729              		.cfi_offset 4, -12
 730              		.cfi_offset 5, -8
 731              		.cfi_offset 14, -4
 732              	.LVL68:
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 733              		.loc 1 1242 0
 734 0002 0025     		mov	r5, #0
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 735              		.loc 1 1244 0
 736 0004 0024     		mov	r4, #0
 737 0006 06E0     		b	.L70
 738              	.LVL69:
 739              	.L72:
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 740              		.loc 1 1246 0
 741 0008 201C     		mov	r0, r4
 742 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 743              	.LVL70:
 744 000e 0028     		cmp	r0, #0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 36


 745 0010 00D0     		beq	.L71
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 746              		.loc 1 1248 0
 747 0012 0125     		mov	r5, #1
 748              	.LVL71:
 749              	.L71:
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 750              		.loc 1 1244 0 discriminator 2
 751 0014 0134     		add	r4, r4, #1
 752              	.LVL72:
 753              	.L70:
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 754              		.loc 1 1244 0 is_stmt 0 discriminator 1
 755 0016 002C     		cmp	r4, #0
 756 0018 F6D0     		beq	.L72
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 757              		.loc 1 1255 0 is_stmt 1
 758 001a 281C     		mov	r0, r5
 759              		@ sp needed
 760              	.LVL73:
 761              	.LVL74:
 762 001c 38BD     		pop	{r3, r4, r5, pc}
 763              		.cfi_endproc
 764              	.LFE58:
 765              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 766 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 767              		.align	2
 768              		.global	CapSense_EnableWidget
 769              		.code	16
 770              		.thumb_func
 771              		.type	CapSense_EnableWidget, %function
 772              	CapSense_EnableWidget:
 773              	.LFB59:
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 37


1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 774              		.loc 1 1286 0
 775              		.cfi_startproc
 776              	.LVL75:
 777 0000 10B5     		push	{r4, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 4, -8
 780              		.cfi_offset 14, -4
 781              	.LVL76:
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 782              		.loc 1 1288 0
 783 0002 0024     		mov	r4, #0
 784              	.LVL77:
 785              	.L75:
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 786              		.loc 1 1294 0 discriminator 1
 787 0004 0448     		ldr	r0, .L76
 788 0006 211C     		mov	r1, r4
 789 0008 0122     		mov	r2, #1
 790 000a FFF7FEFF 		bl	CapSense_SetBitValue
 791              	.LVL78:
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 792              		.loc 1 1295 0 discriminator 1
 793 000e 0134     		add	r4, r4, #1
 794              	.LVL79:
 795 0010 E4B2     		uxtb	r4, r4
 796              	.LVL80:
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 797              		.loc 1 1297 0 discriminator 1
 798 0012 042C     		cmp	r4, #4
 799 0014 F6D9     		bls	.L75
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 800              		.loc 1 1298 0
 801              		@ sp needed
 802              	.LVL81:
 803 0016 10BD     		pop	{r4, pc}
 804              	.L77:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 38


 805              		.align	2
 806              	.L76:
 807 0018 00000000 		.word	CapSense_sensorEnableMask
 808              		.cfi_endproc
 809              	.LFE59:
 810              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 811              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 812              		.align	2
 813              		.global	CapSense_DisableWidget
 814              		.code	16
 815              		.thumb_func
 816              		.type	CapSense_DisableWidget, %function
 817              	CapSense_DisableWidget:
 818              	.LFB60:
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 819              		.loc 1 1329 0
 820              		.cfi_startproc
 821              	.LVL82:
 822 0000 10B5     		push	{r4, lr}
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 4, -8
 825              		.cfi_offset 14, -4
 826              	.LVL83:
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 827              		.loc 1 1330 0
 828 0002 0024     		mov	r4, #0
 829              	.LVL84:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 39


 830              	.L79:
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 831              		.loc 1 1337 0 discriminator 1
 832 0004 0448     		ldr	r0, .L80
 833 0006 211C     		mov	r1, r4
 834 0008 0022     		mov	r2, #0
 835 000a FFF7FEFF 		bl	CapSense_SetBitValue
 836              	.LVL85:
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 837              		.loc 1 1338 0 discriminator 1
 838 000e 0134     		add	r4, r4, #1
 839              	.LVL86:
 840 0010 E4B2     		uxtb	r4, r4
 841              	.LVL87:
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 842              		.loc 1 1340 0 discriminator 1
 843 0012 042C     		cmp	r4, #4
 844 0014 F6D9     		bls	.L79
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 845              		.loc 1 1341 0
 846              		@ sp needed
 847              	.LVL88:
 848 0016 10BD     		pop	{r4, pc}
 849              	.L81:
 850              		.align	2
 851              	.L80:
 852 0018 00000000 		.word	CapSense_sensorEnableMask
 853              		.cfi_endproc
 854              	.LFE60:
 855              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 856              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 857              		.align	2
 858              		.global	CapSense_FindMaximum
 859              		.code	16
 860              		.thumb_func
 861              		.type	CapSense_FindMaximum, %function
 862              	CapSense_FindMaximum:
 863              	.LFB61:
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 40


1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 864              		.loc 1 1380 0
 865              		.cfi_startproc
 866              	.LVL89:
 867 0000 70B5     		push	{r4, r5, r6, lr}
 868              		.cfi_def_cfa_offset 16
 869              		.cfi_offset 4, -16
 870              		.cfi_offset 5, -12
 871              		.cfi_offset 6, -8
 872              		.cfi_offset 14, -4
 873              	.LVL90:
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 874              		.loc 1 1394 0
 875 0002 094D     		ldr	r5, .L87
 876 0004 1435     		add	r5, r5, #20
 877 0006 2D18     		add	r5, r5, r0
 878              	.LVL91:
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 41


 879              		.loc 1 1393 0
 880 0008 0026     		mov	r6, #0
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 881              		.loc 1 1391 0
 882 000a FF20     		mov	r0, #255
 883              	.LVL92:
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 42


1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 884              		.loc 1 1491 0
 885 000c 0023     		mov	r3, #0
 886 000e 08E0     		b	.L83
 887              	.LVL93:
 888              	.L85:
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 889              		.loc 1 1494 0
 890 0010 EC5C     		ldrb	r4, [r5, r3]
 891 0012 9442     		cmp	r4, r2
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 43


 892 0014 03D9     		bls	.L84
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 893              		.loc 1 1496 0
 894 0016 A642     		cmp	r6, r4
 895 0018 01D2     		bcs	.L84
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 896              		.loc 1 1499 0
 897 001a 261C     		mov	r6, r4
 898              	.LVL94:
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 899              		.loc 1 1498 0
 900 001c 181C     		mov	r0, r3
 901              	.LVL95:
 902              	.L84:
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 903              		.loc 1 1491 0 discriminator 2
 904 001e 0133     		add	r3, r3, #1
 905              	.LVL96:
 906 0020 DBB2     		uxtb	r3, r3
 907              	.LVL97:
 908              	.L83:
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 909              		.loc 1 1491 0 is_stmt 0 discriminator 1
 910 0022 8B42     		cmp	r3, r1
 911 0024 F4D3     		bcc	.L85
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 912              		.loc 1 1505 0 is_stmt 1
 913              		@ sp needed
 914              	.LVL98:
 915              	.LVL99:
 916 0026 70BD     		pop	{r4, r5, r6, pc}
 917              	.L88:
 918              		.align	2
 919              	.L87:
 920 0028 00000000 		.word	.LANCHOR0
 921              		.cfi_endproc
 922              	.LFE61:
 923              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 924              		.global	__aeabi_idiv
 925              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 926              		.align	2
 927              		.global	CapSense_CalcCentroid
 928              		.code	16
 929              		.thumb_func
 930              		.type	CapSense_CalcCentroid, %function
 931              	CapSense_CalcCentroid:
 932              	.LFB62:
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 44


1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 933              		.loc 1 1540 0
 934              		.cfi_startproc
 935              	.LVL100:
 936 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 937              		.cfi_def_cfa_offset 20
 938              		.cfi_offset 4, -20
 939              		.cfi_offset 5, -16
 940              		.cfi_offset 6, -12
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
 943 0002 83B0     		sub	sp, sp, #12
 944              		.cfi_def_cfa_offset 32
 945 0004 041C     		mov	r4, r0
 946 0006 0192     		str	r2, [sp, #4]
 947 0008 0093     		str	r3, [sp]
 948 000a 08AB     		add	r3, sp, #32
 949              	.LVL101:
 950 000c 1878     		ldrb	r0, [r3]
 951              	.LVL102:
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 45


1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 952              		.loc 1 1559 0
 953 000e 344B     		ldr	r3, .L99
 954              	.LVL103:
 955 0010 1433     		add	r3, r3, #20
 956 0012 5918     		add	r1, r3, r1
 957              	.LVL104:
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 46


1597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 958              		.loc 1 1622 0
 959 0014 002C     		cmp	r4, #0
 960 0016 02D0     		beq	.L98
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 961              		.loc 1 1624 0
 962 0018 661E     		sub	r6, r4, #1
 963 001a F6B2     		uxtb	r6, r6
 964              	.LVL105:
 965 001c 00E0     		b	.L90
 966              	.LVL106:
 967              	.L98:
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
 968              		.loc 1 1562 0
 969 001e 0026     		mov	r6, #0
 970              	.LVL107:
 971              	.L90:
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 972              		.loc 1 1626 0
 973 0020 631C     		add	r3, r4, #1
 974 0022 DDB2     		uxtb	r5, r3
 975              	.LVL108:
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 976              		.loc 1 1633 0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 47


 977 0024 0B5D     		ldrb	r3, [r1, r4]
 978 0026 9C46     		mov	ip, r3
 979 0028 2D4B     		ldr	r3, .L99
 980 002a 2433     		add	r3, r3, #36
 981 002c 6246     		mov	r2, ip
 982              	.LVL109:
 983 002e 5A70     		strb	r2, [r3, #1]
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 984              		.loc 1 1637 0
 985 0030 002C     		cmp	r4, #0
 986 0032 07D1     		bne	.L91
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 987              		.loc 1 1639 0
 988 0034 2A4B     		ldr	r3, .L99
 989 0036 0026     		mov	r6, #0
 990              	.LVL110:
 991 0038 2422     		mov	r2, #36
 992 003a 9E54     		strb	r6, [r3, r2]
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 993              		.loc 1 1640 0
 994 003c 4A5D     		ldrb	r2, [r1, r5]
 995 003e 2433     		add	r3, r3, #36
 996 0040 9A70     		strb	r2, [r3, #2]
 997 0042 12E0     		b	.L92
 998              	.LVL111:
 999              	.L91:
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1000              		.loc 1 1642 0
 1001 0044 019A     		ldr	r2, [sp, #4]
 1002 0046 013A     		sub	r2, r2, #1
 1003 0048 9442     		cmp	r4, r2
 1004 004a 07D1     		bne	.L93
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1005              		.loc 1 1644 0
 1006 004c 895D     		ldrb	r1, [r1, r6]
 1007              	.LVL112:
 1008 004e 244B     		ldr	r3, .L99
 1009 0050 2422     		mov	r2, #36
 1010 0052 9954     		strb	r1, [r3, r2]
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1011              		.loc 1 1645 0
 1012 0054 2433     		add	r3, r3, #36
 1013 0056 0022     		mov	r2, #0
 1014 0058 9A70     		strb	r2, [r3, #2]
 1015 005a 06E0     		b	.L92
 1016              	.LVL113:
 1017              	.L93:
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 48


 1018              		.loc 1 1649 0
 1019 005c 8E5D     		ldrb	r6, [r1, r6]
 1020              	.LVL114:
 1021 005e 204B     		ldr	r3, .L99
 1022 0060 2422     		mov	r2, #36
 1023 0062 9E54     		strb	r6, [r3, r2]
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1024              		.loc 1 1650 0
 1025 0064 4A5D     		ldrb	r2, [r1, r5]
 1026 0066 2433     		add	r3, r3, #36
 1027 0068 9A70     		strb	r2, [r3, #2]
 1028              	.LVL115:
 1029              	.L92:
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 1030              		.loc 1 1659 0
 1031 006a 2423     		mov	r3, #36
 1032 006c 1C4A     		ldr	r2, .L99
 1033 006e D35C     		ldrb	r3, [r2, r3]
 1034 0070 8342     		cmp	r3, r0
 1035 0072 04D9     		bls	.L94
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 1036              		.loc 1 1661 0
 1037 0074 1B1A     		sub	r3, r3, r0
 1038 0076 2422     		mov	r2, #36
 1039 0078 1949     		ldr	r1, .L99
 1040 007a 8B54     		strb	r3, [r1, r2]
 1041 007c 03E0     		b	.L95
 1042              	.L94:
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 1043              		.loc 1 1665 0
 1044 007e 0021     		mov	r1, #0
 1045 0080 2423     		mov	r3, #36
 1046 0082 174A     		ldr	r2, .L99
 1047 0084 D154     		strb	r1, [r2, r3]
 1048              	.L95:
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 1049              		.loc 1 1669 0
 1050 0086 164A     		ldr	r2, .L99
 1051 0088 2432     		add	r2, r2, #36
 1052 008a 5378     		ldrb	r3, [r2, #1]
 1053 008c 1B1A     		sub	r3, r3, r0
 1054 008e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 49


 1055 0090 5370     		strb	r3, [r2, #1]
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 1056              		.loc 1 1672 0
 1057 0092 9278     		ldrb	r2, [r2, #2]
 1058 0094 8242     		cmp	r2, r0
 1059 0096 04D9     		bls	.L96
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 1060              		.loc 1 1674 0
 1061 0098 101A     		sub	r0, r2, r0
 1062 009a 114A     		ldr	r2, .L99
 1063 009c 2432     		add	r2, r2, #36
 1064 009e 9070     		strb	r0, [r2, #2]
 1065 00a0 03E0     		b	.L97
 1066              	.L96:
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1067              		.loc 1 1678 0
 1068 00a2 0021     		mov	r1, #0
 1069 00a4 0E4A     		ldr	r2, .L99
 1070 00a6 2432     		add	r2, r2, #36
 1071 00a8 9170     		strb	r1, [r2, #2]
 1072              	.L97:
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 1073              		.loc 1 1683 0
 1074 00aa 0D49     		ldr	r1, .L99
 1075 00ac 0A1C     		mov	r2, r1
 1076 00ae 2432     		add	r2, r2, #36
 1077 00b0 9278     		ldrb	r2, [r2, #2]
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1078              		.loc 1 1684 0
 1079 00b2 2420     		mov	r0, #36
 1080 00b4 095C     		ldrb	r1, [r1, r0]
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1081              		.loc 1 1683 0
 1082 00b6 501A     		sub	r0, r2, r1
 1083              	.LVL116:
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
 1084              		.loc 1 1687 0
 1085 00b8 C918     		add	r1, r1, r3
 1086 00ba 8918     		add	r1, r1, r2
 1087              	.LVL117:
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 50


 1088              		.loc 1 1692 0
 1089 00bc 0002     		lsl	r0, r0, #8
 1090              	.LVL118:
 1091 00be FFF7FEFF 		bl	__aeabi_idiv
 1092              	.LVL119:
 1093 00c2 2402     		lsl	r4, r4, #8
 1094 00c4 0419     		add	r4, r0, r4
 1095              	.LVL120:
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 1096              		.loc 1 1702 0
 1097 00c6 6B46     		mov	r3, sp
 1098 00c8 0020     		mov	r0, #0
 1099 00ca 185E     		ldrsh	r0, [r3, r0]
 1100 00cc 6043     		mul	r0, r4
 1101              	.LVL121:
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 1102              		.loc 1 1705 0
 1103 00ce FE23     		mov	r3, #254
 1104 00d0 DB01     		lsl	r3, r3, #7
 1105 00d2 9C46     		mov	ip, r3
 1106 00d4 6044     		add	r0, r0, ip
 1107              	.LVL122:
 1108 00d6 000C     		lsr	r0, r0, #16
 1109              	.LVL123:
 1110 00d8 C0B2     		uxtb	r0, r0
 1111              	.LVL124:
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1112              		.loc 1 1708 0
 1113 00da 03B0     		add	sp, sp, #12
 1114              	.LVL125:
 1115              		@ sp needed
 1116              	.LVL126:
 1117              	.LVL127:
 1118 00dc F0BD     		pop	{r4, r5, r6, r7, pc}
 1119              	.L100:
 1120 00de C046     		.align	2
 1121              	.L99:
 1122 00e0 00000000 		.word	.LANCHOR0
 1123              		.cfi_endproc
 1124              	.LFE62:
 1125              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 1126              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 1127              		.align	2
 1128              		.global	CapSense_GetRadialCentroidPos
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 51


 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	CapSense_GetRadialCentroidPos, %function
 1132              	CapSense_GetRadialCentroidPos:
 1133              	.LFB64:
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 52


1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 53


1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 54


1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 55


1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1134              		.loc 1 1952 0
 1135              		.cfi_startproc
 1136              	.LVL128:
 1137 0000 10B5     		push	{r4, lr}
 1138              		.cfi_def_cfa_offset 8
 1139              		.cfi_offset 4, -8
 1140              		.cfi_offset 14, -4
 1141 0002 82B0     		sub	sp, sp, #8
 1142              		.cfi_def_cfa_offset 16
 1143 0004 041C     		mov	r4, r0
 1144              	.LVL129:
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 1145              		.loc 1 1975 0
 1146 0006 0B4B     		ldr	r3, .L104
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 56


 1147 0008 1A5C     		ldrb	r2, [r3, r0]
 1148 000a 0020     		mov	r0, #0
 1149              	.LVL130:
 1150 000c 0521     		mov	r1, #5
 1151 000e FFF7FEFF 		bl	CapSense_FindMaximum
 1152              	.LVL131:
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 1153              		.loc 1 1978 0
 1154 0012 FF28     		cmp	r0, #255
 1155 0014 0AD0     		beq	.L103
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 1156              		.loc 1 1981 0
 1157 0016 084B     		ldr	r3, .L104+4
 1158 0018 1B5D     		ldrb	r3, [r3, r4]
 1159 001a 0093     		str	r3, [sp]
 1160 001c 0021     		mov	r1, #0
 1161 001e 0522     		mov	r2, #5
 1162 0020 C823     		mov	r3, #200
 1163 0022 5B01     		lsl	r3, r3, #5
 1164 0024 FFF7FEFF 		bl	CapSense_CalcCentroid
 1165              	.LVL132:
 1166 0028 80B2     		uxth	r0, r0
 1167              	.LVL133:
 1168 002a 00E0     		b	.L102
 1169              	.LVL134:
 1170              	.L103:
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 57


2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 58


2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 1171              		.loc 1 2086 0
 1172 002c 0348     		ldr	r0, .L104+8
 1173              	.LVL135:
 1174              	.L102:
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1175              		.loc 1 2098 0
 1176 002e 02B0     		add	sp, sp, #8
 1177              		@ sp needed
 1178              	.LVL136:
 1179 0030 10BD     		pop	{r4, pc}
 1180              	.L105:
 1181 0032 C046     		.align	2
 1182              	.L104:
 1183 0034 00000000 		.word	CapSense_fingerThreshold
 1184 0038 00000000 		.word	CapSense_noiseThreshold
 1185 003c FFFF0000 		.word	65535
 1186              		.cfi_endproc
 1187              	.LFE64:
 1188              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 1189              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 1190              		.align	2
 1191              		.global	CapSense_MedianFilter
 1192              		.code	16
 1193              		.thumb_func
 1194              		.type	CapSense_MedianFilter, %function
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 59


 1195              	CapSense_MedianFilter:
 1196              	.LFB65:
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 60


2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 61


2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 62


2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 63


2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 64


 1197              		.loc 1 2381 0
 1198              		.cfi_startproc
 1199              	.LVL137:
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 1200              		.loc 1 2384 0
 1201 0000 8842     		cmp	r0, r1
 1202 0002 02D9     		bls	.L107
 1203 0004 031C     		mov	r3, r0
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1204              		.loc 1 2388 0
 1205 0006 081C     		mov	r0, r1
 1206              	.LVL138:
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1207              		.loc 1 2387 0
 1208 0008 191C     		mov	r1, r3
 1209              	.LVL139:
 1210              	.L107:
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1211              		.loc 1 2391 0
 1212 000a 9142     		cmp	r1, r2
 1213 000c 00D9     		bls	.L108
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1214              		.loc 1 2393 0
 1215 000e 111C     		mov	r1, r2
 1216              	.LVL140:
 1217              	.L108:
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1218              		.loc 1 2396 0
 1219 0010 0B1C     		add	r3, r1, #0
 1220 0012 8142     		cmp	r1, r0
 1221 0014 00D2     		bcs	.L109
 1222 0016 031C     		add	r3, r0, #0
 1223              	.L109:
 1224 0018 98B2     		uxth	r0, r3
 1225              	.LVL141:
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1226              		.loc 1 2397 0
 1227              		@ sp needed
 1228 001a 7047     		bx	lr
 1229              		.cfi_endproc
 1230              	.LFE65:
 1231              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 1232              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1233              		.align	2
 1234              		.global	CapSense_IIR4Filter
 1235              		.code	16
 1236              		.thumb_func
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 65


 1237              		.type	CapSense_IIR4Filter, %function
 1238              	CapSense_IIR4Filter:
 1239              	.LFB66:
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 66


2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1240              		.loc 1 2501 0
 1241              		.cfi_startproc
 1242              	.LVL142:
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 67


 1243              		.loc 1 2505 0
 1244 0000 4318     		add	r3, r0, r1
 1245              	.LVL143:
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1246              		.loc 1 2506 0
 1247 0002 4900     		lsl	r1, r1, #1
 1248              	.LVL144:
 1249 0004 C818     		add	r0, r1, r3
 1250              	.LVL145:
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 1251              		.loc 1 2507 0
 1252 0006 8008     		lsr	r0, r0, #2
 1253              	.LVL146:
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 1254              		.loc 1 2509 0
 1255 0008 80B2     		uxth	r0, r0
 1256              	.LVL147:
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1257              		.loc 1 2510 0
 1258              		@ sp needed
 1259 000a 7047     		bx	lr
 1260              		.cfi_endproc
 1261              	.LFE66:
 1262              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1263              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 1264              		.align	2
 1265              		.global	CapSense_UpdateBaselineNoThreshold
 1266              		.code	16
 1267              		.thumb_func
 1268              		.type	CapSense_UpdateBaselineNoThreshold, %function
 1269              	CapSense_UpdateBaselineNoThreshold:
 1270              	.LFB38:
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 1271              		.loc 1 355 0
 1272              		.cfi_startproc
 1273              	.LVL148:
 1274 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1275              		.cfi_def_cfa_offset 20
 1276              		.cfi_offset 4, -20
 1277              		.cfi_offset 5, -16
 1278              		.cfi_offset 6, -12
 1279              		.cfi_offset 7, -8
 1280              		.cfi_offset 14, -4
 1281 0002 4746     		mov	r7, r8
 1282 0004 80B4     		push	{r7}
 1283              		.cfi_def_cfa_offset 24
 1284              		.cfi_offset 8, -24
 1285 0006 82B0     		sub	sp, sp, #8
 1286              		.cfi_def_cfa_offset 32
 1287 0008 041C     		mov	r4, r0
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 1288              		.loc 1 360 0
 1289 000a 3B4B     		ldr	r3, .L124
 1290 000c 1E5C     		ldrb	r6, [r3, r0]
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 1291              		.loc 1 369 0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 68


 1292 000e 3B4B     		ldr	r3, .L124+4
 1293 0010 9B5D     		ldrb	r3, [r3, r6]
 1294 0012 0193     		str	r3, [sp, #4]
 1295              	.LVL149:
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1296              		.loc 1 370 0
 1297 0014 4200     		lsl	r2, r0, #1
 1298 0016 3A4B     		ldr	r3, .L124+8
 1299 0018 D75A     		ldrh	r7, [r2, r3]
 1300              	.LVL150:
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1301              		.loc 1 373 0
 1302 001a 3A4B     		ldr	r3, .L124+12
 1303 001c 5B7A     		ldrb	r3, [r3, #9]
 1304 001e 002B     		cmp	r3, #0
 1305 0020 08D0     		beq	.L114
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 1306              		.loc 1 394 0
 1307 0022 394D     		ldr	r5, .L124+16
 1308 0024 9046     		mov	r8, r2
 1309 0026 515B     		ldrh	r1, [r2, r5]
 1310 0028 381C     		mov	r0, r7
 1311              	.LVL151:
 1312 002a FFF7FEFF 		bl	CapSense_IIR4Filter
 1313              	.LVL152:
 1314 002e 071C     		mov	r7, r0
 1315              	.LVL153:
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1316              		.loc 1 395 0
 1317 0030 4346     		mov	r3, r8
 1318 0032 5853     		strh	r0, [r3, r5]
 1319              	.LVL154:
 1320              	.L114:
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1321              		.loc 1 416 0
 1322 0034 E1B2     		uxtb	r1, r4
 1323 0036 3548     		ldr	r0, .L124+20
 1324 0038 314A     		ldr	r2, .L124+8
 1325 003a FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 1326              	.LVL155:
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1327              		.loc 1 421 0
 1328 003e 6300     		lsl	r3, r4, #1
 1329 0040 334A     		ldr	r2, .L124+24
 1330 0042 9A5A     		ldrh	r2, [r3, r2]
 1331 0044 BA42     		cmp	r2, r7
 1332 0046 07D8     		bhi	.L115
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1333              		.loc 1 423 0
 1334 0048 0021     		mov	r1, #0
 1335 004a 324B     		ldr	r3, .L124+28
 1336 004c 1955     		strb	r1, [r3, r4]
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1337              		.loc 1 424 0
 1338 004e BD1A     		sub	r5, r7, r2
 1339 0050 ADB2     		uxth	r5, r5
 1340              	.LVL156:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 69


 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1341              		.loc 1 425 0
 1342 0052 0123     		mov	r3, #1
 1343 0054 9846     		mov	r8, r3
 1344 0056 03E0     		b	.L116
 1345              	.LVL157:
 1346              	.L115:
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1347              		.loc 1 429 0
 1348 0058 D51B     		sub	r5, r2, r7
 1349 005a ADB2     		uxth	r5, r5
 1350              	.LVL158:
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1351              		.loc 1 430 0
 1352 005c 0023     		mov	r3, #0
 1353 005e 9846     		mov	r8, r3
 1354              	.LVL159:
 1355              	.L116:
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1356              		.loc 1 434 0
 1357 0060 4346     		mov	r3, r8
 1358 0062 002B     		cmp	r3, #0
 1359 0064 15D1     		bne	.L117
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1360              		.loc 1 434 0 is_stmt 0 discriminator 1
 1361 0066 2C4B     		ldr	r3, .L124+32
 1362 0068 9B5D     		ldrb	r3, [r3, r6]
 1363 006a AB42     		cmp	r3, r5
 1364 006c 11D2     		bcs	.L117
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1365              		.loc 1 439 0 is_stmt 1
 1366 006e 294B     		ldr	r3, .L124+28
 1367 0070 1B5D     		ldrb	r3, [r3, r4]
 1368 0072 244A     		ldr	r2, .L124+12
 1369 0074 1219     		add	r2, r2, r4
 1370 0076 1279     		ldrb	r2, [r2, #4]
 1371 0078 9342     		cmp	r3, r2
 1372 007a 06D3     		bcc	.L118
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1373              		.loc 1 441 0
 1374 007c 201C     		mov	r0, r4
 1375 007e FFF7FEFF 		bl	CapSense_BaseInit
 1376              	.LVL160:
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1377              		.loc 1 442 0
 1378 0082 0022     		mov	r2, #0
 1379 0084 234B     		ldr	r3, .L124+28
 1380 0086 1A55     		strb	r2, [r3, r4]
 1381 0088 1CE0     		b	.L119
 1382              	.L118:
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1383              		.loc 1 446 0
 1384 008a 0133     		add	r3, r3, #1
 1385 008c 214A     		ldr	r2, .L124+28
 1386 008e 1355     		strb	r3, [r2, r4]
 1387 0090 18E0     		b	.L119
 1388              	.L117:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 70


 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1389              		.loc 1 454 0
 1390 0092 6B46     		mov	r3, sp
 1391 0094 9B88     		ldrh	r3, [r3, #4]
 1392 0096 AB42     		cmp	r3, r5
 1393 0098 06D2     		bcs	.L120
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 1394              		.loc 1 455 0 discriminator 1
 1395 009a 1F4B     		ldr	r3, .L124+32
 1396 009c 9B5D     		ldrb	r3, [r3, r6]
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1397              		.loc 1 454 0 discriminator 1
 1398 009e AB42     		cmp	r3, r5
 1399 00a0 10D9     		bls	.L119
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1400              		.loc 1 456 0
 1401 00a2 4346     		mov	r3, r8
 1402 00a4 002B     		cmp	r3, #0
 1403 00a6 0DD1     		bne	.L119
 1404              	.L120:
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1405              		.loc 1 467 0
 1406 00a8 1302     		lsl	r3, r2, #8
 1407              	.LVL161:
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1408              		.loc 1 468 0
 1409 00aa 1948     		ldr	r0, .L124+24
 1410 00ac 0119     		add	r1, r0, r4
 1411 00ae 0E7B     		ldrb	r6, [r1, #12]
 1412 00b0 3343     		orr	r3, r6
 1413              	.LVL162:
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1414              		.loc 1 471 0
 1415 00b2 FF18     		add	r7, r7, r3
 1416              	.LVL163:
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1417              		.loc 1 474 0
 1418 00b4 BF1A     		sub	r7, r7, r2
 1419              	.LVL164:
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1420              		.loc 1 477 0
 1421 00b6 3A0A     		lsr	r2, r7, #8
 1422 00b8 6300     		lsl	r3, r4, #1
 1423 00ba C252     		strh	r2, [r0, r3]
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1424              		.loc 1 478 0
 1425 00bc 0F73     		strb	r7, [r1, #12]
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 1426              		.loc 1 480 0
 1427 00be 0022     		mov	r2, #0
 1428 00c0 144B     		ldr	r3, .L124+28
 1429 00c2 1A55     		strb	r2, [r3, r4]
 1430              	.LVL165:
 1431              	.L119:
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1432              		.loc 1 487 0
 1433 00c4 6B46     		mov	r3, sp
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 71


 1434 00c6 9E88     		ldrh	r6, [r3, #4]
 1435 00c8 AE42     		cmp	r6, r5
 1436 00ca 0DD2     		bcs	.L121
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1437              		.loc 1 487 0 is_stmt 0 discriminator 1
 1438 00cc 4346     		mov	r3, r8
 1439 00ce 002B     		cmp	r3, #0
 1440 00d0 0AD0     		beq	.L121
 1441              	.LVL166:
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1442              		.loc 1 491 0 is_stmt 1
 1443 00d2 FF2D     		cmp	r5, #255
 1444 00d4 04D9     		bls	.L122
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1445              		.loc 1 493 0
 1446 00d6 0E4B     		ldr	r3, .L124+24
 1447              	.LVL167:
 1448 00d8 1C19     		add	r4, r3, r4
 1449              	.LVL168:
 1450 00da FF23     		mov	r3, #255
 1451 00dc 2375     		strb	r3, [r4, #20]
 1452 00de 07E0     		b	.L113
 1453              	.LVL169:
 1454              	.L122:
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1455              		.loc 1 497 0
 1456 00e0 0B4B     		ldr	r3, .L124+24
 1457              	.LVL170:
 1458 00e2 1C19     		add	r4, r3, r4
 1459              	.LVL171:
 1460 00e4 2575     		strb	r5, [r4, #20]
 1461 00e6 03E0     		b	.L113
 1462              	.LVL172:
 1463              	.L121:
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1464              		.loc 1 506 0
 1465 00e8 094B     		ldr	r3, .L124+24
 1466 00ea 1C19     		add	r4, r3, r4
 1467              	.LVL173:
 1468 00ec 0023     		mov	r3, #0
 1469 00ee 2375     		strb	r3, [r4, #20]
 1470              	.L113:
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1471              		.loc 1 513 0
 1472 00f0 02B0     		add	sp, sp, #8
 1473              		@ sp needed
 1474              	.LVL174:
 1475              	.LVL175:
 1476 00f2 04BC     		pop	{r2}
 1477 00f4 9046     		mov	r8, r2
 1478 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1479              	.L125:
 1480              		.align	2
 1481              	.L124:
 1482 00f8 00000000 		.word	CapSense_widgetNumber
 1483 00fc 00000000 		.word	CapSense_noiseThreshold
 1484 0100 00000000 		.word	CapSense_sensorRaw
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 72


 1485 0104 00000000 		.word	.LANCHOR1
 1486 0108 00000000 		.word	CapSense_rawFilterData1
 1487 010c 00000000 		.word	CapSense_config
 1488 0110 00000000 		.word	.LANCHOR0
 1489 0114 00000000 		.word	CapSense_lowBaselineResetCnt
 1490 0118 00000000 		.word	CapSense_negativeNoiseThreshold
 1491              		.cfi_endproc
 1492              	.LFE38:
 1493              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1494              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 1495              		.align	2
 1496              		.global	CapSense_UpdateSensorBaseline
 1497              		.code	16
 1498              		.thumb_func
 1499              		.type	CapSense_UpdateSensorBaseline, %function
 1500              	CapSense_UpdateSensorBaseline:
 1501              	.LFB39:
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 1502              		.loc 1 547 0
 1503              		.cfi_startproc
 1504              	.LVL176:
 1505 0000 10B5     		push	{r4, lr}
 1506              		.cfi_def_cfa_offset 8
 1507              		.cfi_offset 4, -8
 1508              		.cfi_offset 14, -4
 1509 0002 041C     		mov	r4, r0
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1510              		.loc 1 559 0
 1511 0004 FFF7FEFF 		bl	CapSense_UpdateThresholds
 1512              	.LVL177:
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1513              		.loc 1 562 0
 1514 0008 201C     		mov	r0, r4
 1515 000a FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1516              	.LVL178:
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1517              		.loc 1 568 0
 1518              		@ sp needed
 1519              	.LVL179:
 1520 000e 10BD     		pop	{r4, pc}
 1521              		.cfi_endproc
 1522              	.LFE39:
 1523              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1524              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1525              		.align	2
 1526              		.global	CapSense_UpdateEnabledBaselines
 1527              		.code	16
 1528              		.thumb_func
 1529              		.type	CapSense_UpdateEnabledBaselines, %function
 1530              	CapSense_UpdateEnabledBaselines:
 1531              	.LFB40:
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 1532              		.loc 1 601 0
 1533              		.cfi_startproc
 1534 0000 10B5     		push	{r4, lr}
 1535              		.cfi_def_cfa_offset 8
 1536              		.cfi_offset 4, -8
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 73


 1537              		.cfi_offset 14, -4
 1538              	.LVL180:
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1539              		.loc 1 605 0
 1540 0002 0024     		mov	r4, #0
 1541 0004 09E0     		b	.L128
 1542              	.LVL181:
 1543              	.L130:
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1544              		.loc 1 607 0
 1545 0006 0648     		ldr	r0, .L131
 1546 0008 211C     		mov	r1, r4
 1547 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1548              	.LVL182:
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1549              		.loc 1 609 0
 1550 000e 0028     		cmp	r0, #0
 1551 0010 02D0     		beq	.L129
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1552              		.loc 1 611 0
 1553 0012 201C     		mov	r0, r4
 1554              	.LVL183:
 1555 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1556              	.LVL184:
 1557              	.L129:
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1558              		.loc 1 605 0 discriminator 2
 1559 0018 0134     		add	r4, r4, #1
 1560              	.LVL185:
 1561              	.L128:
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1562              		.loc 1 605 0 is_stmt 0 discriminator 1
 1563 001a 042C     		cmp	r4, #4
 1564 001c F3D9     		bls	.L130
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1565              		.loc 1 614 0 is_stmt 1
 1566              		@ sp needed
 1567              	.LVL186:
 1568 001e 10BD     		pop	{r4, pc}
 1569              	.L132:
 1570              		.align	2
 1571              	.L131:
 1572 0020 00000000 		.word	CapSense_sensorEnableMask
 1573              		.cfi_endproc
 1574              	.LFE40:
 1575              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1576              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1577              		.align	2
 1578              		.global	CapSense_UpdateWidgetBaseline
 1579              		.code	16
 1580              		.thumb_func
 1581              		.type	CapSense_UpdateWidgetBaseline, %function
 1582              	CapSense_UpdateWidgetBaseline:
 1583              	.LFB41:
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 1584              		.loc 1 646 0
 1585              		.cfi_startproc
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 74


 1586              	.LVL187:
 1587 0000 10B5     		push	{r4, lr}
 1588              		.cfi_def_cfa_offset 8
 1589              		.cfi_offset 4, -8
 1590              		.cfi_offset 14, -4
 1591              	.LVL188:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1592              		.loc 1 662 0
 1593 0002 0024     		mov	r4, #0
 1594 0004 09E0     		b	.L134
 1595              	.LVL189:
 1596              	.L136:
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1597              		.loc 1 664 0
 1598 0006 0648     		ldr	r0, .L137
 1599 0008 211C     		mov	r1, r4
 1600 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1601              	.LVL190:
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1602              		.loc 1 666 0
 1603 000e 0028     		cmp	r0, #0
 1604 0010 02D0     		beq	.L135
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1605              		.loc 1 668 0
 1606 0012 201C     		mov	r0, r4
 1607              	.LVL191:
 1608 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1609              	.LVL192:
 1610              	.L135:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1611              		.loc 1 662 0 discriminator 2
 1612 0018 0134     		add	r4, r4, #1
 1613              	.LVL193:
 1614              	.L134:
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1615              		.loc 1 662 0 is_stmt 0 discriminator 1
 1616 001a 042C     		cmp	r4, #4
 1617 001c F3D9     		bls	.L136
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1618              		.loc 1 671 0 is_stmt 1
 1619              		@ sp needed
 1620              	.LVL194:
 1621 001e 10BD     		pop	{r4, pc}
 1622              	.L138:
 1623              		.align	2
 1624              	.L137:
 1625 0020 00000000 		.word	CapSense_sensorEnableMask
 1626              		.cfi_endproc
 1627              	.LFE41:
 1628              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1629              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1630              		.align	2
 1631              		.global	CapSense_GetCentroidPos
 1632              		.code	16
 1633              		.thumb_func
 1634              		.type	CapSense_GetCentroidPos, %function
 1635              	CapSense_GetCentroidPos:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 75


 1636              	.LFB63:
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
 1637              		.loc 1 1749 0
 1638              		.cfi_startproc
 1639              	.LVL195:
 1640 0000 30B5     		push	{r4, r5, lr}
 1641              		.cfi_def_cfa_offset 12
 1642              		.cfi_offset 4, -12
 1643              		.cfi_offset 5, -8
 1644              		.cfi_offset 14, -4
 1645 0002 83B0     		sub	sp, sp, #12
 1646              		.cfi_def_cfa_offset 24
 1647 0004 041C     		mov	r4, r0
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
 1648              		.loc 1 1756 0
 1649 0006 194B     		ldr	r3, .L143
 1650 0008 1B18     		add	r3, r3, r0
 1651 000a 1D7B     		ldrb	r5, [r3, #12]
 1652              	.LVL196:
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 1653              		.loc 1 1788 0
 1654 000c 184B     		ldr	r3, .L143+4
 1655 000e 1A5C     		ldrb	r2, [r3, r0]
 1656 0010 0020     		mov	r0, #0
 1657              	.LVL197:
 1658 0012 0521     		mov	r1, #5
 1659 0014 FFF7FEFF 		bl	CapSense_FindMaximum
 1660              	.LVL198:
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1661              		.loc 1 1791 0
 1662 0018 FF28     		cmp	r0, #255
 1663 001a 20D0     		beq	.L140
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
 1664              		.loc 1 1794 0
 1665 001c 154B     		ldr	r3, .L143+8
 1666 001e 1B5D     		ldrb	r3, [r3, r4]
 1667 0020 0093     		str	r3, [sp]
 1668 0022 0021     		mov	r1, #0
 1669 0024 0522     		mov	r2, #5
 1670 0026 C823     		mov	r3, #200
 1671 0028 5B01     		lsl	r3, r3, #5
 1672 002a FFF7FEFF 		bl	CapSense_CalcCentroid
 1673              	.LVL199:
 1674 002e 011C     		mov	r1, r0
 1675 0030 80B2     		uxth	r0, r0
 1676              	.LVL200:
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1677              		.loc 1 1802 0
 1678 0032 6B1C     		add	r3, r5, #1
 1679 0034 DBB2     		uxtb	r3, r3
 1680              	.LVL201:
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
 1681              		.loc 1 1804 0
 1682 0036 0D4A     		ldr	r2, .L143
 1683 0038 5219     		add	r2, r2, r5
 1684 003a 127B     		ldrb	r2, [r2, #12]
 1685 003c 002A     		cmp	r2, #0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 76


 1686 003e 06D1     		bne	.L141
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
 1687              		.loc 1 1807 0
 1688 0040 0A4A     		ldr	r2, .L143
 1689 0042 D318     		add	r3, r2, r3
 1690              	.LVL202:
 1691 0044 1973     		strb	r1, [r3, #12]
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
 1692              		.loc 1 1824 0
 1693 0046 5519     		add	r5, r2, r5
 1694              	.LVL203:
 1695 0048 0123     		mov	r3, #1
 1696 004a 2B73     		strb	r3, [r5, #12]
 1697 004c 0CE0     		b	.L142
 1698              	.LVL204:
 1699              	.L141:
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 1700              		.loc 1 1873 0
 1701 004e 074C     		ldr	r4, .L143
 1702              	.LVL205:
 1703 0050 E418     		add	r4, r4, r3
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 1704              		.loc 1 1872 0
 1705 0052 217B     		ldrb	r1, [r4, #12]
 1706 0054 FFF7FEFF 		bl	CapSense_IIR4Filter
 1707              	.LVL206:
 1708 0058 031C     		mov	r3, r0
 1709              	.LVL207:
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
 1710              		.loc 1 1874 0
 1711 005a 2373     		strb	r3, [r4, #12]
 1712 005c 04E0     		b	.L142
 1713              	.LVL208:
 1714              	.L140:
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
 1715              		.loc 1 1904 0
 1716 005e 034B     		ldr	r3, .L143
 1717 0060 5D19     		add	r5, r3, r5
 1718              	.LVL209:
 1719 0062 0023     		mov	r3, #0
 1720 0064 2B73     		strb	r3, [r5, #12]
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1721              		.loc 1 1898 0
 1722 0066 0448     		ldr	r0, .L143+12
 1723              	.LVL210:
 1724              	.L142:
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
 1725              		.loc 1 1911 0
 1726 0068 03B0     		add	sp, sp, #12
 1727              		@ sp needed
 1728 006a 30BD     		pop	{r4, r5, pc}
 1729              	.L144:
 1730              		.align	2
 1731              	.L143:
 1732 006c 00000000 		.word	.LANCHOR1
 1733 0070 00000000 		.word	CapSense_fingerThreshold
 1734 0074 00000000 		.word	CapSense_noiseThreshold
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 77


 1735 0078 FFFF0000 		.word	65535
 1736              		.cfi_endproc
 1737              	.LFE63:
 1738              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1739              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1740              		.align	2
 1741              		.global	CapSense_GetWidgetNumber
 1742              		.code	16
 1743              		.thumb_func
 1744              		.type	CapSense_GetWidgetNumber, %function
 1745              	CapSense_GetWidgetNumber:
 1746              	.LFB67:
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 78


2556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 79


2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 80


2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 81


2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1747              		.loc 1 2734 0
 1748              		.cfi_startproc
 1749              	.LVL211:
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 1750              		.loc 1 2735 0
 1751 0000 014B     		ldr	r3, .L146
 1752 0002 185C     		ldrb	r0, [r3, r0]
 1753              	.LVL212:
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1754              		.loc 1 2736 0
 1755              		@ sp needed
 1756 0004 7047     		bx	lr
 1757              	.L147:
 1758 0006 C046     		.align	2
 1759              	.L146:
 1760 0008 00000000 		.word	CapSense_widgetNumber
 1761              		.cfi_endproc
 1762              	.LFE67:
 1763              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1764              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1765              		.align	2
 1766              		.global	CapSense_GetLowBaselineReset
 1767              		.code	16
 1768              		.thumb_func
 1769              		.type	CapSense_GetLowBaselineReset, %function
 1770              	CapSense_GetLowBaselineReset:
 1771              	.LFB68:
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 82


2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1772              		.loc 1 2760 0
 1773              		.cfi_startproc
 1774              	.LVL213:
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 1775              		.loc 1 2761 0
 1776 0000 014B     		ldr	r3, .L149
 1777 0002 1818     		add	r0, r3, r0
 1778              	.LVL214:
 1779 0004 0079     		ldrb	r0, [r0, #4]
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1780              		.loc 1 2762 0
 1781              		@ sp needed
 1782 0006 7047     		bx	lr
 1783              	.L150:
 1784              		.align	2
 1785              	.L149:
 1786 0008 00000000 		.word	.LANCHOR1
 1787              		.cfi_endproc
 1788              	.LFE68:
 1789              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1790              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1791              		.align	2
 1792              		.global	CapSense_GetDebounce
 1793              		.code	16
 1794              		.thumb_func
 1795              		.type	CapSense_GetDebounce, %function
 1796              	CapSense_GetDebounce:
 1797              	.LFB69:
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1798              		.loc 1 2786 0
 1799              		.cfi_startproc
 1800              	.LVL215:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 83


2787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 1801              		.loc 1 2787 0
 1802 0000 014B     		ldr	r3, .L152
 1803 0002 185C     		ldrb	r0, [r3, r0]
 1804              	.LVL216:
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1805              		.loc 1 2788 0
 1806              		@ sp needed
 1807 0004 7047     		bx	lr
 1808              	.L153:
 1809 0006 C046     		.align	2
 1810              	.L152:
 1811 0008 00000000 		.word	.LANCHOR1
 1812              		.cfi_endproc
 1813              	.LFE69:
 1814              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1815              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1816              		.align	2
 1817              		.global	CapSense_EnableRawDataFilters
 1818              		.code	16
 1819              		.thumb_func
 1820              		.type	CapSense_EnableRawDataFilters, %function
 1821              	CapSense_EnableRawDataFilters:
 1822              	.LFB70:
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1823              		.loc 1 2812 0
 1824              		.cfi_startproc
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1825              		.loc 1 2813 0
 1826 0000 0122     		mov	r2, #1
 1827 0002 014B     		ldr	r3, .L155
 1828 0004 5A72     		strb	r2, [r3, #9]
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1829              		.loc 1 2814 0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 84


 1830              		@ sp needed
 1831 0006 7047     		bx	lr
 1832              	.L156:
 1833              		.align	2
 1834              	.L155:
 1835 0008 00000000 		.word	.LANCHOR1
 1836              		.cfi_endproc
 1837              	.LFE70:
 1838              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1839              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1840              		.align	2
 1841              		.global	CapSense_DisableRawDataFilters
 1842              		.code	16
 1843              		.thumb_func
 1844              		.type	CapSense_DisableRawDataFilters, %function
 1845              	CapSense_DisableRawDataFilters:
 1846              	.LFB71:
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1847              		.loc 1 2837 0
 1848              		.cfi_startproc
2838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1849              		.loc 1 2838 0
 1850 0000 0022     		mov	r2, #0
 1851 0002 014B     		ldr	r3, .L158
 1852 0004 5A72     		strb	r2, [r3, #9]
2839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1853              		.loc 1 2839 0
 1854              		@ sp needed
 1855 0006 7047     		bx	lr
 1856              	.L159:
 1857              		.align	2
 1858              	.L158:
 1859 0008 00000000 		.word	.LANCHOR1
 1860              		.cfi_endproc
 1861              	.LFE71:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 85


 1862              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1863              		.global	CapSense_numberOfSensors
 1864              		.global	CapSense_rawDataIndex
 1865              		.global	CapSense_debounce
 1866              		.comm	CapSense_hysteresis,1,4
 1867              		.comm	CapSense_negativeNoiseThreshold,1,4
 1868              		.comm	CapSense_noiseThreshold,1,4
 1869              		.comm	CapSense_fingerThreshold,1,4
 1870              		.global	CapSense_enableRawFilters
 1871              		.global	CapSense_lowBaselineReset
 1872              		.comm	CapSense_lowBaselineResetCnt,5,4
 1873              		.global	CapSense_sensorOnMask
 1874              		.global	CapSense_sensorSignal
 1875              		.global	CapSense_sensorBaselineLow
 1876              		.global	CapSense_sensorBaseline
 1877              		.comm	CapSense_rawFilterData1,10,4
 1878              		.section	.rodata
 1879              		.align	2
 1880              		.type	CapSense_numberOfSensors, %object
 1881              		.size	CapSense_numberOfSensors, 1
 1882              	CapSense_numberOfSensors:
 1883 0000 05       		.byte	5
 1884 0001 000000   		.space	3
 1885              		.type	CapSense_rawDataIndex, %object
 1886              		.size	CapSense_rawDataIndex, 1
 1887              	CapSense_rawDataIndex:
 1888 0004 00       		.space	1
 1889 0005 000000   		.data
 1890              		.align	2
 1891              		.set	.LANCHOR1,. + 0
 1892              		.type	CapSense_debounce, %object
 1893              		.size	CapSense_debounce, 1
 1894              	CapSense_debounce:
 1895 0000 01       		.byte	1
 1896 0001 000000   		.space	3
 1897              		.type	CapSense_lowBaselineReset, %object
 1898              		.size	CapSense_lowBaselineReset, 5
 1899              	CapSense_lowBaselineReset:
 1900 0004 1E       		.byte	30
 1901 0005 1E       		.byte	30
 1902 0006 1E       		.byte	30
 1903 0007 1E       		.byte	30
 1904 0008 1E       		.byte	30
 1905              		.type	CapSense_enableRawFilters, %object
 1906              		.size	CapSense_enableRawFilters, 1
 1907              	CapSense_enableRawFilters:
 1908 0009 01       		.byte	1
 1909 000a 0000     		.space	2
 1910              		.type	CapSense_posFiltersData, %object
 1911              		.size	CapSense_posFiltersData, 3
 1912              	CapSense_posFiltersData:
 1913 000c 01       		.byte	1
 1914 000d 00       		.byte	0
 1915 000e 00       		.byte	0
 1916 000f 00       		.bss
 1917              		.align	2
 1918              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 86


 1919              		.type	CapSense_sensorBaseline, %object
 1920              		.size	CapSense_sensorBaseline, 10
 1921              	CapSense_sensorBaseline:
 1922 0000 00000000 		.space	10
 1922      00000000 
 1922      0000
 1923 000a 0000     		.space	2
 1924              		.type	CapSense_sensorBaselineLow, %object
 1925              		.size	CapSense_sensorBaselineLow, 5
 1926              	CapSense_sensorBaselineLow:
 1927 000c 00000000 		.space	5
 1927      00
 1928 0011 000000   		.space	3
 1929              		.type	CapSense_sensorSignal, %object
 1930              		.size	CapSense_sensorSignal, 5
 1931              	CapSense_sensorSignal:
 1932 0014 00000000 		.space	5
 1932      00
 1933 0019 000000   		.space	3
 1934              		.type	CapSense_debounceCounter.5362, %object
 1935              		.size	CapSense_debounceCounter.5362, 1
 1936              	CapSense_debounceCounter.5362:
 1937 001c 00       		.space	1
 1938 001d 000000   		.space	3
 1939              		.type	CapSense_sensorOnMask, %object
 1940              		.size	CapSense_sensorOnMask, 1
 1941              	CapSense_sensorOnMask:
 1942 0020 00       		.space	1
 1943 0021 000000   		.space	3
 1944              		.type	CapSense_centroid.5414, %object
 1945              		.size	CapSense_centroid.5414, 3
 1946              	CapSense_centroid.5414:
 1947 0024 000000   		.space	3
 1948 0027 00       		.text
 1949              	.Letext0:
 1950              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1951              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 1952              		.file 4 ".\\Generated_Source\\PSoC4\\CapSense.h"
 1953              		.section	.debug_info,"",%progbits
 1954              	.Ldebug_info0:
 1955 0000 26110000 		.4byte	0x1126
 1956 0004 0400     		.2byte	0x4
 1957 0006 00000000 		.4byte	.Ldebug_abbrev0
 1958 000a 04       		.byte	0x4
 1959 000b 01       		.uleb128 0x1
 1960 000c 28080000 		.4byte	.LASF148
 1961 0010 01       		.byte	0x1
 1962 0011 FE050000 		.4byte	.LASF149
 1963 0015 48090000 		.4byte	.LASF150
 1964 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1965 001d 00000000 		.4byte	0
 1966 0021 00000000 		.4byte	.Ldebug_line0
 1967 0025 02       		.uleb128 0x2
 1968 0026 01       		.byte	0x1
 1969 0027 06       		.byte	0x6
 1970 0028 CD0A0000 		.4byte	.LASF0
 1971 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 87


 1972 002d 01       		.byte	0x1
 1973 002e 08       		.byte	0x8
 1974 002f CA090000 		.4byte	.LASF1
 1975 0033 02       		.uleb128 0x2
 1976 0034 02       		.byte	0x2
 1977 0035 05       		.byte	0x5
 1978 0036 EF070000 		.4byte	.LASF2
 1979 003a 02       		.uleb128 0x2
 1980 003b 02       		.byte	0x2
 1981 003c 07       		.byte	0x7
 1982 003d D90A0000 		.4byte	.LASF3
 1983 0041 02       		.uleb128 0x2
 1984 0042 04       		.byte	0x4
 1985 0043 05       		.byte	0x5
 1986 0044 F9070000 		.4byte	.LASF4
 1987 0048 02       		.uleb128 0x2
 1988 0049 04       		.byte	0x4
 1989 004a 07       		.byte	0x7
 1990 004b 2D090000 		.4byte	.LASF5
 1991 004f 02       		.uleb128 0x2
 1992 0050 08       		.byte	0x8
 1993 0051 05       		.byte	0x5
 1994 0052 27060000 		.4byte	.LASF6
 1995 0056 02       		.uleb128 0x2
 1996 0057 08       		.byte	0x8
 1997 0058 07       		.byte	0x7
 1998 0059 30030000 		.4byte	.LASF7
 1999 005d 03       		.uleb128 0x3
 2000 005e 04       		.byte	0x4
 2001 005f 05       		.byte	0x5
 2002 0060 696E7400 		.ascii	"int\000"
 2003 0064 02       		.uleb128 0x2
 2004 0065 04       		.byte	0x4
 2005 0066 07       		.byte	0x7
 2006 0067 21010000 		.4byte	.LASF8
 2007 006b 04       		.uleb128 0x4
 2008 006c 690B0000 		.4byte	.LASF9
 2009 0070 02       		.byte	0x2
 2010 0071 3801     		.2byte	0x138
 2011 0073 2C000000 		.4byte	0x2c
 2012 0077 04       		.uleb128 0x4
 2013 0078 87050000 		.4byte	.LASF10
 2014 007c 02       		.byte	0x2
 2015 007d 3901     		.2byte	0x139
 2016 007f 3A000000 		.4byte	0x3a
 2017 0083 04       		.uleb128 0x4
 2018 0084 2F070000 		.4byte	.LASF11
 2019 0088 02       		.byte	0x2
 2020 0089 3A01     		.2byte	0x13a
 2021 008b 48000000 		.4byte	0x48
 2022 008f 04       		.uleb128 0x4
 2023 0090 46010000 		.4byte	.LASF12
 2024 0094 02       		.byte	0x2
 2025 0095 3C01     		.2byte	0x13c
 2026 0097 33000000 		.4byte	0x33
 2027 009b 04       		.uleb128 0x4
 2028 009c D6020000 		.4byte	.LASF13
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 88


 2029 00a0 02       		.byte	0x2
 2030 00a1 3D01     		.2byte	0x13d
 2031 00a3 41000000 		.4byte	0x41
 2032 00a7 02       		.uleb128 0x2
 2033 00a8 04       		.byte	0x4
 2034 00a9 04       		.byte	0x4
 2035 00aa D0020000 		.4byte	.LASF14
 2036 00ae 02       		.uleb128 0x2
 2037 00af 08       		.byte	0x8
 2038 00b0 04       		.byte	0x4
 2039 00b1 6F0B0000 		.4byte	.LASF15
 2040 00b5 02       		.uleb128 0x2
 2041 00b6 01       		.byte	0x1
 2042 00b7 08       		.byte	0x8
 2043 00b8 50050000 		.4byte	.LASF16
 2044 00bc 02       		.uleb128 0x2
 2045 00bd 04       		.byte	0x4
 2046 00be 07       		.byte	0x7
 2047 00bf 24090000 		.4byte	.LASF17
 2048 00c3 05       		.uleb128 0x5
 2049 00c4 04       		.byte	0x4
 2050 00c5 06       		.uleb128 0x6
 2051 00c6 5C       		.byte	0x5c
 2052 00c7 03       		.byte	0x3
 2053 00c8 2F       		.byte	0x2f
 2054 00c9 E2010000 		.4byte	0x1e2
 2055 00cd 07       		.uleb128 0x7
 2056 00ce 93050000 		.4byte	.LASF18
 2057 00d2 03       		.byte	0x3
 2058 00d3 31       		.byte	0x31
 2059 00d4 E2010000 		.4byte	0x1e2
 2060 00d8 00       		.byte	0
 2061 00d9 07       		.uleb128 0x7
 2062 00da E0070000 		.4byte	.LASF19
 2063 00de 03       		.byte	0x3
 2064 00df 32       		.byte	0x32
 2065 00e0 E2010000 		.4byte	0x1e2
 2066 00e4 04       		.byte	0x4
 2067 00e5 07       		.uleb128 0x7
 2068 00e6 540A0000 		.4byte	.LASF20
 2069 00ea 03       		.byte	0x3
 2070 00eb 33       		.byte	0x33
 2071 00ec E2010000 		.4byte	0x1e2
 2072 00f0 08       		.byte	0x8
 2073 00f1 07       		.uleb128 0x7
 2074 00f2 BD090000 		.4byte	.LASF21
 2075 00f6 03       		.byte	0x3
 2076 00f7 34       		.byte	0x34
 2077 00f8 E2010000 		.4byte	0x1e2
 2078 00fc 0C       		.byte	0xc
 2079 00fd 07       		.uleb128 0x7
 2080 00fe C30A0000 		.4byte	.LASF22
 2081 0102 03       		.byte	0x3
 2082 0103 35       		.byte	0x35
 2083 0104 E2010000 		.4byte	0x1e2
 2084 0108 10       		.byte	0x10
 2085 0109 07       		.uleb128 0x7
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 89


 2086 010a B7070000 		.4byte	.LASF23
 2087 010e 03       		.byte	0x3
 2088 010f 36       		.byte	0x36
 2089 0110 E8010000 		.4byte	0x1e8
 2090 0114 14       		.byte	0x14
 2091 0115 07       		.uleb128 0x7
 2092 0116 E2020000 		.4byte	.LASF24
 2093 011a 03       		.byte	0x3
 2094 011b 37       		.byte	0x37
 2095 011c F3010000 		.4byte	0x1f3
 2096 0120 18       		.byte	0x18
 2097 0121 07       		.uleb128 0x7
 2098 0122 51040000 		.4byte	.LASF25
 2099 0126 03       		.byte	0x3
 2100 0127 38       		.byte	0x38
 2101 0128 E2010000 		.4byte	0x1e2
 2102 012c 1C       		.byte	0x1c
 2103 012d 07       		.uleb128 0x7
 2104 012e 1B030000 		.4byte	.LASF26
 2105 0132 03       		.byte	0x3
 2106 0133 39       		.byte	0x39
 2107 0134 E2010000 		.4byte	0x1e2
 2108 0138 20       		.byte	0x20
 2109 0139 07       		.uleb128 0x7
 2110 013a 95010000 		.4byte	.LASF27
 2111 013e 03       		.byte	0x3
 2112 013f 3A       		.byte	0x3a
 2113 0140 E2010000 		.4byte	0x1e2
 2114 0144 24       		.byte	0x24
 2115 0145 07       		.uleb128 0x7
 2116 0146 CF060000 		.4byte	.LASF28
 2117 014a 03       		.byte	0x3
 2118 014b 3B       		.byte	0x3b
 2119 014c F9010000 		.4byte	0x1f9
 2120 0150 28       		.byte	0x28
 2121 0151 07       		.uleb128 0x7
 2122 0152 4C010000 		.4byte	.LASF29
 2123 0156 03       		.byte	0x3
 2124 0157 3C       		.byte	0x3c
 2125 0158 F9010000 		.4byte	0x1f9
 2126 015c 2C       		.byte	0x2c
 2127 015d 07       		.uleb128 0x7
 2128 015e 86090000 		.4byte	.LASF30
 2129 0162 03       		.byte	0x3
 2130 0163 3D       		.byte	0x3d
 2131 0164 F9010000 		.4byte	0x1f9
 2132 0168 30       		.byte	0x30
 2133 0169 07       		.uleb128 0x7
 2134 016a FA080000 		.4byte	.LASF31
 2135 016e 03       		.byte	0x3
 2136 016f 3E       		.byte	0x3e
 2137 0170 E2010000 		.4byte	0x1e2
 2138 0174 34       		.byte	0x34
 2139 0175 07       		.uleb128 0x7
 2140 0176 48000000 		.4byte	.LASF32
 2141 017a 03       		.byte	0x3
 2142 017b 3F       		.byte	0x3f
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 90


 2143 017c E2010000 		.4byte	0x1e2
 2144 0180 38       		.byte	0x38
 2145 0181 07       		.uleb128 0x7
 2146 0182 78050000 		.4byte	.LASF33
 2147 0186 03       		.byte	0x3
 2148 0187 40       		.byte	0x40
 2149 0188 E8010000 		.4byte	0x1e8
 2150 018c 3C       		.byte	0x3c
 2151 018d 07       		.uleb128 0x7
 2152 018e 20020000 		.4byte	.LASF34
 2153 0192 03       		.byte	0x3
 2154 0193 41       		.byte	0x41
 2155 0194 E8010000 		.4byte	0x1e8
 2156 0198 40       		.byte	0x40
 2157 0199 07       		.uleb128 0x7
 2158 019a 95000000 		.4byte	.LASF35
 2159 019e 03       		.byte	0x3
 2160 019f 42       		.byte	0x42
 2161 01a0 E8010000 		.4byte	0x1e8
 2162 01a4 44       		.byte	0x44
 2163 01a5 07       		.uleb128 0x7
 2164 01a6 7F060000 		.4byte	.LASF36
 2165 01aa 03       		.byte	0x3
 2166 01ab 43       		.byte	0x43
 2167 01ac 0E020000 		.4byte	0x20e
 2168 01b0 48       		.byte	0x48
 2169 01b1 07       		.uleb128 0x7
 2170 01b2 57060000 		.4byte	.LASF37
 2171 01b6 03       		.byte	0x3
 2172 01b7 44       		.byte	0x44
 2173 01b8 1F020000 		.4byte	0x21f
 2174 01bc 4C       		.byte	0x4c
 2175 01bd 07       		.uleb128 0x7
 2176 01be 67040000 		.4byte	.LASF38
 2177 01c2 03       		.byte	0x3
 2178 01c3 45       		.byte	0x45
 2179 01c4 0E020000 		.4byte	0x20e
 2180 01c8 50       		.byte	0x50
 2181 01c9 07       		.uleb128 0x7
 2182 01ca A5000000 		.4byte	.LASF39
 2183 01ce 03       		.byte	0x3
 2184 01cf 46       		.byte	0x46
 2185 01d0 39020000 		.4byte	0x239
 2186 01d4 54       		.byte	0x54
 2187 01d5 07       		.uleb128 0x7
 2188 01d6 0A0B0000 		.4byte	.LASF40
 2189 01da 03       		.byte	0x3
 2190 01db 47       		.byte	0x47
 2191 01dc 54020000 		.4byte	0x254
 2192 01e0 58       		.byte	0x58
 2193 01e1 00       		.byte	0
 2194 01e2 08       		.uleb128 0x8
 2195 01e3 04       		.byte	0x4
 2196 01e4 6B000000 		.4byte	0x6b
 2197 01e8 08       		.uleb128 0x8
 2198 01e9 04       		.byte	0x4
 2199 01ea EE010000 		.4byte	0x1ee
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 91


 2200 01ee 09       		.uleb128 0x9
 2201 01ef 6B000000 		.4byte	0x6b
 2202 01f3 08       		.uleb128 0x8
 2203 01f4 04       		.byte	0x4
 2204 01f5 83000000 		.4byte	0x83
 2205 01f9 08       		.uleb128 0x8
 2206 01fa 04       		.byte	0x4
 2207 01fb 77000000 		.4byte	0x77
 2208 01ff 0A       		.uleb128 0xa
 2209 0200 77000000 		.4byte	0x77
 2210 0204 0E020000 		.4byte	0x20e
 2211 0208 0B       		.uleb128 0xb
 2212 0209 83000000 		.4byte	0x83
 2213 020d 00       		.byte	0
 2214 020e 08       		.uleb128 0x8
 2215 020f 04       		.byte	0x4
 2216 0210 FF010000 		.4byte	0x1ff
 2217 0214 0C       		.uleb128 0xc
 2218 0215 1F020000 		.4byte	0x21f
 2219 0219 0B       		.uleb128 0xb
 2220 021a 83000000 		.4byte	0x83
 2221 021e 00       		.byte	0
 2222 021f 08       		.uleb128 0x8
 2223 0220 04       		.byte	0x4
 2224 0221 14020000 		.4byte	0x214
 2225 0225 0A       		.uleb128 0xa
 2226 0226 83000000 		.4byte	0x83
 2227 022a 39020000 		.4byte	0x239
 2228 022e 0B       		.uleb128 0xb
 2229 022f E8010000 		.4byte	0x1e8
 2230 0233 0B       		.uleb128 0xb
 2231 0234 83000000 		.4byte	0x83
 2232 0238 00       		.byte	0
 2233 0239 08       		.uleb128 0x8
 2234 023a 04       		.byte	0x4
 2235 023b 25020000 		.4byte	0x225
 2236 023f 0C       		.uleb128 0xc
 2237 0240 54020000 		.4byte	0x254
 2238 0244 0B       		.uleb128 0xb
 2239 0245 E2010000 		.4byte	0x1e2
 2240 0249 0B       		.uleb128 0xb
 2241 024a 83000000 		.4byte	0x83
 2242 024e 0B       		.uleb128 0xb
 2243 024f 83000000 		.4byte	0x83
 2244 0253 00       		.byte	0
 2245 0254 08       		.uleb128 0x8
 2246 0255 04       		.byte	0x4
 2247 0256 3F020000 		.4byte	0x23f
 2248 025a 0D       		.uleb128 0xd
 2249 025b 760B0000 		.4byte	.LASF41
 2250 025f 03       		.byte	0x3
 2251 0260 48       		.byte	0x48
 2252 0261 C5000000 		.4byte	0xc5
 2253 0265 06       		.uleb128 0x6
 2254 0266 0C       		.byte	0xc
 2255 0267 03       		.byte	0x3
 2256 0268 4A       		.byte	0x4a
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 92


 2257 0269 B6020000 		.4byte	0x2b6
 2258 026d 07       		.uleb128 0x7
 2259 026e 11050000 		.4byte	.LASF42
 2260 0272 03       		.byte	0x3
 2261 0273 4C       		.byte	0x4c
 2262 0274 6B000000 		.4byte	0x6b
 2263 0278 00       		.byte	0
 2264 0279 07       		.uleb128 0x7
 2265 027a 2D020000 		.4byte	.LASF43
 2266 027e 03       		.byte	0x3
 2267 027f 4D       		.byte	0x4d
 2268 0280 6B000000 		.4byte	0x6b
 2269 0284 01       		.byte	0x1
 2270 0285 07       		.uleb128 0x7
 2271 0286 2E010000 		.4byte	.LASF44
 2272 028a 03       		.byte	0x3
 2273 028b 4E       		.byte	0x4e
 2274 028c 6B000000 		.4byte	0x6b
 2275 0290 02       		.byte	0x2
 2276 0291 07       		.uleb128 0x7
 2277 0292 2A050000 		.4byte	.LASF45
 2278 0296 03       		.byte	0x3
 2279 0297 4F       		.byte	0x4f
 2280 0298 77000000 		.4byte	0x77
 2281 029c 04       		.byte	0x4
 2282 029d 07       		.uleb128 0x7
 2283 029e A1070000 		.4byte	.LASF46
 2284 02a2 03       		.byte	0x3
 2285 02a3 50       		.byte	0x50
 2286 02a4 77000000 		.4byte	0x77
 2287 02a8 06       		.byte	0x6
 2288 02a9 07       		.uleb128 0x7
 2289 02aa 3F090000 		.4byte	.LASF47
 2290 02ae 03       		.byte	0x3
 2291 02af 51       		.byte	0x51
 2292 02b0 B6020000 		.4byte	0x2b6
 2293 02b4 08       		.byte	0x8
 2294 02b5 00       		.byte	0
 2295 02b6 08       		.uleb128 0x8
 2296 02b7 04       		.byte	0x4
 2297 02b8 BC020000 		.4byte	0x2bc
 2298 02bc 09       		.uleb128 0x9
 2299 02bd 5A020000 		.4byte	0x25a
 2300 02c1 0D       		.uleb128 0xd
 2301 02c2 D9010000 		.4byte	.LASF48
 2302 02c6 03       		.byte	0x3
 2303 02c7 52       		.byte	0x52
 2304 02c8 65020000 		.4byte	0x265
 2305 02cc 0E       		.uleb128 0xe
 2306 02cd A7060000 		.4byte	.LASF49
 2307 02d1 01       		.byte	0x1
 2308 02d2 8E       		.byte	0x8e
 2309 02d3 00000000 		.4byte	.LFB34
 2310 02d7 24000000 		.4byte	.LFE34-.LFB34
 2311 02db 01       		.uleb128 0x1
 2312 02dc 9C       		.byte	0x9c
 2313 02dd F1020000 		.4byte	0x2f1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 93


 2314 02e1 0F       		.uleb128 0xf
 2315 02e2 23050000 		.4byte	.LASF51
 2316 02e6 01       		.byte	0x1
 2317 02e7 8E       		.byte	0x8e
 2318 02e8 83000000 		.4byte	0x83
 2319 02ec 00000000 		.4byte	.LLST0
 2320 02f0 00       		.byte	0
 2321 02f1 0E       		.uleb128 0xe
 2322 02f2 B7010000 		.4byte	.LASF50
 2323 02f6 01       		.byte	0x1
 2324 02f7 D9       		.byte	0xd9
 2325 02f8 00000000 		.4byte	.LFB35
 2326 02fc 18000000 		.4byte	.LFE35-.LFB35
 2327 0300 01       		.uleb128 0x1
 2328 0301 9C       		.byte	0x9c
 2329 0302 43030000 		.4byte	0x343
 2330 0306 0F       		.uleb128 0xf
 2331 0307 23050000 		.4byte	.LASF51
 2332 030b 01       		.byte	0x1
 2333 030c D9       		.byte	0xd9
 2334 030d 83000000 		.4byte	0x83
 2335 0311 21000000 		.4byte	.LLST1
 2336 0315 10       		.uleb128 0x10
 2337 0316 08000000 		.4byte	.LVL3
 2338 031a 9E100000 		.4byte	0x109e
 2339 031e 29030000 		.4byte	0x329
 2340 0322 11       		.uleb128 0x11
 2341 0323 01       		.uleb128 0x1
 2342 0324 50       		.byte	0x50
 2343 0325 02       		.uleb128 0x2
 2344 0326 74       		.byte	0x74
 2345 0327 00       		.sleb128 0
 2346 0328 00       		.byte	0
 2347 0329 12       		.uleb128 0x12
 2348 032a 0C000000 		.4byte	.LVL4
 2349 032e AF100000 		.4byte	0x10af
 2350 0332 13       		.uleb128 0x13
 2351 0333 16000000 		.4byte	.LVL5
 2352 0337 CC020000 		.4byte	0x2cc
 2353 033b 11       		.uleb128 0x11
 2354 033c 01       		.uleb128 0x1
 2355 033d 50       		.byte	0x50
 2356 033e 02       		.uleb128 0x2
 2357 033f 74       		.byte	0x74
 2358 0340 00       		.sleb128 0
 2359 0341 00       		.byte	0
 2360 0342 00       		.byte	0
 2361 0343 0E       		.uleb128 0xe
 2362 0344 FE090000 		.4byte	.LASF52
 2363 0348 01       		.byte	0x1
 2364 0349 FE       		.byte	0xfe
 2365 034a 00000000 		.4byte	.LFB36
 2366 034e 14000000 		.4byte	.LFE36-.LFB36
 2367 0352 01       		.uleb128 0x1
 2368 0353 9C       		.byte	0x9c
 2369 0354 77030000 		.4byte	0x377
 2370 0358 14       		.uleb128 0x14
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 94


 2371 0359 6900     		.ascii	"i\000"
 2372 035b 01       		.byte	0x1
 2373 035c 0001     		.2byte	0x100
 2374 035e 83000000 		.4byte	0x83
 2375 0362 4D000000 		.4byte	.LLST2
 2376 0366 13       		.uleb128 0x13
 2377 0367 0C000000 		.4byte	.LVL9
 2378 036b F1020000 		.4byte	0x2f1
 2379 036f 11       		.uleb128 0x11
 2380 0370 01       		.uleb128 0x1
 2381 0371 50       		.byte	0x50
 2382 0372 02       		.uleb128 0x2
 2383 0373 74       		.byte	0x74
 2384 0374 00       		.sleb128 0
 2385 0375 00       		.byte	0
 2386 0376 00       		.byte	0
 2387 0377 15       		.uleb128 0x15
 2388 0378 59010000 		.4byte	.LASF53
 2389 037c 01       		.byte	0x1
 2390 037d 2101     		.2byte	0x121
 2391 037f 00000000 		.4byte	.LFB37
 2392 0383 30000000 		.4byte	.LFE37-.LFB37
 2393 0387 01       		.uleb128 0x1
 2394 0388 9C       		.byte	0x9c
 2395 0389 E2030000 		.4byte	0x3e2
 2396 038d 14       		.uleb128 0x14
 2397 038e 6900     		.ascii	"i\000"
 2398 0390 01       		.byte	0x1
 2399 0391 2301     		.2byte	0x123
 2400 0393 83000000 		.4byte	0x83
 2401 0397 6C000000 		.4byte	.LLST3
 2402 039b 16       		.uleb128 0x16
 2403 039c 04010000 		.4byte	.LASF54
 2404 03a0 01       		.byte	0x1
 2405 03a1 2401     		.2byte	0x124
 2406 03a3 83000000 		.4byte	0x83
 2407 03a7 7F000000 		.4byte	.LLST4
 2408 03ab 12       		.uleb128 0x12
 2409 03ac 06000000 		.4byte	.LVL12
 2410 03b0 BA100000 		.4byte	0x10ba
 2411 03b4 12       		.uleb128 0x12
 2412 03b5 0A000000 		.4byte	.LVL13
 2413 03b9 AF100000 		.4byte	0x10af
 2414 03bd 10       		.uleb128 0x10
 2415 03be 1A000000 		.4byte	.LVL15
 2416 03c2 C1100000 		.4byte	0x10c1
 2417 03c6 D1030000 		.4byte	0x3d1
 2418 03ca 11       		.uleb128 0x11
 2419 03cb 01       		.uleb128 0x1
 2420 03cc 51       		.byte	0x51
 2421 03cd 02       		.uleb128 0x2
 2422 03ce 74       		.byte	0x74
 2423 03cf 00       		.sleb128 0
 2424 03d0 00       		.byte	0
 2425 03d1 13       		.uleb128 0x13
 2426 03d2 24000000 		.4byte	.LVL17
 2427 03d6 CC020000 		.4byte	0x2cc
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 95


 2428 03da 11       		.uleb128 0x11
 2429 03db 01       		.uleb128 0x1
 2430 03dc 50       		.byte	0x50
 2431 03dd 02       		.uleb128 0x2
 2432 03de 74       		.byte	0x74
 2433 03df 00       		.sleb128 0
 2434 03e0 00       		.byte	0
 2435 03e1 00       		.byte	0
 2436 03e2 17       		.uleb128 0x17
 2437 03e3 1E0A0000 		.4byte	.LASF57
 2438 03e7 01       		.byte	0x1
 2439 03e8 B602     		.2byte	0x2b6
 2440 03ea 77000000 		.4byte	0x77
 2441 03ee 00000000 		.4byte	.LFB42
 2442 03f2 0C000000 		.4byte	.LFE42-.LFB42
 2443 03f6 01       		.uleb128 0x1
 2444 03f7 9C       		.byte	0x9c
 2445 03f8 0D040000 		.4byte	0x40d
 2446 03fc 18       		.uleb128 0x18
 2447 03fd 23050000 		.4byte	.LASF51
 2448 0401 01       		.byte	0x1
 2449 0402 B602     		.2byte	0x2b6
 2450 0404 83000000 		.4byte	0x83
 2451 0408 92000000 		.4byte	.LLST5
 2452 040c 00       		.byte	0
 2453 040d 15       		.uleb128 0x15
 2454 040e 07020000 		.4byte	.LASF55
 2455 0412 01       		.byte	0x1
 2456 0413 D102     		.2byte	0x2d1
 2457 0415 00000000 		.4byte	.LFB43
 2458 0419 0C000000 		.4byte	.LFE43-.LFB43
 2459 041d 01       		.uleb128 0x1
 2460 041e 9C       		.byte	0x9c
 2461 041f 42040000 		.4byte	0x442
 2462 0423 18       		.uleb128 0x18
 2463 0424 23050000 		.4byte	.LASF51
 2464 0428 01       		.byte	0x1
 2465 0429 D102     		.2byte	0x2d1
 2466 042b 83000000 		.4byte	0x83
 2467 042f B3000000 		.4byte	.LLST6
 2468 0433 19       		.uleb128 0x19
 2469 0434 8E050000 		.4byte	.LASF56
 2470 0438 01       		.byte	0x1
 2471 0439 D102     		.2byte	0x2d1
 2472 043b 77000000 		.4byte	0x77
 2473 043f 01       		.uleb128 0x1
 2474 0440 51       		.byte	0x51
 2475 0441 00       		.byte	0
 2476 0442 17       		.uleb128 0x17
 2477 0443 2B040000 		.4byte	.LASF58
 2478 0447 01       		.byte	0x1
 2479 0448 EC02     		.2byte	0x2ec
 2480 044a 6B000000 		.4byte	0x6b
 2481 044e 00000000 		.4byte	.LFB44
 2482 0452 0C000000 		.4byte	.LFE44-.LFB44
 2483 0456 01       		.uleb128 0x1
 2484 0457 9C       		.byte	0x9c
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 96


 2485 0458 6D040000 		.4byte	0x46d
 2486 045c 18       		.uleb128 0x18
 2487 045d 23050000 		.4byte	.LASF51
 2488 0461 01       		.byte	0x1
 2489 0462 EC02     		.2byte	0x2ec
 2490 0464 83000000 		.4byte	0x83
 2491 0468 D4000000 		.4byte	.LLST7
 2492 046c 00       		.byte	0
 2493 046d 15       		.uleb128 0x15
 2494 046e 3D020000 		.4byte	.LASF59
 2495 0472 01       		.byte	0x1
 2496 0473 0703     		.2byte	0x307
 2497 0475 00000000 		.4byte	.LFB45
 2498 0479 0C000000 		.4byte	.LFE45-.LFB45
 2499 047d 01       		.uleb128 0x1
 2500 047e 9C       		.byte	0x9c
 2501 047f A2040000 		.4byte	0x4a2
 2502 0483 18       		.uleb128 0x18
 2503 0484 23050000 		.4byte	.LASF51
 2504 0488 01       		.byte	0x1
 2505 0489 0703     		.2byte	0x307
 2506 048b 83000000 		.4byte	0x83
 2507 048f F5000000 		.4byte	.LLST8
 2508 0493 19       		.uleb128 0x19
 2509 0494 08040000 		.4byte	.LASF60
 2510 0498 01       		.byte	0x1
 2511 0499 0703     		.2byte	0x307
 2512 049b 6B000000 		.4byte	0x6b
 2513 049f 01       		.uleb128 0x1
 2514 04a0 51       		.byte	0x51
 2515 04a1 00       		.byte	0
 2516 04a2 17       		.uleb128 0x17
 2517 04a3 70070000 		.4byte	.LASF61
 2518 04a7 01       		.byte	0x1
 2519 04a8 2203     		.2byte	0x322
 2520 04aa 6B000000 		.4byte	0x6b
 2521 04ae 00000000 		.4byte	.LFB46
 2522 04b2 0C000000 		.4byte	.LFE46-.LFB46
 2523 04b6 01       		.uleb128 0x1
 2524 04b7 9C       		.byte	0x9c
 2525 04b8 CD040000 		.4byte	0x4cd
 2526 04bc 18       		.uleb128 0x18
 2527 04bd 7F030000 		.4byte	.LASF62
 2528 04c1 01       		.byte	0x1
 2529 04c2 2203     		.2byte	0x322
 2530 04c4 83000000 		.4byte	0x83
 2531 04c8 16010000 		.4byte	.LLST9
 2532 04cc 00       		.byte	0
 2533 04cd 17       		.uleb128 0x17
 2534 04ce 00030000 		.4byte	.LASF63
 2535 04d2 01       		.byte	0x1
 2536 04d3 3D03     		.2byte	0x33d
 2537 04d5 6B000000 		.4byte	0x6b
 2538 04d9 00000000 		.4byte	.LFB47
 2539 04dd 0C000000 		.4byte	.LFE47-.LFB47
 2540 04e1 01       		.uleb128 0x1
 2541 04e2 9C       		.byte	0x9c
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 97


 2542 04e3 F8040000 		.4byte	0x4f8
 2543 04e7 18       		.uleb128 0x18
 2544 04e8 7F030000 		.4byte	.LASF62
 2545 04ec 01       		.byte	0x1
 2546 04ed 3D03     		.2byte	0x33d
 2547 04ef 83000000 		.4byte	0x83
 2548 04f3 37010000 		.4byte	.LLST10
 2549 04f7 00       		.byte	0
 2550 04f8 17       		.uleb128 0x17
 2551 04f9 0E040000 		.4byte	.LASF64
 2552 04fd 01       		.byte	0x1
 2553 04fe 5903     		.2byte	0x359
 2554 0500 6B000000 		.4byte	0x6b
 2555 0504 00000000 		.4byte	.LFB48
 2556 0508 0C000000 		.4byte	.LFE48-.LFB48
 2557 050c 01       		.uleb128 0x1
 2558 050d 9C       		.byte	0x9c
 2559 050e 23050000 		.4byte	0x523
 2560 0512 18       		.uleb128 0x18
 2561 0513 7F030000 		.4byte	.LASF62
 2562 0517 01       		.byte	0x1
 2563 0518 5903     		.2byte	0x359
 2564 051a 83000000 		.4byte	0x83
 2565 051e 58010000 		.4byte	.LLST11
 2566 0522 00       		.byte	0
 2567 0523 17       		.uleb128 0x17
 2568 0524 55050000 		.4byte	.LASF65
 2569 0528 01       		.byte	0x1
 2570 0529 7503     		.2byte	0x375
 2571 052b 6B000000 		.4byte	0x6b
 2572 052f 00000000 		.4byte	.LFB49
 2573 0533 0C000000 		.4byte	.LFE49-.LFB49
 2574 0537 01       		.uleb128 0x1
 2575 0538 9C       		.byte	0x9c
 2576 0539 4E050000 		.4byte	0x54e
 2577 053d 18       		.uleb128 0x18
 2578 053e 7F030000 		.4byte	.LASF62
 2579 0542 01       		.byte	0x1
 2580 0543 7503     		.2byte	0x375
 2581 0545 83000000 		.4byte	0x83
 2582 0549 79010000 		.4byte	.LLST12
 2583 054d 00       		.byte	0
 2584 054e 15       		.uleb128 0x15
 2585 054f CD030000 		.4byte	.LASF66
 2586 0553 01       		.byte	0x1
 2587 0554 9603     		.2byte	0x396
 2588 0556 00000000 		.4byte	.LFB50
 2589 055a 0C000000 		.4byte	.LFE50-.LFB50
 2590 055e 01       		.uleb128 0x1
 2591 055f 9C       		.byte	0x9c
 2592 0560 81050000 		.4byte	0x581
 2593 0564 19       		.uleb128 0x19
 2594 0565 7F030000 		.4byte	.LASF62
 2595 0569 01       		.byte	0x1
 2596 056a 9603     		.2byte	0x396
 2597 056c 83000000 		.4byte	0x83
 2598 0570 01       		.uleb128 0x1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 98


 2599 0571 50       		.byte	0x50
 2600 0572 19       		.uleb128 0x19
 2601 0573 08040000 		.4byte	.LASF60
 2602 0577 01       		.byte	0x1
 2603 0578 9603     		.2byte	0x396
 2604 057a 6B000000 		.4byte	0x6b
 2605 057e 01       		.uleb128 0x1
 2606 057f 51       		.byte	0x51
 2607 0580 00       		.byte	0
 2608 0581 15       		.uleb128 0x15
 2609 0582 83020000 		.4byte	.LASF67
 2610 0586 01       		.byte	0x1
 2611 0587 B203     		.2byte	0x3b2
 2612 0589 00000000 		.4byte	.LFB51
 2613 058d 0C000000 		.4byte	.LFE51-.LFB51
 2614 0591 01       		.uleb128 0x1
 2615 0592 9C       		.byte	0x9c
 2616 0593 B4050000 		.4byte	0x5b4
 2617 0597 19       		.uleb128 0x19
 2618 0598 7F030000 		.4byte	.LASF62
 2619 059c 01       		.byte	0x1
 2620 059d B203     		.2byte	0x3b2
 2621 059f 83000000 		.4byte	0x83
 2622 05a3 01       		.uleb128 0x1
 2623 05a4 50       		.byte	0x50
 2624 05a5 19       		.uleb128 0x19
 2625 05a6 08040000 		.4byte	.LASF60
 2626 05aa 01       		.byte	0x1
 2627 05ab B203     		.2byte	0x3b2
 2628 05ad 6B000000 		.4byte	0x6b
 2629 05b1 01       		.uleb128 0x1
 2630 05b2 51       		.byte	0x51
 2631 05b3 00       		.byte	0
 2632 05b4 15       		.uleb128 0x15
 2633 05b5 53070000 		.4byte	.LASF68
 2634 05b9 01       		.byte	0x1
 2635 05ba CE03     		.2byte	0x3ce
 2636 05bc 00000000 		.4byte	.LFB52
 2637 05c0 0C000000 		.4byte	.LFE52-.LFB52
 2638 05c4 01       		.uleb128 0x1
 2639 05c5 9C       		.byte	0x9c
 2640 05c6 E7050000 		.4byte	0x5e7
 2641 05ca 19       		.uleb128 0x19
 2642 05cb 7F030000 		.4byte	.LASF62
 2643 05cf 01       		.byte	0x1
 2644 05d0 CE03     		.2byte	0x3ce
 2645 05d2 83000000 		.4byte	0x83
 2646 05d6 01       		.uleb128 0x1
 2647 05d7 50       		.byte	0x50
 2648 05d8 19       		.uleb128 0x19
 2649 05d9 08040000 		.4byte	.LASF60
 2650 05dd 01       		.byte	0x1
 2651 05de CE03     		.2byte	0x3ce
 2652 05e0 6B000000 		.4byte	0x6b
 2653 05e4 01       		.uleb128 0x1
 2654 05e5 51       		.byte	0x51
 2655 05e6 00       		.byte	0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 99


 2656 05e7 15       		.uleb128 0x15
 2657 05e8 0C070000 		.4byte	.LASF69
 2658 05ec 01       		.byte	0x1
 2659 05ed EB03     		.2byte	0x3eb
 2660 05ef 00000000 		.4byte	.LFB53
 2661 05f3 0C000000 		.4byte	.LFE53-.LFB53
 2662 05f7 01       		.uleb128 0x1
 2663 05f8 9C       		.byte	0x9c
 2664 05f9 1A060000 		.4byte	0x61a
 2665 05fd 19       		.uleb128 0x19
 2666 05fe 7F030000 		.4byte	.LASF62
 2667 0602 01       		.byte	0x1
 2668 0603 EB03     		.2byte	0x3eb
 2669 0605 83000000 		.4byte	0x83
 2670 0609 01       		.uleb128 0x1
 2671 060a 50       		.byte	0x50
 2672 060b 19       		.uleb128 0x19
 2673 060c 08040000 		.4byte	.LASF60
 2674 0610 01       		.byte	0x1
 2675 0611 EB03     		.2byte	0x3eb
 2676 0613 6B000000 		.4byte	0x6b
 2677 0617 01       		.uleb128 0x1
 2678 0618 51       		.byte	0x51
 2679 0619 00       		.byte	0
 2680 061a 15       		.uleb128 0x15
 2681 061b 98090000 		.4byte	.LASF70
 2682 061f 01       		.byte	0x1
 2683 0620 0704     		.2byte	0x407
 2684 0622 00000000 		.4byte	.LFB54
 2685 0626 0C000000 		.4byte	.LFE54-.LFB54
 2686 062a 01       		.uleb128 0x1
 2687 062b 9C       		.byte	0x9c
 2688 062c 4D060000 		.4byte	0x64d
 2689 0630 19       		.uleb128 0x19
 2690 0631 7F030000 		.4byte	.LASF62
 2691 0635 01       		.byte	0x1
 2692 0636 0704     		.2byte	0x407
 2693 0638 83000000 		.4byte	0x83
 2694 063c 01       		.uleb128 0x1
 2695 063d 50       		.byte	0x50
 2696 063e 19       		.uleb128 0x19
 2697 063f 08040000 		.4byte	.LASF60
 2698 0643 01       		.byte	0x1
 2699 0644 0704     		.2byte	0x407
 2700 0646 6B000000 		.4byte	0x6b
 2701 064a 01       		.uleb128 0x1
 2702 064b 51       		.byte	0x51
 2703 064c 00       		.byte	0
 2704 064d 15       		.uleb128 0x15
 2705 064e 370A0000 		.4byte	.LASF71
 2706 0652 01       		.byte	0x1
 2707 0653 2304     		.2byte	0x423
 2708 0655 00000000 		.4byte	.LFB55
 2709 0659 0C000000 		.4byte	.LFE55-.LFB55
 2710 065d 01       		.uleb128 0x1
 2711 065e 9C       		.byte	0x9c
 2712 065f 82060000 		.4byte	0x682
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 100


 2713 0663 18       		.uleb128 0x18
 2714 0664 23050000 		.4byte	.LASF51
 2715 0668 01       		.byte	0x1
 2716 0669 2304     		.2byte	0x423
 2717 066b 83000000 		.4byte	0x83
 2718 066f 9A010000 		.4byte	.LLST13
 2719 0673 19       		.uleb128 0x19
 2720 0674 08040000 		.4byte	.LASF60
 2721 0678 01       		.byte	0x1
 2722 0679 2304     		.2byte	0x423
 2723 067b 6B000000 		.4byte	0x6b
 2724 067f 01       		.uleb128 0x1
 2725 0680 51       		.byte	0x51
 2726 0681 00       		.byte	0
 2727 0682 17       		.uleb128 0x17
 2728 0683 62060000 		.4byte	.LASF72
 2729 0687 01       		.byte	0x1
 2730 0688 5104     		.2byte	0x451
 2731 068a 83000000 		.4byte	0x83
 2732 068e 00000000 		.4byte	.LFB56
 2733 0692 98000000 		.4byte	.LFE56-.LFB56
 2734 0696 01       		.uleb128 0x1
 2735 0697 9C       		.byte	0x9c
 2736 0698 83070000 		.4byte	0x783
 2737 069c 18       		.uleb128 0x18
 2738 069d 23050000 		.4byte	.LASF51
 2739 06a1 01       		.byte	0x1
 2740 06a2 5104     		.2byte	0x451
 2741 06a4 83000000 		.4byte	0x83
 2742 06a8 BB010000 		.4byte	.LLST14
 2743 06ac 16       		.uleb128 0x16
 2744 06ad 7F030000 		.4byte	.LASF62
 2745 06b1 01       		.byte	0x1
 2746 06b2 5304     		.2byte	0x453
 2747 06b4 6B000000 		.4byte	0x6b
 2748 06b8 E7010000 		.4byte	.LLST15
 2749 06bc 16       		.uleb128 0x16
 2750 06bd 4E060000 		.4byte	.LASF73
 2751 06c1 01       		.byte	0x1
 2752 06c2 5404     		.2byte	0x454
 2753 06c4 6B000000 		.4byte	0x6b
 2754 06c8 FA010000 		.4byte	.LLST16
 2755 06cc 1A       		.uleb128 0x1a
 2756 06cd F0090000 		.4byte	.LASF74
 2757 06d1 01       		.byte	0x1
 2758 06d2 5504     		.2byte	0x455
 2759 06d4 6B000000 		.4byte	0x6b
 2760 06d8 00       		.byte	0
 2761 06d9 16       		.uleb128 0x16
 2762 06da AD090000 		.4byte	.LASF75
 2763 06de 01       		.byte	0x1
 2764 06df 5704     		.2byte	0x457
 2765 06e1 6B000000 		.4byte	0x6b
 2766 06e5 0D020000 		.4byte	.LLST17
 2767 06e9 16       		.uleb128 0x16
 2768 06ea 78040000 		.4byte	.LASF76
 2769 06ee 01       		.byte	0x1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 101


 2770 06ef 5804     		.2byte	0x458
 2771 06f1 6B000000 		.4byte	0x6b
 2772 06f5 20020000 		.4byte	.LLST18
 2773 06f9 1B       		.uleb128 0x1b
 2774 06fa 2F000000 		.4byte	.LASF77
 2775 06fe 01       		.byte	0x1
 2776 06ff 5904     		.2byte	0x459
 2777 0701 83070000 		.4byte	0x783
 2778 0705 05       		.uleb128 0x5
 2779 0706 03       		.byte	0x3
 2780 0707 1C000000 		.4byte	CapSense_debounceCounter.5362
 2781 070b 10       		.uleb128 0x10
 2782 070c 22000000 		.4byte	.LVL50
 2783 0710 C1100000 		.4byte	0x10c1
 2784 0714 28070000 		.4byte	0x728
 2785 0718 11       		.uleb128 0x11
 2786 0719 01       		.uleb128 0x1
 2787 071a 51       		.byte	0x51
 2788 071b 02       		.uleb128 0x2
 2789 071c 74       		.byte	0x74
 2790 071d 00       		.sleb128 0
 2791 071e 11       		.uleb128 0x11
 2792 071f 01       		.uleb128 0x1
 2793 0720 50       		.byte	0x50
 2794 0721 05       		.uleb128 0x5
 2795 0722 03       		.byte	0x3
 2796 0723 20000000 		.4byte	.LANCHOR0+32
 2797 0727 00       		.byte	0
 2798 0728 10       		.uleb128 0x10
 2799 0729 40000000 		.4byte	.LVL52
 2800 072d DB100000 		.4byte	0x10db
 2801 0731 47070000 		.4byte	0x747
 2802 0735 11       		.uleb128 0x11
 2803 0736 01       		.uleb128 0x1
 2804 0737 52       		.byte	0x52
 2805 0738 01       		.uleb128 0x1
 2806 0739 30       		.byte	0x30
 2807 073a 11       		.uleb128 0x11
 2808 073b 01       		.uleb128 0x1
 2809 073c 51       		.byte	0x51
 2810 073d 02       		.uleb128 0x2
 2811 073e 74       		.byte	0x74
 2812 073f 00       		.sleb128 0
 2813 0740 11       		.uleb128 0x11
 2814 0741 01       		.uleb128 0x1
 2815 0742 50       		.byte	0x50
 2816 0743 02       		.uleb128 0x2
 2817 0744 75       		.byte	0x75
 2818 0745 20       		.sleb128 32
 2819 0746 00       		.byte	0
 2820 0747 10       		.uleb128 0x10
 2821 0748 6A000000 		.4byte	.LVL55
 2822 074c DB100000 		.4byte	0x10db
 2823 0750 69070000 		.4byte	0x769
 2824 0754 11       		.uleb128 0x11
 2825 0755 01       		.uleb128 0x1
 2826 0756 52       		.byte	0x52
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 102


 2827 0757 01       		.uleb128 0x1
 2828 0758 31       		.byte	0x31
 2829 0759 11       		.uleb128 0x11
 2830 075a 01       		.uleb128 0x1
 2831 075b 51       		.byte	0x51
 2832 075c 02       		.uleb128 0x2
 2833 075d 74       		.byte	0x74
 2834 075e 00       		.sleb128 0
 2835 075f 11       		.uleb128 0x11
 2836 0760 01       		.uleb128 0x1
 2837 0761 50       		.byte	0x50
 2838 0762 05       		.uleb128 0x5
 2839 0763 03       		.byte	0x3
 2840 0764 20000000 		.4byte	.LANCHOR0+32
 2841 0768 00       		.byte	0
 2842 0769 13       		.uleb128 0x13
 2843 076a 7A000000 		.4byte	.LVL56
 2844 076e C1100000 		.4byte	0x10c1
 2845 0772 11       		.uleb128 0x11
 2846 0773 01       		.uleb128 0x1
 2847 0774 51       		.byte	0x51
 2848 0775 02       		.uleb128 0x2
 2849 0776 74       		.byte	0x74
 2850 0777 00       		.sleb128 0
 2851 0778 11       		.uleb128 0x11
 2852 0779 01       		.uleb128 0x1
 2853 077a 50       		.byte	0x50
 2854 077b 05       		.uleb128 0x5
 2855 077c 03       		.byte	0x3
 2856 077d 20000000 		.4byte	.LANCHOR0+32
 2857 0781 00       		.byte	0
 2858 0782 00       		.byte	0
 2859 0783 1C       		.uleb128 0x1c
 2860 0784 6B000000 		.4byte	0x6b
 2861 0788 93070000 		.4byte	0x793
 2862 078c 1D       		.uleb128 0x1d
 2863 078d BC000000 		.4byte	0xbc
 2864 0791 00       		.byte	0
 2865 0792 00       		.byte	0
 2866 0793 17       		.uleb128 0x17
 2867 0794 4C0B0000 		.4byte	.LASF78
 2868 0798 01       		.byte	0x1
 2869 0799 A804     		.2byte	0x4a8
 2870 079b 83000000 		.4byte	0x83
 2871 079f 00000000 		.4byte	.LFB57
 2872 07a3 1C000000 		.4byte	.LFE57-.LFB57
 2873 07a7 01       		.uleb128 0x1
 2874 07a8 9C       		.byte	0x9c
 2875 07a9 FB070000 		.4byte	0x7fb
 2876 07ad 18       		.uleb128 0x18
 2877 07ae 7F030000 		.4byte	.LASF62
 2878 07b2 01       		.byte	0x1
 2879 07b3 A804     		.2byte	0x4a8
 2880 07b5 83000000 		.4byte	0x83
 2881 07b9 3E020000 		.4byte	.LLST19
 2882 07bd 16       		.uleb128 0x16
 2883 07be AD050000 		.4byte	.LASF79
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 103


 2884 07c2 01       		.byte	0x1
 2885 07c3 AA04     		.2byte	0x4aa
 2886 07c5 83000000 		.4byte	0x83
 2887 07c9 5F020000 		.4byte	.LLST20
 2888 07cd 1A       		.uleb128 0x1a
 2889 07ce 14010000 		.4byte	.LASF80
 2890 07d2 01       		.byte	0x1
 2891 07d3 AB04     		.2byte	0x4ab
 2892 07d5 83000000 		.4byte	0x83
 2893 07d9 05       		.byte	0x5
 2894 07da 16       		.uleb128 0x16
 2895 07db A30A0000 		.4byte	.LASF81
 2896 07df 01       		.byte	0x1
 2897 07e0 AC04     		.2byte	0x4ac
 2898 07e2 83000000 		.4byte	0x83
 2899 07e6 7E020000 		.4byte	.LLST21
 2900 07ea 13       		.uleb128 0x13
 2901 07eb 0C000000 		.4byte	.LVL63
 2902 07ef 82060000 		.4byte	0x682
 2903 07f3 11       		.uleb128 0x11
 2904 07f4 01       		.uleb128 0x1
 2905 07f5 50       		.byte	0x50
 2906 07f6 02       		.uleb128 0x2
 2907 07f7 74       		.byte	0x74
 2908 07f8 00       		.sleb128 0
 2909 07f9 00       		.byte	0
 2910 07fa 00       		.byte	0
 2911 07fb 17       		.uleb128 0x17
 2912 07fc B8040000 		.4byte	.LASF82
 2913 0800 01       		.byte	0x1
 2914 0801 D604     		.2byte	0x4d6
 2915 0803 83000000 		.4byte	0x83
 2916 0807 00000000 		.4byte	.LFB58
 2917 080b 1E000000 		.4byte	.LFE58-.LFB58
 2918 080f 01       		.uleb128 0x1
 2919 0810 9C       		.byte	0x9c
 2920 0811 44080000 		.4byte	0x844
 2921 0815 14       		.uleb128 0x14
 2922 0816 6900     		.ascii	"i\000"
 2923 0818 01       		.byte	0x1
 2924 0819 D904     		.2byte	0x4d9
 2925 081b 83000000 		.4byte	0x83
 2926 081f A8020000 		.4byte	.LLST22
 2927 0823 16       		.uleb128 0x16
 2928 0824 A30A0000 		.4byte	.LASF81
 2929 0828 01       		.byte	0x1
 2930 0829 DA04     		.2byte	0x4da
 2931 082b 83000000 		.4byte	0x83
 2932 082f C7020000 		.4byte	.LLST23
 2933 0833 13       		.uleb128 0x13
 2934 0834 0E000000 		.4byte	.LVL70
 2935 0838 93070000 		.4byte	0x793
 2936 083c 11       		.uleb128 0x11
 2937 083d 01       		.uleb128 0x1
 2938 083e 50       		.byte	0x50
 2939 083f 02       		.uleb128 0x2
 2940 0840 74       		.byte	0x74
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 104


 2941 0841 00       		.sleb128 0
 2942 0842 00       		.byte	0
 2943 0843 00       		.byte	0
 2944 0844 15       		.uleb128 0x15
 2945 0845 3A050000 		.4byte	.LASF83
 2946 0849 01       		.byte	0x1
 2947 084a 0505     		.2byte	0x505
 2948 084c 00000000 		.4byte	.LFB59
 2949 0850 1C000000 		.4byte	.LFE59-.LFB59
 2950 0854 01       		.uleb128 0x1
 2951 0855 9C       		.byte	0x9c
 2952 0856 9D080000 		.4byte	0x89d
 2953 085a 18       		.uleb128 0x18
 2954 085b 7F030000 		.4byte	.LASF62
 2955 085f 01       		.byte	0x1
 2956 0860 0505     		.2byte	0x505
 2957 0862 83000000 		.4byte	0x83
 2958 0866 F1020000 		.4byte	.LLST24
 2959 086a 16       		.uleb128 0x16
 2960 086b AD050000 		.4byte	.LASF79
 2961 086f 01       		.byte	0x1
 2962 0870 0805     		.2byte	0x508
 2963 0872 6B000000 		.4byte	0x6b
 2964 0876 12030000 		.4byte	.LLST25
 2965 087a 1A       		.uleb128 0x1a
 2966 087b 14010000 		.4byte	.LASF80
 2967 087f 01       		.byte	0x1
 2968 0880 0905     		.2byte	0x509
 2969 0882 6B000000 		.4byte	0x6b
 2970 0886 05       		.byte	0x5
 2971 0887 13       		.uleb128 0x13
 2972 0888 0E000000 		.4byte	.LVL78
 2973 088c DB100000 		.4byte	0x10db
 2974 0890 11       		.uleb128 0x11
 2975 0891 01       		.uleb128 0x1
 2976 0892 52       		.byte	0x52
 2977 0893 01       		.uleb128 0x1
 2978 0894 31       		.byte	0x31
 2979 0895 11       		.uleb128 0x11
 2980 0896 01       		.uleb128 0x1
 2981 0897 51       		.byte	0x51
 2982 0898 02       		.uleb128 0x2
 2983 0899 74       		.byte	0x74
 2984 089a 00       		.sleb128 0
 2985 089b 00       		.byte	0
 2986 089c 00       		.byte	0
 2987 089d 15       		.uleb128 0x15
 2988 089e B4000000 		.4byte	.LASF84
 2989 08a2 01       		.byte	0x1
 2990 08a3 3005     		.2byte	0x530
 2991 08a5 00000000 		.4byte	.LFB60
 2992 08a9 1C000000 		.4byte	.LFE60-.LFB60
 2993 08ad 01       		.uleb128 0x1
 2994 08ae 9C       		.byte	0x9c
 2995 08af F6080000 		.4byte	0x8f6
 2996 08b3 18       		.uleb128 0x18
 2997 08b4 7F030000 		.4byte	.LASF62
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 105


 2998 08b8 01       		.byte	0x1
 2999 08b9 3005     		.2byte	0x530
 3000 08bb 83000000 		.4byte	0x83
 3001 08bf 3C030000 		.4byte	.LLST26
 3002 08c3 16       		.uleb128 0x16
 3003 08c4 AD050000 		.4byte	.LASF79
 3004 08c8 01       		.byte	0x1
 3005 08c9 3205     		.2byte	0x532
 3006 08cb 6B000000 		.4byte	0x6b
 3007 08cf 5D030000 		.4byte	.LLST27
 3008 08d3 1A       		.uleb128 0x1a
 3009 08d4 14010000 		.4byte	.LASF80
 3010 08d8 01       		.byte	0x1
 3011 08d9 3305     		.2byte	0x533
 3012 08db 6B000000 		.4byte	0x6b
 3013 08df 05       		.byte	0x5
 3014 08e0 13       		.uleb128 0x13
 3015 08e1 0E000000 		.4byte	.LVL85
 3016 08e5 DB100000 		.4byte	0x10db
 3017 08e9 11       		.uleb128 0x11
 3018 08ea 01       		.uleb128 0x1
 3019 08eb 52       		.byte	0x52
 3020 08ec 01       		.uleb128 0x1
 3021 08ed 30       		.byte	0x30
 3022 08ee 11       		.uleb128 0x11
 3023 08ef 01       		.uleb128 0x1
 3024 08f0 51       		.byte	0x51
 3025 08f1 02       		.uleb128 0x2
 3026 08f2 74       		.byte	0x74
 3027 08f3 00       		.sleb128 0
 3028 08f4 00       		.byte	0
 3029 08f5 00       		.byte	0
 3030 08f6 17       		.uleb128 0x17
 3031 08f7 13080000 		.4byte	.LASF85
 3032 08fb 01       		.byte	0x1
 3033 08fc 6205     		.2byte	0x562
 3034 08fe 6B000000 		.4byte	0x6b
 3035 0902 00000000 		.4byte	.LFB61
 3036 0906 2C000000 		.4byte	.LFE61-.LFB61
 3037 090a 01       		.uleb128 0x1
 3038 090b 9C       		.byte	0x9c
 3039 090c 7B090000 		.4byte	0x97b
 3040 0910 18       		.uleb128 0x18
 3041 0911 4A040000 		.4byte	.LASF86
 3042 0915 01       		.byte	0x1
 3043 0916 6205     		.2byte	0x562
 3044 0918 6B000000 		.4byte	0x6b
 3045 091c 87030000 		.4byte	.LLST28
 3046 0920 19       		.uleb128 0x19
 3047 0921 DC020000 		.4byte	.LASF87
 3048 0925 01       		.byte	0x1
 3049 0926 6205     		.2byte	0x562
 3050 0928 6B000000 		.4byte	0x6b
 3051 092c 01       		.uleb128 0x1
 3052 092d 51       		.byte	0x51
 3053 092e 19       		.uleb128 0x19
 3054 092f AD090000 		.4byte	.LASF75
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 106


 3055 0933 01       		.byte	0x1
 3056 0934 6205     		.2byte	0x562
 3057 0936 6B000000 		.4byte	0x6b
 3058 093a 01       		.uleb128 0x1
 3059 093b 52       		.byte	0x52
 3060 093c 14       		.uleb128 0x14
 3061 093d 6900     		.ascii	"i\000"
 3062 093f 01       		.byte	0x1
 3063 0940 6505     		.2byte	0x565
 3064 0942 6B000000 		.4byte	0x6b
 3065 0946 A8030000 		.4byte	.LLST29
 3066 094a 16       		.uleb128 0x16
 3067 094b 1C090000 		.4byte	.LASF88
 3068 094f 01       		.byte	0x1
 3069 0950 6F05     		.2byte	0x56f
 3070 0952 6B000000 		.4byte	0x6b
 3071 0956 D2030000 		.4byte	.LLST30
 3072 095a 16       		.uleb128 0x16
 3073 095b 0E080000 		.4byte	.LASF89
 3074 095f 01       		.byte	0x1
 3075 0960 7105     		.2byte	0x571
 3076 0962 6B000000 		.4byte	0x6b
 3077 0966 F2030000 		.4byte	.LLST31
 3078 096a 16       		.uleb128 0x16
 3079 096b 45070000 		.4byte	.LASF90
 3080 096f 01       		.byte	0x1
 3081 0970 7205     		.2byte	0x572
 3082 0972 E2010000 		.4byte	0x1e2
 3083 0976 1C040000 		.4byte	.LLST32
 3084 097a 00       		.byte	0
 3085 097b 1E       		.uleb128 0x1e
 3086 097c B9060000 		.4byte	.LASF91
 3087 0980 01       		.byte	0x1
 3088 0981 0106     		.2byte	0x601
 3089 0983 6B000000 		.4byte	0x6b
 3090 0987 00000000 		.4byte	.LFB62
 3091 098b E4000000 		.4byte	.LFE62-.LFB62
 3092 098f 01       		.uleb128 0x1
 3093 0990 9C       		.byte	0x9c
 3094 0991 560A0000 		.4byte	0xa56
 3095 0995 18       		.uleb128 0x18
 3096 0996 1C090000 		.4byte	.LASF88
 3097 099a 01       		.byte	0x1
 3098 099b 0106     		.2byte	0x601
 3099 099d 6B000000 		.4byte	0x6b
 3100 09a1 2F040000 		.4byte	.LLST33
 3101 09a5 18       		.uleb128 0x18
 3102 09a6 4A040000 		.4byte	.LASF86
 3103 09aa 01       		.byte	0x1
 3104 09ab 0106     		.2byte	0x601
 3105 09ad 6B000000 		.4byte	0x6b
 3106 09b1 50040000 		.4byte	.LLST34
 3107 09b5 18       		.uleb128 0x18
 3108 09b6 DC020000 		.4byte	.LASF87
 3109 09ba 01       		.byte	0x1
 3110 09bb 0206     		.2byte	0x602
 3111 09bd 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 107


 3112 09c1 71040000 		.4byte	.LLST35
 3113 09c5 18       		.uleb128 0x18
 3114 09c6 A2050000 		.4byte	.LASF92
 3115 09ca 01       		.byte	0x1
 3116 09cb 0206     		.2byte	0x602
 3117 09cd 77000000 		.4byte	0x77
 3118 09d1 92040000 		.4byte	.LLST36
 3119 09d5 18       		.uleb128 0x18
 3120 09d6 77090000 		.4byte	.LASF93
 3121 09da 01       		.byte	0x1
 3122 09db 0206     		.2byte	0x602
 3123 09dd 6B000000 		.4byte	0x6b
 3124 09e1 B3040000 		.4byte	.LLST37
 3125 09e5 16       		.uleb128 0x16
 3126 09e6 AF070000 		.4byte	.LASF94
 3127 09ea 01       		.byte	0x1
 3128 09eb 0606     		.2byte	0x606
 3129 09ed 6B000000 		.4byte	0x6b
 3130 09f1 DF040000 		.4byte	.LLST38
 3131 09f5 16       		.uleb128 0x16
 3132 09f6 3E010000 		.4byte	.LASF95
 3133 09fa 01       		.byte	0x1
 3134 09fb 0706     		.2byte	0x607
 3135 09fd 6B000000 		.4byte	0x6b
 3136 0a01 20050000 		.4byte	.LLST39
 3137 0a05 1B       		.uleb128 0x1b
 3138 0a06 D0050000 		.4byte	.LASF96
 3139 0a0a 01       		.byte	0x1
 3140 0a0b 0C06     		.2byte	0x60c
 3141 0a0d 560A0000 		.4byte	0xa56
 3142 0a11 05       		.uleb128 0x5
 3143 0a12 03       		.byte	0x3
 3144 0a13 24000000 		.4byte	CapSense_centroid.5414
 3145 0a17 1B       		.uleb128 0x1b
 3146 0a18 B50B0000 		.4byte	.LASF97
 3147 0a1c 01       		.byte	0x1
 3148 0a1d 1306     		.2byte	0x613
 3149 0a1f 6B000000 		.4byte	0x6b
 3150 0a23 01       		.uleb128 0x1
 3151 0a24 50       		.byte	0x50
 3152 0a25 16       		.uleb128 0x16
 3153 0a26 8C070000 		.4byte	.LASF98
 3154 0a2a 01       		.byte	0x1
 3155 0a2b 1406     		.2byte	0x614
 3156 0a2d 83000000 		.4byte	0x83
 3157 0a31 33050000 		.4byte	.LLST40
 3158 0a35 16       		.uleb128 0x16
 3159 0a36 EE080000 		.4byte	.LASF99
 3160 0a3a 01       		.byte	0x1
 3161 0a3b 1506     		.2byte	0x615
 3162 0a3d 9B000000 		.4byte	0x9b
 3163 0a41 5E050000 		.4byte	.LLST41
 3164 0a45 16       		.uleb128 0x16
 3165 0a46 45070000 		.4byte	.LASF90
 3166 0a4a 01       		.byte	0x1
 3167 0a4b 1706     		.2byte	0x617
 3168 0a4d E2010000 		.4byte	0x1e2
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 108


 3169 0a51 C2050000 		.4byte	.LLST42
 3170 0a55 00       		.byte	0
 3171 0a56 1C       		.uleb128 0x1c
 3172 0a57 6B000000 		.4byte	0x6b
 3173 0a5b 660A0000 		.4byte	0xa66
 3174 0a5f 1D       		.uleb128 0x1d
 3175 0a60 BC000000 		.4byte	0xbc
 3176 0a64 02       		.byte	0x2
 3177 0a65 00       		.byte	0
 3178 0a66 17       		.uleb128 0x17
 3179 0a67 EC0A0000 		.4byte	.LASF100
 3180 0a6b 01       		.byte	0x1
 3181 0a6c 9F07     		.2byte	0x79f
 3182 0a6e 77000000 		.4byte	0x77
 3183 0a72 00000000 		.4byte	.LFB64
 3184 0a76 40000000 		.4byte	.LFE64-.LFB64
 3185 0a7a 01       		.uleb128 0x1
 3186 0a7b 9C       		.byte	0x9c
 3187 0a7c FE0A0000 		.4byte	0xafe
 3188 0a80 18       		.uleb128 0x18
 3189 0a81 7F030000 		.4byte	.LASF62
 3190 0a85 01       		.byte	0x1
 3191 0a86 9F07     		.2byte	0x79f
 3192 0a88 83000000 		.4byte	0x83
 3193 0a8c E0050000 		.4byte	.LLST43
 3194 0a90 16       		.uleb128 0x16
 3195 0a91 1C090000 		.4byte	.LASF88
 3196 0a95 01       		.byte	0x1
 3197 0a96 AE07     		.2byte	0x7ae
 3198 0a98 6B000000 		.4byte	0x6b
 3199 0a9c 0C060000 		.4byte	.LLST44
 3200 0aa0 16       		.uleb128 0x16
 3201 0aa1 B50B0000 		.4byte	.LASF97
 3202 0aa5 01       		.byte	0x1
 3203 0aa6 AF07     		.2byte	0x7af
 3204 0aa8 77000000 		.4byte	0x77
 3205 0aac 2A060000 		.4byte	.LLST45
 3206 0ab0 1A       		.uleb128 0x1a
 3207 0ab1 4A040000 		.4byte	.LASF86
 3208 0ab5 01       		.byte	0x1
 3209 0ab6 B007     		.2byte	0x7b0
 3210 0ab8 6B000000 		.4byte	0x6b
 3211 0abc 00       		.byte	0
 3212 0abd 1A       		.uleb128 0x1a
 3213 0abe DC020000 		.4byte	.LASF87
 3214 0ac2 01       		.byte	0x1
 3215 0ac3 B107     		.2byte	0x7b1
 3216 0ac5 6B000000 		.4byte	0x6b
 3217 0ac9 05       		.byte	0x5
 3218 0aca 10       		.uleb128 0x10
 3219 0acb 12000000 		.4byte	.LVL131
 3220 0acf F6080000 		.4byte	0x8f6
 3221 0ad3 E20A0000 		.4byte	0xae2
 3222 0ad7 11       		.uleb128 0x11
 3223 0ad8 01       		.uleb128 0x1
 3224 0ad9 51       		.byte	0x51
 3225 0ada 01       		.uleb128 0x1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 109


 3226 0adb 35       		.byte	0x35
 3227 0adc 11       		.uleb128 0x11
 3228 0add 01       		.uleb128 0x1
 3229 0ade 50       		.byte	0x50
 3230 0adf 01       		.uleb128 0x1
 3231 0ae0 30       		.byte	0x30
 3232 0ae1 00       		.byte	0
 3233 0ae2 13       		.uleb128 0x13
 3234 0ae3 28000000 		.4byte	.LVL132
 3235 0ae7 7B090000 		.4byte	0x97b
 3236 0aeb 11       		.uleb128 0x11
 3237 0aec 01       		.uleb128 0x1
 3238 0aed 53       		.byte	0x53
 3239 0aee 03       		.uleb128 0x3
 3240 0aef 0A       		.byte	0xa
 3241 0af0 0019     		.2byte	0x1900
 3242 0af2 11       		.uleb128 0x11
 3243 0af3 01       		.uleb128 0x1
 3244 0af4 52       		.byte	0x52
 3245 0af5 01       		.uleb128 0x1
 3246 0af6 35       		.byte	0x35
 3247 0af7 11       		.uleb128 0x11
 3248 0af8 01       		.uleb128 0x1
 3249 0af9 51       		.byte	0x51
 3250 0afa 01       		.uleb128 0x1
 3251 0afb 30       		.byte	0x30
 3252 0afc 00       		.byte	0
 3253 0afd 00       		.byte	0
 3254 0afe 17       		.uleb128 0x17
 3255 0aff 190B0000 		.4byte	.LASF101
 3256 0b03 01       		.byte	0x1
 3257 0b04 4C09     		.2byte	0x94c
 3258 0b06 77000000 		.4byte	0x77
 3259 0b0a 00000000 		.4byte	.LFB65
 3260 0b0e 1C000000 		.4byte	.LFE65-.LFB65
 3261 0b12 01       		.uleb128 0x1
 3262 0b13 9C       		.byte	0x9c
 3263 0b14 500B0000 		.4byte	0xb50
 3264 0b18 1F       		.uleb128 0x1f
 3265 0b19 783100   		.ascii	"x1\000"
 3266 0b1c 01       		.byte	0x1
 3267 0b1d 4C09     		.2byte	0x94c
 3268 0b1f 77000000 		.4byte	0x77
 3269 0b23 48060000 		.4byte	.LLST46
 3270 0b27 1F       		.uleb128 0x1f
 3271 0b28 783200   		.ascii	"x2\000"
 3272 0b2b 01       		.byte	0x1
 3273 0b2c 4C09     		.2byte	0x94c
 3274 0b2e 77000000 		.4byte	0x77
 3275 0b32 74060000 		.4byte	.LLST47
 3276 0b36 20       		.uleb128 0x20
 3277 0b37 783300   		.ascii	"x3\000"
 3278 0b3a 01       		.byte	0x1
 3279 0b3b 4C09     		.2byte	0x94c
 3280 0b3d 77000000 		.4byte	0x77
 3281 0b41 01       		.uleb128 0x1
 3282 0b42 52       		.byte	0x52
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 110


 3283 0b43 21       		.uleb128 0x21
 3284 0b44 746D7000 		.ascii	"tmp\000"
 3285 0b48 01       		.byte	0x1
 3286 0b49 4E09     		.2byte	0x94e
 3287 0b4b 77000000 		.4byte	0x77
 3288 0b4f 00       		.byte	0
 3289 0b50 17       		.uleb128 0x17
 3290 0b51 1B000000 		.4byte	.LASF102
 3291 0b55 01       		.byte	0x1
 3292 0b56 C409     		.2byte	0x9c4
 3293 0b58 77000000 		.4byte	0x77
 3294 0b5c 00000000 		.4byte	.LFB66
 3295 0b60 0C000000 		.4byte	.LFE66-.LFB66
 3296 0b64 01       		.uleb128 0x1
 3297 0b65 9C       		.byte	0x9c
 3298 0b66 990B0000 		.4byte	0xb99
 3299 0b6a 1F       		.uleb128 0x1f
 3300 0b6b 783100   		.ascii	"x1\000"
 3301 0b6e 01       		.byte	0x1
 3302 0b6f C409     		.2byte	0x9c4
 3303 0b71 77000000 		.4byte	0x77
 3304 0b75 92060000 		.4byte	.LLST48
 3305 0b79 1F       		.uleb128 0x1f
 3306 0b7a 783200   		.ascii	"x2\000"
 3307 0b7d 01       		.byte	0x1
 3308 0b7e C409     		.2byte	0x9c4
 3309 0b80 77000000 		.4byte	0x77
 3310 0b84 B3060000 		.4byte	.LLST49
 3311 0b88 14       		.uleb128 0x14
 3312 0b89 746D7000 		.ascii	"tmp\000"
 3313 0b8d 01       		.byte	0x1
 3314 0b8e C609     		.2byte	0x9c6
 3315 0b90 83000000 		.4byte	0x83
 3316 0b94 D4060000 		.4byte	.LLST50
 3317 0b98 00       		.byte	0
 3318 0b99 15       		.uleb128 0x15
 3319 0b9a 72000000 		.4byte	.LASF103
 3320 0b9e 01       		.byte	0x1
 3321 0b9f 6201     		.2byte	0x162
 3322 0ba1 00000000 		.4byte	.LFB38
 3323 0ba5 1C010000 		.4byte	.LFE38-.LFB38
 3324 0ba9 01       		.uleb128 0x1
 3325 0baa 9C       		.byte	0x9c
 3326 0bab 530C0000 		.4byte	0xc53
 3327 0baf 18       		.uleb128 0x18
 3328 0bb0 23050000 		.4byte	.LASF51
 3329 0bb4 01       		.byte	0x1
 3330 0bb5 6201     		.2byte	0x162
 3331 0bb7 83000000 		.4byte	0x83
 3332 0bbb 04070000 		.4byte	.LLST51
 3333 0bbf 16       		.uleb128 0x16
 3334 0bc0 62040000 		.4byte	.LASF104
 3335 0bc4 01       		.byte	0x1
 3336 0bc5 6401     		.2byte	0x164
 3337 0bc7 83000000 		.4byte	0x83
 3338 0bcb 62070000 		.4byte	.LLST52
 3339 0bcf 16       		.uleb128 0x16
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 111


 3340 0bd0 45040000 		.4byte	.LASF105
 3341 0bd4 01       		.byte	0x1
 3342 0bd5 6501     		.2byte	0x165
 3343 0bd7 83000000 		.4byte	0x83
 3344 0bdb 80070000 		.4byte	.LLST53
 3345 0bdf 16       		.uleb128 0x16
 3346 0be0 2F0B0000 		.4byte	.LASF106
 3347 0be4 01       		.byte	0x1
 3348 0be5 6601     		.2byte	0x166
 3349 0be7 77000000 		.4byte	0x77
 3350 0beb D7070000 		.4byte	.LLST54
 3351 0bef 16       		.uleb128 0x16
 3352 0bf0 97040000 		.4byte	.LASF107
 3353 0bf4 01       		.byte	0x1
 3354 0bf5 6701     		.2byte	0x167
 3355 0bf7 77000000 		.4byte	0x77
 3356 0bfb F5070000 		.4byte	.LLST55
 3357 0bff 22       		.uleb128 0x22
 3358 0c00 7F030000 		.4byte	.LASF62
 3359 0c04 01       		.byte	0x1
 3360 0c05 6801     		.2byte	0x168
 3361 0c07 6B000000 		.4byte	0x6b
 3362 0c0b 1B       		.uleb128 0x1b
 3363 0c0c 77090000 		.4byte	.LASF93
 3364 0c10 01       		.byte	0x1
 3365 0c11 6901     		.2byte	0x169
 3366 0c13 6B000000 		.4byte	0x6b
 3367 0c17 02       		.uleb128 0x2
 3368 0c18 91       		.byte	0x91
 3369 0c19 64       		.sleb128 -28
 3370 0c1a 10       		.uleb128 0x10
 3371 0c1b 2E000000 		.4byte	.LVL152
 3372 0c1f 500B0000 		.4byte	0xb50
 3373 0c23 2E0C0000 		.4byte	0xc2e
 3374 0c27 11       		.uleb128 0x11
 3375 0c28 01       		.uleb128 0x1
 3376 0c29 50       		.byte	0x50
 3377 0c2a 02       		.uleb128 0x2
 3378 0c2b 77       		.byte	0x77
 3379 0c2c 00       		.sleb128 0
 3380 0c2d 00       		.byte	0
 3381 0c2e 10       		.uleb128 0x10
 3382 0c2f 3E000000 		.4byte	.LVL155
 3383 0c33 F6100000 		.4byte	0x10f6
 3384 0c37 420C0000 		.4byte	0xc42
 3385 0c3b 11       		.uleb128 0x11
 3386 0c3c 01       		.uleb128 0x1
 3387 0c3d 51       		.byte	0x51
 3388 0c3e 02       		.uleb128 0x2
 3389 0c3f 74       		.byte	0x74
 3390 0c40 00       		.sleb128 0
 3391 0c41 00       		.byte	0
 3392 0c42 13       		.uleb128 0x13
 3393 0c43 82000000 		.4byte	.LVL160
 3394 0c47 CC020000 		.4byte	0x2cc
 3395 0c4b 11       		.uleb128 0x11
 3396 0c4c 01       		.uleb128 0x1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 112


 3397 0c4d 50       		.byte	0x50
 3398 0c4e 02       		.uleb128 0x2
 3399 0c4f 74       		.byte	0x74
 3400 0c50 00       		.sleb128 0
 3401 0c51 00       		.byte	0
 3402 0c52 00       		.byte	0
 3403 0c53 15       		.uleb128 0x15
 3404 0c54 89060000 		.4byte	.LASF108
 3405 0c58 01       		.byte	0x1
 3406 0c59 2202     		.2byte	0x222
 3407 0c5b 00000000 		.4byte	.LFB39
 3408 0c5f 10000000 		.4byte	.LFE39-.LFB39
 3409 0c63 01       		.uleb128 0x1
 3410 0c64 9C       		.byte	0x9c
 3411 0c65 9E0C0000 		.4byte	0xc9e
 3412 0c69 18       		.uleb128 0x18
 3413 0c6a 23050000 		.4byte	.LASF51
 3414 0c6e 01       		.byte	0x1
 3415 0c6f 2202     		.2byte	0x222
 3416 0c71 83000000 		.4byte	0x83
 3417 0c75 1E080000 		.4byte	.LLST56
 3418 0c79 10       		.uleb128 0x10
 3419 0c7a 08000000 		.4byte	.LVL177
 3420 0c7e 1C110000 		.4byte	0x111c
 3421 0c82 8D0C0000 		.4byte	0xc8d
 3422 0c86 11       		.uleb128 0x11
 3423 0c87 01       		.uleb128 0x1
 3424 0c88 50       		.byte	0x50
 3425 0c89 02       		.uleb128 0x2
 3426 0c8a 74       		.byte	0x74
 3427 0c8b 00       		.sleb128 0
 3428 0c8c 00       		.byte	0
 3429 0c8d 13       		.uleb128 0x13
 3430 0c8e 0E000000 		.4byte	.LVL178
 3431 0c92 990B0000 		.4byte	0xb99
 3432 0c96 11       		.uleb128 0x11
 3433 0c97 01       		.uleb128 0x1
 3434 0c98 50       		.byte	0x50
 3435 0c99 02       		.uleb128 0x2
 3436 0c9a 74       		.byte	0x74
 3437 0c9b 00       		.sleb128 0
 3438 0c9c 00       		.byte	0
 3439 0c9d 00       		.byte	0
 3440 0c9e 15       		.uleb128 0x15
 3441 0c9f CB000000 		.4byte	.LASF109
 3442 0ca3 01       		.byte	0x1
 3443 0ca4 5802     		.2byte	0x258
 3444 0ca6 00000000 		.4byte	.LFB40
 3445 0caa 24000000 		.4byte	.LFE40-.LFB40
 3446 0cae 01       		.uleb128 0x1
 3447 0caf 9C       		.byte	0x9c
 3448 0cb0 F70C0000 		.4byte	0xcf7
 3449 0cb4 14       		.uleb128 0x14
 3450 0cb5 6900     		.ascii	"i\000"
 3451 0cb7 01       		.byte	0x1
 3452 0cb8 5A02     		.2byte	0x25a
 3453 0cba 83000000 		.4byte	0x83
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 113


 3454 0cbe 4A080000 		.4byte	.LLST57
 3455 0cc2 16       		.uleb128 0x16
 3456 0cc3 04010000 		.4byte	.LASF54
 3457 0cc7 01       		.byte	0x1
 3458 0cc8 5B02     		.2byte	0x25b
 3459 0cca 83000000 		.4byte	0x83
 3460 0cce 69080000 		.4byte	.LLST58
 3461 0cd2 10       		.uleb128 0x10
 3462 0cd3 0E000000 		.4byte	.LVL182
 3463 0cd7 C1100000 		.4byte	0x10c1
 3464 0cdb E60C0000 		.4byte	0xce6
 3465 0cdf 11       		.uleb128 0x11
 3466 0ce0 01       		.uleb128 0x1
 3467 0ce1 51       		.byte	0x51
 3468 0ce2 02       		.uleb128 0x2
 3469 0ce3 74       		.byte	0x74
 3470 0ce4 00       		.sleb128 0
 3471 0ce5 00       		.byte	0
 3472 0ce6 13       		.uleb128 0x13
 3473 0ce7 18000000 		.4byte	.LVL184
 3474 0ceb 530C0000 		.4byte	0xc53
 3475 0cef 11       		.uleb128 0x11
 3476 0cf0 01       		.uleb128 0x1
 3477 0cf1 50       		.byte	0x50
 3478 0cf2 02       		.uleb128 0x2
 3479 0cf3 74       		.byte	0x74
 3480 0cf4 00       		.sleb128 0
 3481 0cf5 00       		.byte	0
 3482 0cf6 00       		.byte	0
 3483 0cf7 15       		.uleb128 0x15
 3484 0cf8 9E020000 		.4byte	.LASF110
 3485 0cfc 01       		.byte	0x1
 3486 0cfd 8502     		.2byte	0x285
 3487 0cff 00000000 		.4byte	.LFB41
 3488 0d03 24000000 		.4byte	.LFE41-.LFB41
 3489 0d07 01       		.uleb128 0x1
 3490 0d08 9C       		.byte	0x9c
 3491 0d09 870D0000 		.4byte	0xd87
 3492 0d0d 18       		.uleb128 0x18
 3493 0d0e 7F030000 		.4byte	.LASF62
 3494 0d12 01       		.byte	0x1
 3495 0d13 8502     		.2byte	0x285
 3496 0d15 83000000 		.4byte	0x83
 3497 0d19 7C080000 		.4byte	.LLST59
 3498 0d1d 1A       		.uleb128 0x1a
 3499 0d1e A7040000 		.4byte	.LASF111
 3500 0d22 01       		.byte	0x1
 3501 0d23 8702     		.2byte	0x287
 3502 0d25 83000000 		.4byte	0x83
 3503 0d29 05       		.byte	0x5
 3504 0d2a 1A       		.uleb128 0x1a
 3505 0d2b 02080000 		.4byte	.LASF112
 3506 0d2f 01       		.byte	0x1
 3507 0d30 8802     		.2byte	0x288
 3508 0d32 83000000 		.4byte	0x83
 3509 0d36 00       		.byte	0
 3510 0d37 1A       		.uleb128 0x1a
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 114


 3511 0d38 96070000 		.4byte	.LASF113
 3512 0d3c 01       		.byte	0x1
 3513 0d3d 8902     		.2byte	0x289
 3514 0d3f 83000000 		.4byte	0x83
 3515 0d43 05       		.byte	0x5
 3516 0d44 14       		.uleb128 0x14
 3517 0d45 6900     		.ascii	"i\000"
 3518 0d47 01       		.byte	0x1
 3519 0d48 8A02     		.2byte	0x28a
 3520 0d4a 83000000 		.4byte	0x83
 3521 0d4e 9D080000 		.4byte	.LLST60
 3522 0d52 16       		.uleb128 0x16
 3523 0d53 04010000 		.4byte	.LASF54
 3524 0d57 01       		.byte	0x1
 3525 0d58 8B02     		.2byte	0x28b
 3526 0d5a 83000000 		.4byte	0x83
 3527 0d5e BC080000 		.4byte	.LLST61
 3528 0d62 10       		.uleb128 0x10
 3529 0d63 0E000000 		.4byte	.LVL190
 3530 0d67 C1100000 		.4byte	0x10c1
 3531 0d6b 760D0000 		.4byte	0xd76
 3532 0d6f 11       		.uleb128 0x11
 3533 0d70 01       		.uleb128 0x1
 3534 0d71 51       		.byte	0x51
 3535 0d72 02       		.uleb128 0x2
 3536 0d73 74       		.byte	0x74
 3537 0d74 00       		.sleb128 0
 3538 0d75 00       		.byte	0
 3539 0d76 13       		.uleb128 0x13
 3540 0d77 18000000 		.4byte	.LVL192
 3541 0d7b 530C0000 		.4byte	0xc53
 3542 0d7f 11       		.uleb128 0x11
 3543 0d80 01       		.uleb128 0x1
 3544 0d81 50       		.byte	0x50
 3545 0d82 02       		.uleb128 0x2
 3546 0d83 74       		.byte	0x74
 3547 0d84 00       		.sleb128 0
 3548 0d85 00       		.byte	0
 3549 0d86 00       		.byte	0
 3550 0d87 17       		.uleb128 0x17
 3551 0d88 C8070000 		.4byte	.LASF114
 3552 0d8c 01       		.byte	0x1
 3553 0d8d D406     		.2byte	0x6d4
 3554 0d8f 77000000 		.4byte	0x77
 3555 0d93 00000000 		.4byte	.LFB63
 3556 0d97 7C000000 		.4byte	.LFE63-.LFB63
 3557 0d9b 01       		.uleb128 0x1
 3558 0d9c 9C       		.byte	0x9c
 3559 0d9d 590E0000 		.4byte	0xe59
 3560 0da1 18       		.uleb128 0x18
 3561 0da2 7F030000 		.4byte	.LASF62
 3562 0da6 01       		.byte	0x1
 3563 0da7 D406     		.2byte	0x6d4
 3564 0da9 83000000 		.4byte	0x83
 3565 0dad CF080000 		.4byte	.LLST62
 3566 0db1 16       		.uleb128 0x16
 3567 0db2 EB000000 		.4byte	.LASF115
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 115


 3568 0db6 01       		.byte	0x1
 3569 0db7 DB06     		.2byte	0x6db
 3570 0db9 6B000000 		.4byte	0x6b
 3571 0dbd 14090000 		.4byte	.LLST63
 3572 0dc1 16       		.uleb128 0x16
 3573 0dc2 36070000 		.4byte	.LASF116
 3574 0dc6 01       		.byte	0x1
 3575 0dc7 DC06     		.2byte	0x6dc
 3576 0dc9 6B000000 		.4byte	0x6b
 3577 0dcd 4C090000 		.4byte	.LLST64
 3578 0dd1 1A       		.uleb128 0x1a
 3579 0dd2 F1020000 		.4byte	.LASF117
 3580 0dd6 01       		.byte	0x1
 3581 0dd7 DD06     		.2byte	0x6dd
 3582 0dd9 6B000000 		.4byte	0x6b
 3583 0ddd 08       		.byte	0x8
 3584 0dde 16       		.uleb128 0x16
 3585 0ddf 1C090000 		.4byte	.LASF88
 3586 0de3 01       		.byte	0x1
 3587 0de4 E706     		.2byte	0x6e7
 3588 0de6 6B000000 		.4byte	0x6b
 3589 0dea 6A090000 		.4byte	.LLST65
 3590 0dee 16       		.uleb128 0x16
 3591 0def B50B0000 		.4byte	.LASF97
 3592 0df3 01       		.byte	0x1
 3593 0df4 E806     		.2byte	0x6e8
 3594 0df6 77000000 		.4byte	0x77
 3595 0dfa 88090000 		.4byte	.LLST66
 3596 0dfe 1A       		.uleb128 0x1a
 3597 0dff 4A040000 		.4byte	.LASF86
 3598 0e03 01       		.byte	0x1
 3599 0e04 E906     		.2byte	0x6e9
 3600 0e06 6B000000 		.4byte	0x6b
 3601 0e0a 00       		.byte	0
 3602 0e0b 1A       		.uleb128 0x1a
 3603 0e0c DC020000 		.4byte	.LASF87
 3604 0e10 01       		.byte	0x1
 3605 0e11 EA06     		.2byte	0x6ea
 3606 0e13 6B000000 		.4byte	0x6b
 3607 0e17 05       		.byte	0x5
 3608 0e18 10       		.uleb128 0x10
 3609 0e19 18000000 		.4byte	.LVL198
 3610 0e1d F6080000 		.4byte	0x8f6
 3611 0e21 300E0000 		.4byte	0xe30
 3612 0e25 11       		.uleb128 0x11
 3613 0e26 01       		.uleb128 0x1
 3614 0e27 51       		.byte	0x51
 3615 0e28 01       		.uleb128 0x1
 3616 0e29 35       		.byte	0x35
 3617 0e2a 11       		.uleb128 0x11
 3618 0e2b 01       		.uleb128 0x1
 3619 0e2c 50       		.byte	0x50
 3620 0e2d 01       		.uleb128 0x1
 3621 0e2e 30       		.byte	0x30
 3622 0e2f 00       		.byte	0
 3623 0e30 10       		.uleb128 0x10
 3624 0e31 2E000000 		.4byte	.LVL199
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 116


 3625 0e35 7B090000 		.4byte	0x97b
 3626 0e39 4F0E0000 		.4byte	0xe4f
 3627 0e3d 11       		.uleb128 0x11
 3628 0e3e 01       		.uleb128 0x1
 3629 0e3f 53       		.byte	0x53
 3630 0e40 03       		.uleb128 0x3
 3631 0e41 0A       		.byte	0xa
 3632 0e42 0019     		.2byte	0x1900
 3633 0e44 11       		.uleb128 0x11
 3634 0e45 01       		.uleb128 0x1
 3635 0e46 52       		.byte	0x52
 3636 0e47 01       		.uleb128 0x1
 3637 0e48 35       		.byte	0x35
 3638 0e49 11       		.uleb128 0x11
 3639 0e4a 01       		.uleb128 0x1
 3640 0e4b 51       		.byte	0x51
 3641 0e4c 01       		.uleb128 0x1
 3642 0e4d 30       		.byte	0x30
 3643 0e4e 00       		.byte	0
 3644 0e4f 12       		.uleb128 0x12
 3645 0e50 58000000 		.4byte	.LVL206
 3646 0e54 500B0000 		.4byte	0xb50
 3647 0e58 00       		.byte	0
 3648 0e59 17       		.uleb128 0x17
 3649 0e5a 35060000 		.4byte	.LASF118
 3650 0e5e 01       		.byte	0x1
 3651 0e5f AD0A     		.2byte	0xaad
 3652 0e61 83000000 		.4byte	0x83
 3653 0e65 00000000 		.4byte	.LFB67
 3654 0e69 0C000000 		.4byte	.LFE67-.LFB67
 3655 0e6d 01       		.uleb128 0x1
 3656 0e6e 9C       		.byte	0x9c
 3657 0e6f 840E0000 		.4byte	0xe84
 3658 0e73 18       		.uleb128 0x18
 3659 0e74 23050000 		.4byte	.LASF51
 3660 0e78 01       		.byte	0x1
 3661 0e79 AD0A     		.2byte	0xaad
 3662 0e7b 83000000 		.4byte	0x83
 3663 0e7f BE090000 		.4byte	.LLST67
 3664 0e83 00       		.byte	0
 3665 0e84 17       		.uleb128 0x17
 3666 0e85 EF060000 		.4byte	.LASF119
 3667 0e89 01       		.byte	0x1
 3668 0e8a C70A     		.2byte	0xac7
 3669 0e8c 6B000000 		.4byte	0x6b
 3670 0e90 00000000 		.4byte	.LFB68
 3671 0e94 0C000000 		.4byte	.LFE68-.LFB68
 3672 0e98 01       		.uleb128 0x1
 3673 0e99 9C       		.byte	0x9c
 3674 0e9a AF0E0000 		.4byte	0xeaf
 3675 0e9e 18       		.uleb128 0x18
 3676 0e9f 23050000 		.4byte	.LASF51
 3677 0ea3 01       		.byte	0x1
 3678 0ea4 C70A     		.2byte	0xac7
 3679 0ea6 83000000 		.4byte	0x83
 3680 0eaa DF090000 		.4byte	.LLST68
 3681 0eae 00       		.byte	0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 117


 3682 0eaf 17       		.uleb128 0x17
 3683 0eb0 370B0000 		.4byte	.LASF120
 3684 0eb4 01       		.byte	0x1
 3685 0eb5 E10A     		.2byte	0xae1
 3686 0eb7 6B000000 		.4byte	0x6b
 3687 0ebb 00000000 		.4byte	.LFB69
 3688 0ebf 0C000000 		.4byte	.LFE69-.LFB69
 3689 0ec3 01       		.uleb128 0x1
 3690 0ec4 9C       		.byte	0x9c
 3691 0ec5 DA0E0000 		.4byte	0xeda
 3692 0ec9 18       		.uleb128 0x18
 3693 0eca 7F030000 		.4byte	.LASF62
 3694 0ece 01       		.byte	0x1
 3695 0ecf E10A     		.2byte	0xae1
 3696 0ed1 83000000 		.4byte	0x83
 3697 0ed5 000A0000 		.4byte	.LLST69
 3698 0ed9 00       		.byte	0
 3699 0eda 23       		.uleb128 0x23
 3700 0edb B6080000 		.4byte	.LASF121
 3701 0edf 01       		.byte	0x1
 3702 0ee0 FB0A     		.2byte	0xafb
 3703 0ee2 00000000 		.4byte	.LFB70
 3704 0ee6 0C000000 		.4byte	.LFE70-.LFB70
 3705 0eea 01       		.uleb128 0x1
 3706 0eeb 9C       		.byte	0x9c
 3707 0eec 23       		.uleb128 0x23
 3708 0eed E9030000 		.4byte	.LASF122
 3709 0ef1 01       		.byte	0x1
 3710 0ef2 140B     		.2byte	0xb14
 3711 0ef4 00000000 		.4byte	.LFB71
 3712 0ef8 0C000000 		.4byte	.LFE71-.LFB71
 3713 0efc 01       		.uleb128 0x1
 3714 0efd 9C       		.byte	0x9c
 3715 0efe 1C       		.uleb128 0x1c
 3716 0eff 77000000 		.4byte	0x77
 3717 0f03 0E0F0000 		.4byte	0xf0e
 3718 0f07 1D       		.uleb128 0x1d
 3719 0f08 BC000000 		.4byte	0xbc
 3720 0f0c 00       		.byte	0
 3721 0f0d 00       		.byte	0
 3722 0f0e 24       		.uleb128 0x24
 3723 0f0f 780A0000 		.4byte	.LASF123
 3724 0f13 01       		.byte	0x1
 3725 0f14 5D       		.byte	0x5d
 3726 0f15 1C0F0000 		.4byte	0xf1c
 3727 0f19 02       		.byte	0x2
 3728 0f1a 00       		.byte	0
 3729 0f1b 19       		.byte	0x19
 3730 0f1c 09       		.uleb128 0x9
 3731 0f1d FE0E0000 		.4byte	0xefe
 3732 0f21 24       		.uleb128 0x24
 3733 0f22 86030000 		.4byte	.LASF124
 3734 0f26 01       		.byte	0x1
 3735 0f27 61       		.byte	0x61
 3736 0f28 2E0F0000 		.4byte	0xf2e
 3737 0f2c 01       		.byte	0x1
 3738 0f2d 08       		.byte	0x8
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 118


 3739 0f2e 09       		.uleb128 0x9
 3740 0f2f 83070000 		.4byte	0x783
 3741 0f33 25       		.uleb128 0x25
 3742 0f34 7D010000 		.4byte	.LASF125
 3743 0f38 01       		.byte	0x1
 3744 0f39 65       		.byte	0x65
 3745 0f3a 560A0000 		.4byte	0xa56
 3746 0f3e 05       		.uleb128 0x5
 3747 0f3f 03       		.byte	0x3
 3748 0f40 0C000000 		.4byte	CapSense_posFiltersData
 3749 0f44 1C       		.uleb128 0x1c
 3750 0f45 77000000 		.4byte	0x77
 3751 0f49 540F0000 		.4byte	0xf54
 3752 0f4d 1D       		.uleb128 0x1d
 3753 0f4e BC000000 		.4byte	0xbc
 3754 0f52 04       		.byte	0x4
 3755 0f53 00       		.byte	0
 3756 0f54 26       		.uleb128 0x26
 3757 0f55 DC060000 		.4byte	.LASF126
 3758 0f59 01       		.byte	0x1
 3759 0f5a 2C       		.byte	0x2c
 3760 0f5b 440F0000 		.4byte	0xf44
 3761 0f5f 26       		.uleb128 0x26
 3762 0f60 47030000 		.4byte	.LASF127
 3763 0f64 01       		.byte	0x1
 3764 0f65 2D       		.byte	0x2d
 3765 0f66 83070000 		.4byte	0x783
 3766 0f6a 1C       		.uleb128 0x1c
 3767 0f6b 6B000000 		.4byte	0x6b
 3768 0f6f 7A0F0000 		.4byte	0xf7a
 3769 0f73 1D       		.uleb128 0x1d
 3770 0f74 BC000000 		.4byte	0xbc
 3771 0f78 04       		.byte	0x4
 3772 0f79 00       		.byte	0
 3773 0f7a 26       		.uleb128 0x26
 3774 0f7b B7030000 		.4byte	.LASF128
 3775 0f7f 01       		.byte	0x1
 3776 0f80 2E       		.byte	0x2e
 3777 0f81 850F0000 		.4byte	0xf85
 3778 0f85 09       		.uleb128 0x9
 3779 0f86 6A0F0000 		.4byte	0xf6a
 3780 0f8a 27       		.uleb128 0x27
 3781 0f8b 04090000 		.4byte	.LASF129
 3782 0f8f 01       		.byte	0x1
 3783 0f90 34       		.byte	0x34
 3784 0f91 440F0000 		.4byte	0xf44
 3785 0f95 05       		.uleb128 0x5
 3786 0f96 03       		.byte	0x3
 3787 0f97 00000000 		.4byte	CapSense_sensorBaseline
 3788 0f9b 27       		.uleb128 0x27
 3789 0f9c 00000000 		.4byte	.LASF130
 3790 0fa0 01       		.byte	0x1
 3791 0fa1 35       		.byte	0x35
 3792 0fa2 6A0F0000 		.4byte	0xf6a
 3793 0fa6 05       		.uleb128 0x5
 3794 0fa7 03       		.byte	0x3
 3795 0fa8 00000000 		.4byte	CapSense_sensorBaselineLow
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 119


 3796 0fac 27       		.uleb128 0x27
 3797 0fad 57020000 		.4byte	.LASF131
 3798 0fb1 01       		.byte	0x1
 3799 0fb2 36       		.byte	0x36
 3800 0fb3 6A0F0000 		.4byte	0xf6a
 3801 0fb7 05       		.uleb128 0x5
 3802 0fb8 03       		.byte	0x3
 3803 0fb9 00000000 		.4byte	CapSense_sensorSignal
 3804 0fbd 27       		.uleb128 0x27
 3805 0fbe BE0B0000 		.4byte	.LASF132
 3806 0fc2 01       		.byte	0x1
 3807 0fc3 37       		.byte	0x37
 3808 0fc4 83070000 		.4byte	0x783
 3809 0fc8 05       		.uleb128 0x5
 3810 0fc9 03       		.byte	0x3
 3811 0fca 00000000 		.4byte	CapSense_sensorOnMask
 3812 0fce 27       		.uleb128 0x27
 3813 0fcf 55000000 		.4byte	.LASF133
 3814 0fd3 01       		.byte	0x1
 3815 0fd4 39       		.byte	0x39
 3816 0fd5 6A0F0000 		.4byte	0xf6a
 3817 0fd9 05       		.uleb128 0x5
 3818 0fda 03       		.byte	0x3
 3819 0fdb 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3820 0fdf 27       		.uleb128 0x27
 3821 0fe0 D4080000 		.4byte	.LASF134
 3822 0fe4 01       		.byte	0x1
 3823 0fe5 3A       		.byte	0x3a
 3824 0fe6 6A0F0000 		.4byte	0xf6a
 3825 0fea 05       		.uleb128 0x5
 3826 0feb 03       		.byte	0x3
 3827 0fec 00000000 		.4byte	CapSense_lowBaselineReset
 3828 0ff0 27       		.uleb128 0x27
 3829 0ff1 9E030000 		.4byte	.LASF135
 3830 0ff5 01       		.byte	0x1
 3831 0ff6 49       		.byte	0x49
 3832 0ff7 83070000 		.4byte	0x783
 3833 0ffb 05       		.uleb128 0x5
 3834 0ffc 03       		.byte	0x3
 3835 0ffd 00000000 		.4byte	CapSense_fingerThreshold
 3836 1001 27       		.uleb128 0x27
 3837 1002 D8090000 		.4byte	.LASF136
 3838 1006 01       		.byte	0x1
 3839 1007 4B       		.byte	0x4b
 3840 1008 83070000 		.4byte	0x783
 3841 100c 05       		.uleb128 0x5
 3842 100d 03       		.byte	0x3
 3843 100e 00000000 		.4byte	CapSense_noiseThreshold
 3844 1012 27       		.uleb128 0x27
 3845 1013 F1040000 		.4byte	.LASF137
 3846 1017 01       		.byte	0x1
 3847 1018 4D       		.byte	0x4d
 3848 1019 83070000 		.4byte	0x783
 3849 101d 05       		.uleb128 0x5
 3850 101e 03       		.byte	0x3
 3851 101f 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3852 1023 27       		.uleb128 0x27
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 120


 3853 1024 BC020000 		.4byte	.LASF138
 3854 1028 01       		.byte	0x1
 3855 1029 4F       		.byte	0x4f
 3856 102a 83070000 		.4byte	0x783
 3857 102e 05       		.uleb128 0x5
 3858 102f 03       		.byte	0x3
 3859 1030 00000000 		.4byte	CapSense_hysteresis
 3860 1034 27       		.uleb128 0x27
 3861 1035 A5010000 		.4byte	.LASF139
 3862 1039 01       		.byte	0x1
 3863 103a 51       		.byte	0x51
 3864 103b 83070000 		.4byte	0x783
 3865 103f 05       		.uleb128 0x5
 3866 1040 03       		.byte	0x3
 3867 1041 00000000 		.4byte	CapSense_debounce
 3868 1045 27       		.uleb128 0x27
 3869 1046 6D020000 		.4byte	.LASF140
 3870 104a 01       		.byte	0x1
 3871 104b 55       		.byte	0x55
 3872 104c 56100000 		.4byte	0x1056
 3873 1050 05       		.uleb128 0x5
 3874 1051 03       		.byte	0x3
 3875 1052 00000000 		.4byte	CapSense_rawDataIndex
 3876 1056 09       		.uleb128 0x9
 3877 1057 83070000 		.4byte	0x783
 3878 105b 27       		.uleb128 0x27
 3879 105c D8040000 		.4byte	.LASF141
 3880 1060 01       		.byte	0x1
 3881 1061 59       		.byte	0x59
 3882 1062 6C100000 		.4byte	0x106c
 3883 1066 05       		.uleb128 0x5
 3884 1067 03       		.byte	0x3
 3885 1068 00000000 		.4byte	CapSense_numberOfSensors
 3886 106c 09       		.uleb128 0x9
 3887 106d 83070000 		.4byte	0x783
 3888 1071 27       		.uleb128 0x27
 3889 1072 9D0B0000 		.4byte	.LASF142
 3890 1076 01       		.byte	0x1
 3891 1077 27       		.byte	0x27
 3892 1078 440F0000 		.4byte	0xf44
 3893 107c 05       		.uleb128 0x5
 3894 107d 03       		.byte	0x3
 3895 107e 00000000 		.4byte	CapSense_rawFilterData1
 3896 1082 26       		.uleb128 0x26
 3897 1083 F4000000 		.4byte	.LASF143
 3898 1087 01       		.byte	0x1
 3899 1088 41       		.byte	0x41
 3900 1089 C1020000 		.4byte	0x2c1
 3901 108d 27       		.uleb128 0x27
 3902 108e A90A0000 		.4byte	.LASF144
 3903 1092 01       		.byte	0x1
 3904 1093 45       		.byte	0x45
 3905 1094 6B000000 		.4byte	0x6b
 3906 1098 05       		.uleb128 0x5
 3907 1099 03       		.byte	0x3
 3908 109a 00000000 		.4byte	CapSense_enableRawFilters
 3909 109e 28       		.uleb128 0x28
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 121


 3910 109f 83040000 		.4byte	.LASF145
 3911 10a3 04       		.byte	0x4
 3912 10a4 A0       		.byte	0xa0
 3913 10a5 AF100000 		.4byte	0x10af
 3914 10a9 0B       		.uleb128 0xb
 3915 10aa 83000000 		.4byte	0x83
 3916 10ae 00       		.byte	0
 3917 10af 29       		.uleb128 0x29
 3918 10b0 F7010000 		.4byte	.LASF151
 3919 10b4 04       		.byte	0x4
 3920 10b5 9F       		.byte	0x9f
 3921 10b6 83000000 		.4byte	0x83
 3922 10ba 2A       		.uleb128 0x2a
 3923 10bb E2050000 		.4byte	.LASF152
 3924 10bf 04       		.byte	0x4
 3925 10c0 A2       		.byte	0xa2
 3926 10c1 2B       		.uleb128 0x2b
 3927 10c2 8E0A0000 		.4byte	.LASF153
 3928 10c6 03       		.byte	0x3
 3929 10c7 6A       		.byte	0x6a
 3930 10c8 83000000 		.4byte	0x83
 3931 10cc DB100000 		.4byte	0x10db
 3932 10d0 0B       		.uleb128 0xb
 3933 10d1 E8010000 		.4byte	0x1e8
 3934 10d5 0B       		.uleb128 0xb
 3935 10d6 83000000 		.4byte	0x83
 3936 10da 00       		.byte	0
 3937 10db 28       		.uleb128 0x28
 3938 10dc 630A0000 		.4byte	.LASF146
 3939 10e0 03       		.byte	0x3
 3940 10e1 6B       		.byte	0x6b
 3941 10e2 F6100000 		.4byte	0x10f6
 3942 10e6 0B       		.uleb128 0xb
 3943 10e7 E2010000 		.4byte	0x1e2
 3944 10eb 0B       		.uleb128 0xb
 3945 10ec 83000000 		.4byte	0x83
 3946 10f0 0B       		.uleb128 0xb
 3947 10f1 83000000 		.4byte	0x83
 3948 10f5 00       		.byte	0
 3949 10f6 28       		.uleb128 0x28
 3950 10f7 61030000 		.4byte	.LASF147
 3951 10fb 03       		.byte	0x3
 3952 10fc 81       		.byte	0x81
 3953 10fd 11110000 		.4byte	0x1111
 3954 1101 0B       		.uleb128 0xb
 3955 1102 C3000000 		.4byte	0xc3
 3956 1106 0B       		.uleb128 0xb
 3957 1107 EE010000 		.4byte	0x1ee
 3958 110b 0B       		.uleb128 0xb
 3959 110c 11110000 		.4byte	0x1111
 3960 1110 00       		.byte	0
 3961 1111 08       		.uleb128 0x8
 3962 1112 04       		.byte	0x4
 3963 1113 17110000 		.4byte	0x1117
 3964 1117 09       		.uleb128 0x9
 3965 1118 77000000 		.4byte	0x77
 3966 111c 2C       		.uleb128 0x2c
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 122


 3967 111d B6050000 		.4byte	.LASF154
 3968 1121 01       		.byte	0x1
 3969 1122 17       		.byte	0x17
 3970 1123 0B       		.uleb128 0xb
 3971 1124 83000000 		.4byte	0x83
 3972 1128 00       		.byte	0
 3973 1129 00       		.byte	0
 3974              		.section	.debug_abbrev,"",%progbits
 3975              	.Ldebug_abbrev0:
 3976 0000 01       		.uleb128 0x1
 3977 0001 11       		.uleb128 0x11
 3978 0002 01       		.byte	0x1
 3979 0003 25       		.uleb128 0x25
 3980 0004 0E       		.uleb128 0xe
 3981 0005 13       		.uleb128 0x13
 3982 0006 0B       		.uleb128 0xb
 3983 0007 03       		.uleb128 0x3
 3984 0008 0E       		.uleb128 0xe
 3985 0009 1B       		.uleb128 0x1b
 3986 000a 0E       		.uleb128 0xe
 3987 000b 55       		.uleb128 0x55
 3988 000c 17       		.uleb128 0x17
 3989 000d 11       		.uleb128 0x11
 3990 000e 01       		.uleb128 0x1
 3991 000f 10       		.uleb128 0x10
 3992 0010 17       		.uleb128 0x17
 3993 0011 00       		.byte	0
 3994 0012 00       		.byte	0
 3995 0013 02       		.uleb128 0x2
 3996 0014 24       		.uleb128 0x24
 3997 0015 00       		.byte	0
 3998 0016 0B       		.uleb128 0xb
 3999 0017 0B       		.uleb128 0xb
 4000 0018 3E       		.uleb128 0x3e
 4001 0019 0B       		.uleb128 0xb
 4002 001a 03       		.uleb128 0x3
 4003 001b 0E       		.uleb128 0xe
 4004 001c 00       		.byte	0
 4005 001d 00       		.byte	0
 4006 001e 03       		.uleb128 0x3
 4007 001f 24       		.uleb128 0x24
 4008 0020 00       		.byte	0
 4009 0021 0B       		.uleb128 0xb
 4010 0022 0B       		.uleb128 0xb
 4011 0023 3E       		.uleb128 0x3e
 4012 0024 0B       		.uleb128 0xb
 4013 0025 03       		.uleb128 0x3
 4014 0026 08       		.uleb128 0x8
 4015 0027 00       		.byte	0
 4016 0028 00       		.byte	0
 4017 0029 04       		.uleb128 0x4
 4018 002a 16       		.uleb128 0x16
 4019 002b 00       		.byte	0
 4020 002c 03       		.uleb128 0x3
 4021 002d 0E       		.uleb128 0xe
 4022 002e 3A       		.uleb128 0x3a
 4023 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 123


 4024 0030 3B       		.uleb128 0x3b
 4025 0031 05       		.uleb128 0x5
 4026 0032 49       		.uleb128 0x49
 4027 0033 13       		.uleb128 0x13
 4028 0034 00       		.byte	0
 4029 0035 00       		.byte	0
 4030 0036 05       		.uleb128 0x5
 4031 0037 0F       		.uleb128 0xf
 4032 0038 00       		.byte	0
 4033 0039 0B       		.uleb128 0xb
 4034 003a 0B       		.uleb128 0xb
 4035 003b 00       		.byte	0
 4036 003c 00       		.byte	0
 4037 003d 06       		.uleb128 0x6
 4038 003e 13       		.uleb128 0x13
 4039 003f 01       		.byte	0x1
 4040 0040 0B       		.uleb128 0xb
 4041 0041 0B       		.uleb128 0xb
 4042 0042 3A       		.uleb128 0x3a
 4043 0043 0B       		.uleb128 0xb
 4044 0044 3B       		.uleb128 0x3b
 4045 0045 0B       		.uleb128 0xb
 4046 0046 01       		.uleb128 0x1
 4047 0047 13       		.uleb128 0x13
 4048 0048 00       		.byte	0
 4049 0049 00       		.byte	0
 4050 004a 07       		.uleb128 0x7
 4051 004b 0D       		.uleb128 0xd
 4052 004c 00       		.byte	0
 4053 004d 03       		.uleb128 0x3
 4054 004e 0E       		.uleb128 0xe
 4055 004f 3A       		.uleb128 0x3a
 4056 0050 0B       		.uleb128 0xb
 4057 0051 3B       		.uleb128 0x3b
 4058 0052 0B       		.uleb128 0xb
 4059 0053 49       		.uleb128 0x49
 4060 0054 13       		.uleb128 0x13
 4061 0055 38       		.uleb128 0x38
 4062 0056 0B       		.uleb128 0xb
 4063 0057 00       		.byte	0
 4064 0058 00       		.byte	0
 4065 0059 08       		.uleb128 0x8
 4066 005a 0F       		.uleb128 0xf
 4067 005b 00       		.byte	0
 4068 005c 0B       		.uleb128 0xb
 4069 005d 0B       		.uleb128 0xb
 4070 005e 49       		.uleb128 0x49
 4071 005f 13       		.uleb128 0x13
 4072 0060 00       		.byte	0
 4073 0061 00       		.byte	0
 4074 0062 09       		.uleb128 0x9
 4075 0063 26       		.uleb128 0x26
 4076 0064 00       		.byte	0
 4077 0065 49       		.uleb128 0x49
 4078 0066 13       		.uleb128 0x13
 4079 0067 00       		.byte	0
 4080 0068 00       		.byte	0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 124


 4081 0069 0A       		.uleb128 0xa
 4082 006a 15       		.uleb128 0x15
 4083 006b 01       		.byte	0x1
 4084 006c 27       		.uleb128 0x27
 4085 006d 19       		.uleb128 0x19
 4086 006e 49       		.uleb128 0x49
 4087 006f 13       		.uleb128 0x13
 4088 0070 01       		.uleb128 0x1
 4089 0071 13       		.uleb128 0x13
 4090 0072 00       		.byte	0
 4091 0073 00       		.byte	0
 4092 0074 0B       		.uleb128 0xb
 4093 0075 05       		.uleb128 0x5
 4094 0076 00       		.byte	0
 4095 0077 49       		.uleb128 0x49
 4096 0078 13       		.uleb128 0x13
 4097 0079 00       		.byte	0
 4098 007a 00       		.byte	0
 4099 007b 0C       		.uleb128 0xc
 4100 007c 15       		.uleb128 0x15
 4101 007d 01       		.byte	0x1
 4102 007e 27       		.uleb128 0x27
 4103 007f 19       		.uleb128 0x19
 4104 0080 01       		.uleb128 0x1
 4105 0081 13       		.uleb128 0x13
 4106 0082 00       		.byte	0
 4107 0083 00       		.byte	0
 4108 0084 0D       		.uleb128 0xd
 4109 0085 16       		.uleb128 0x16
 4110 0086 00       		.byte	0
 4111 0087 03       		.uleb128 0x3
 4112 0088 0E       		.uleb128 0xe
 4113 0089 3A       		.uleb128 0x3a
 4114 008a 0B       		.uleb128 0xb
 4115 008b 3B       		.uleb128 0x3b
 4116 008c 0B       		.uleb128 0xb
 4117 008d 49       		.uleb128 0x49
 4118 008e 13       		.uleb128 0x13
 4119 008f 00       		.byte	0
 4120 0090 00       		.byte	0
 4121 0091 0E       		.uleb128 0xe
 4122 0092 2E       		.uleb128 0x2e
 4123 0093 01       		.byte	0x1
 4124 0094 3F       		.uleb128 0x3f
 4125 0095 19       		.uleb128 0x19
 4126 0096 03       		.uleb128 0x3
 4127 0097 0E       		.uleb128 0xe
 4128 0098 3A       		.uleb128 0x3a
 4129 0099 0B       		.uleb128 0xb
 4130 009a 3B       		.uleb128 0x3b
 4131 009b 0B       		.uleb128 0xb
 4132 009c 27       		.uleb128 0x27
 4133 009d 19       		.uleb128 0x19
 4134 009e 11       		.uleb128 0x11
 4135 009f 01       		.uleb128 0x1
 4136 00a0 12       		.uleb128 0x12
 4137 00a1 06       		.uleb128 0x6
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 125


 4138 00a2 40       		.uleb128 0x40
 4139 00a3 18       		.uleb128 0x18
 4140 00a4 9742     		.uleb128 0x2117
 4141 00a6 19       		.uleb128 0x19
 4142 00a7 01       		.uleb128 0x1
 4143 00a8 13       		.uleb128 0x13
 4144 00a9 00       		.byte	0
 4145 00aa 00       		.byte	0
 4146 00ab 0F       		.uleb128 0xf
 4147 00ac 05       		.uleb128 0x5
 4148 00ad 00       		.byte	0
 4149 00ae 03       		.uleb128 0x3
 4150 00af 0E       		.uleb128 0xe
 4151 00b0 3A       		.uleb128 0x3a
 4152 00b1 0B       		.uleb128 0xb
 4153 00b2 3B       		.uleb128 0x3b
 4154 00b3 0B       		.uleb128 0xb
 4155 00b4 49       		.uleb128 0x49
 4156 00b5 13       		.uleb128 0x13
 4157 00b6 02       		.uleb128 0x2
 4158 00b7 17       		.uleb128 0x17
 4159 00b8 00       		.byte	0
 4160 00b9 00       		.byte	0
 4161 00ba 10       		.uleb128 0x10
 4162 00bb 898201   		.uleb128 0x4109
 4163 00be 01       		.byte	0x1
 4164 00bf 11       		.uleb128 0x11
 4165 00c0 01       		.uleb128 0x1
 4166 00c1 31       		.uleb128 0x31
 4167 00c2 13       		.uleb128 0x13
 4168 00c3 01       		.uleb128 0x1
 4169 00c4 13       		.uleb128 0x13
 4170 00c5 00       		.byte	0
 4171 00c6 00       		.byte	0
 4172 00c7 11       		.uleb128 0x11
 4173 00c8 8A8201   		.uleb128 0x410a
 4174 00cb 00       		.byte	0
 4175 00cc 02       		.uleb128 0x2
 4176 00cd 18       		.uleb128 0x18
 4177 00ce 9142     		.uleb128 0x2111
 4178 00d0 18       		.uleb128 0x18
 4179 00d1 00       		.byte	0
 4180 00d2 00       		.byte	0
 4181 00d3 12       		.uleb128 0x12
 4182 00d4 898201   		.uleb128 0x4109
 4183 00d7 00       		.byte	0
 4184 00d8 11       		.uleb128 0x11
 4185 00d9 01       		.uleb128 0x1
 4186 00da 31       		.uleb128 0x31
 4187 00db 13       		.uleb128 0x13
 4188 00dc 00       		.byte	0
 4189 00dd 00       		.byte	0
 4190 00de 13       		.uleb128 0x13
 4191 00df 898201   		.uleb128 0x4109
 4192 00e2 01       		.byte	0x1
 4193 00e3 11       		.uleb128 0x11
 4194 00e4 01       		.uleb128 0x1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 126


 4195 00e5 31       		.uleb128 0x31
 4196 00e6 13       		.uleb128 0x13
 4197 00e7 00       		.byte	0
 4198 00e8 00       		.byte	0
 4199 00e9 14       		.uleb128 0x14
 4200 00ea 34       		.uleb128 0x34
 4201 00eb 00       		.byte	0
 4202 00ec 03       		.uleb128 0x3
 4203 00ed 08       		.uleb128 0x8
 4204 00ee 3A       		.uleb128 0x3a
 4205 00ef 0B       		.uleb128 0xb
 4206 00f0 3B       		.uleb128 0x3b
 4207 00f1 05       		.uleb128 0x5
 4208 00f2 49       		.uleb128 0x49
 4209 00f3 13       		.uleb128 0x13
 4210 00f4 02       		.uleb128 0x2
 4211 00f5 17       		.uleb128 0x17
 4212 00f6 00       		.byte	0
 4213 00f7 00       		.byte	0
 4214 00f8 15       		.uleb128 0x15
 4215 00f9 2E       		.uleb128 0x2e
 4216 00fa 01       		.byte	0x1
 4217 00fb 3F       		.uleb128 0x3f
 4218 00fc 19       		.uleb128 0x19
 4219 00fd 03       		.uleb128 0x3
 4220 00fe 0E       		.uleb128 0xe
 4221 00ff 3A       		.uleb128 0x3a
 4222 0100 0B       		.uleb128 0xb
 4223 0101 3B       		.uleb128 0x3b
 4224 0102 05       		.uleb128 0x5
 4225 0103 27       		.uleb128 0x27
 4226 0104 19       		.uleb128 0x19
 4227 0105 11       		.uleb128 0x11
 4228 0106 01       		.uleb128 0x1
 4229 0107 12       		.uleb128 0x12
 4230 0108 06       		.uleb128 0x6
 4231 0109 40       		.uleb128 0x40
 4232 010a 18       		.uleb128 0x18
 4233 010b 9742     		.uleb128 0x2117
 4234 010d 19       		.uleb128 0x19
 4235 010e 01       		.uleb128 0x1
 4236 010f 13       		.uleb128 0x13
 4237 0110 00       		.byte	0
 4238 0111 00       		.byte	0
 4239 0112 16       		.uleb128 0x16
 4240 0113 34       		.uleb128 0x34
 4241 0114 00       		.byte	0
 4242 0115 03       		.uleb128 0x3
 4243 0116 0E       		.uleb128 0xe
 4244 0117 3A       		.uleb128 0x3a
 4245 0118 0B       		.uleb128 0xb
 4246 0119 3B       		.uleb128 0x3b
 4247 011a 05       		.uleb128 0x5
 4248 011b 49       		.uleb128 0x49
 4249 011c 13       		.uleb128 0x13
 4250 011d 02       		.uleb128 0x2
 4251 011e 17       		.uleb128 0x17
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 127


 4252 011f 00       		.byte	0
 4253 0120 00       		.byte	0
 4254 0121 17       		.uleb128 0x17
 4255 0122 2E       		.uleb128 0x2e
 4256 0123 01       		.byte	0x1
 4257 0124 3F       		.uleb128 0x3f
 4258 0125 19       		.uleb128 0x19
 4259 0126 03       		.uleb128 0x3
 4260 0127 0E       		.uleb128 0xe
 4261 0128 3A       		.uleb128 0x3a
 4262 0129 0B       		.uleb128 0xb
 4263 012a 3B       		.uleb128 0x3b
 4264 012b 05       		.uleb128 0x5
 4265 012c 27       		.uleb128 0x27
 4266 012d 19       		.uleb128 0x19
 4267 012e 49       		.uleb128 0x49
 4268 012f 13       		.uleb128 0x13
 4269 0130 11       		.uleb128 0x11
 4270 0131 01       		.uleb128 0x1
 4271 0132 12       		.uleb128 0x12
 4272 0133 06       		.uleb128 0x6
 4273 0134 40       		.uleb128 0x40
 4274 0135 18       		.uleb128 0x18
 4275 0136 9742     		.uleb128 0x2117
 4276 0138 19       		.uleb128 0x19
 4277 0139 01       		.uleb128 0x1
 4278 013a 13       		.uleb128 0x13
 4279 013b 00       		.byte	0
 4280 013c 00       		.byte	0
 4281 013d 18       		.uleb128 0x18
 4282 013e 05       		.uleb128 0x5
 4283 013f 00       		.byte	0
 4284 0140 03       		.uleb128 0x3
 4285 0141 0E       		.uleb128 0xe
 4286 0142 3A       		.uleb128 0x3a
 4287 0143 0B       		.uleb128 0xb
 4288 0144 3B       		.uleb128 0x3b
 4289 0145 05       		.uleb128 0x5
 4290 0146 49       		.uleb128 0x49
 4291 0147 13       		.uleb128 0x13
 4292 0148 02       		.uleb128 0x2
 4293 0149 17       		.uleb128 0x17
 4294 014a 00       		.byte	0
 4295 014b 00       		.byte	0
 4296 014c 19       		.uleb128 0x19
 4297 014d 05       		.uleb128 0x5
 4298 014e 00       		.byte	0
 4299 014f 03       		.uleb128 0x3
 4300 0150 0E       		.uleb128 0xe
 4301 0151 3A       		.uleb128 0x3a
 4302 0152 0B       		.uleb128 0xb
 4303 0153 3B       		.uleb128 0x3b
 4304 0154 05       		.uleb128 0x5
 4305 0155 49       		.uleb128 0x49
 4306 0156 13       		.uleb128 0x13
 4307 0157 02       		.uleb128 0x2
 4308 0158 18       		.uleb128 0x18
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 128


 4309 0159 00       		.byte	0
 4310 015a 00       		.byte	0
 4311 015b 1A       		.uleb128 0x1a
 4312 015c 34       		.uleb128 0x34
 4313 015d 00       		.byte	0
 4314 015e 03       		.uleb128 0x3
 4315 015f 0E       		.uleb128 0xe
 4316 0160 3A       		.uleb128 0x3a
 4317 0161 0B       		.uleb128 0xb
 4318 0162 3B       		.uleb128 0x3b
 4319 0163 05       		.uleb128 0x5
 4320 0164 49       		.uleb128 0x49
 4321 0165 13       		.uleb128 0x13
 4322 0166 1C       		.uleb128 0x1c
 4323 0167 0B       		.uleb128 0xb
 4324 0168 00       		.byte	0
 4325 0169 00       		.byte	0
 4326 016a 1B       		.uleb128 0x1b
 4327 016b 34       		.uleb128 0x34
 4328 016c 00       		.byte	0
 4329 016d 03       		.uleb128 0x3
 4330 016e 0E       		.uleb128 0xe
 4331 016f 3A       		.uleb128 0x3a
 4332 0170 0B       		.uleb128 0xb
 4333 0171 3B       		.uleb128 0x3b
 4334 0172 05       		.uleb128 0x5
 4335 0173 49       		.uleb128 0x49
 4336 0174 13       		.uleb128 0x13
 4337 0175 02       		.uleb128 0x2
 4338 0176 18       		.uleb128 0x18
 4339 0177 00       		.byte	0
 4340 0178 00       		.byte	0
 4341 0179 1C       		.uleb128 0x1c
 4342 017a 01       		.uleb128 0x1
 4343 017b 01       		.byte	0x1
 4344 017c 49       		.uleb128 0x49
 4345 017d 13       		.uleb128 0x13
 4346 017e 01       		.uleb128 0x1
 4347 017f 13       		.uleb128 0x13
 4348 0180 00       		.byte	0
 4349 0181 00       		.byte	0
 4350 0182 1D       		.uleb128 0x1d
 4351 0183 21       		.uleb128 0x21
 4352 0184 00       		.byte	0
 4353 0185 49       		.uleb128 0x49
 4354 0186 13       		.uleb128 0x13
 4355 0187 2F       		.uleb128 0x2f
 4356 0188 0B       		.uleb128 0xb
 4357 0189 00       		.byte	0
 4358 018a 00       		.byte	0
 4359 018b 1E       		.uleb128 0x1e
 4360 018c 2E       		.uleb128 0x2e
 4361 018d 01       		.byte	0x1
 4362 018e 3F       		.uleb128 0x3f
 4363 018f 19       		.uleb128 0x19
 4364 0190 03       		.uleb128 0x3
 4365 0191 0E       		.uleb128 0xe
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 129


 4366 0192 3A       		.uleb128 0x3a
 4367 0193 0B       		.uleb128 0xb
 4368 0194 3B       		.uleb128 0x3b
 4369 0195 05       		.uleb128 0x5
 4370 0196 27       		.uleb128 0x27
 4371 0197 19       		.uleb128 0x19
 4372 0198 49       		.uleb128 0x49
 4373 0199 13       		.uleb128 0x13
 4374 019a 11       		.uleb128 0x11
 4375 019b 01       		.uleb128 0x1
 4376 019c 12       		.uleb128 0x12
 4377 019d 06       		.uleb128 0x6
 4378 019e 40       		.uleb128 0x40
 4379 019f 18       		.uleb128 0x18
 4380 01a0 9642     		.uleb128 0x2116
 4381 01a2 19       		.uleb128 0x19
 4382 01a3 01       		.uleb128 0x1
 4383 01a4 13       		.uleb128 0x13
 4384 01a5 00       		.byte	0
 4385 01a6 00       		.byte	0
 4386 01a7 1F       		.uleb128 0x1f
 4387 01a8 05       		.uleb128 0x5
 4388 01a9 00       		.byte	0
 4389 01aa 03       		.uleb128 0x3
 4390 01ab 08       		.uleb128 0x8
 4391 01ac 3A       		.uleb128 0x3a
 4392 01ad 0B       		.uleb128 0xb
 4393 01ae 3B       		.uleb128 0x3b
 4394 01af 05       		.uleb128 0x5
 4395 01b0 49       		.uleb128 0x49
 4396 01b1 13       		.uleb128 0x13
 4397 01b2 02       		.uleb128 0x2
 4398 01b3 17       		.uleb128 0x17
 4399 01b4 00       		.byte	0
 4400 01b5 00       		.byte	0
 4401 01b6 20       		.uleb128 0x20
 4402 01b7 05       		.uleb128 0x5
 4403 01b8 00       		.byte	0
 4404 01b9 03       		.uleb128 0x3
 4405 01ba 08       		.uleb128 0x8
 4406 01bb 3A       		.uleb128 0x3a
 4407 01bc 0B       		.uleb128 0xb
 4408 01bd 3B       		.uleb128 0x3b
 4409 01be 05       		.uleb128 0x5
 4410 01bf 49       		.uleb128 0x49
 4411 01c0 13       		.uleb128 0x13
 4412 01c1 02       		.uleb128 0x2
 4413 01c2 18       		.uleb128 0x18
 4414 01c3 00       		.byte	0
 4415 01c4 00       		.byte	0
 4416 01c5 21       		.uleb128 0x21
 4417 01c6 34       		.uleb128 0x34
 4418 01c7 00       		.byte	0
 4419 01c8 03       		.uleb128 0x3
 4420 01c9 08       		.uleb128 0x8
 4421 01ca 3A       		.uleb128 0x3a
 4422 01cb 0B       		.uleb128 0xb
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 130


 4423 01cc 3B       		.uleb128 0x3b
 4424 01cd 05       		.uleb128 0x5
 4425 01ce 49       		.uleb128 0x49
 4426 01cf 13       		.uleb128 0x13
 4427 01d0 00       		.byte	0
 4428 01d1 00       		.byte	0
 4429 01d2 22       		.uleb128 0x22
 4430 01d3 34       		.uleb128 0x34
 4431 01d4 00       		.byte	0
 4432 01d5 03       		.uleb128 0x3
 4433 01d6 0E       		.uleb128 0xe
 4434 01d7 3A       		.uleb128 0x3a
 4435 01d8 0B       		.uleb128 0xb
 4436 01d9 3B       		.uleb128 0x3b
 4437 01da 05       		.uleb128 0x5
 4438 01db 49       		.uleb128 0x49
 4439 01dc 13       		.uleb128 0x13
 4440 01dd 00       		.byte	0
 4441 01de 00       		.byte	0
 4442 01df 23       		.uleb128 0x23
 4443 01e0 2E       		.uleb128 0x2e
 4444 01e1 00       		.byte	0
 4445 01e2 3F       		.uleb128 0x3f
 4446 01e3 19       		.uleb128 0x19
 4447 01e4 03       		.uleb128 0x3
 4448 01e5 0E       		.uleb128 0xe
 4449 01e6 3A       		.uleb128 0x3a
 4450 01e7 0B       		.uleb128 0xb
 4451 01e8 3B       		.uleb128 0x3b
 4452 01e9 05       		.uleb128 0x5
 4453 01ea 27       		.uleb128 0x27
 4454 01eb 19       		.uleb128 0x19
 4455 01ec 11       		.uleb128 0x11
 4456 01ed 01       		.uleb128 0x1
 4457 01ee 12       		.uleb128 0x12
 4458 01ef 06       		.uleb128 0x6
 4459 01f0 40       		.uleb128 0x40
 4460 01f1 18       		.uleb128 0x18
 4461 01f2 9742     		.uleb128 0x2117
 4462 01f4 19       		.uleb128 0x19
 4463 01f5 00       		.byte	0
 4464 01f6 00       		.byte	0
 4465 01f7 24       		.uleb128 0x24
 4466 01f8 34       		.uleb128 0x34
 4467 01f9 00       		.byte	0
 4468 01fa 03       		.uleb128 0x3
 4469 01fb 0E       		.uleb128 0xe
 4470 01fc 3A       		.uleb128 0x3a
 4471 01fd 0B       		.uleb128 0xb
 4472 01fe 3B       		.uleb128 0x3b
 4473 01ff 0B       		.uleb128 0xb
 4474 0200 49       		.uleb128 0x49
 4475 0201 13       		.uleb128 0x13
 4476 0202 1C       		.uleb128 0x1c
 4477 0203 0A       		.uleb128 0xa
 4478 0204 00       		.byte	0
 4479 0205 00       		.byte	0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 131


 4480 0206 25       		.uleb128 0x25
 4481 0207 34       		.uleb128 0x34
 4482 0208 00       		.byte	0
 4483 0209 03       		.uleb128 0x3
 4484 020a 0E       		.uleb128 0xe
 4485 020b 3A       		.uleb128 0x3a
 4486 020c 0B       		.uleb128 0xb
 4487 020d 3B       		.uleb128 0x3b
 4488 020e 0B       		.uleb128 0xb
 4489 020f 49       		.uleb128 0x49
 4490 0210 13       		.uleb128 0x13
 4491 0211 02       		.uleb128 0x2
 4492 0212 18       		.uleb128 0x18
 4493 0213 00       		.byte	0
 4494 0214 00       		.byte	0
 4495 0215 26       		.uleb128 0x26
 4496 0216 34       		.uleb128 0x34
 4497 0217 00       		.byte	0
 4498 0218 03       		.uleb128 0x3
 4499 0219 0E       		.uleb128 0xe
 4500 021a 3A       		.uleb128 0x3a
 4501 021b 0B       		.uleb128 0xb
 4502 021c 3B       		.uleb128 0x3b
 4503 021d 0B       		.uleb128 0xb
 4504 021e 49       		.uleb128 0x49
 4505 021f 13       		.uleb128 0x13
 4506 0220 3F       		.uleb128 0x3f
 4507 0221 19       		.uleb128 0x19
 4508 0222 3C       		.uleb128 0x3c
 4509 0223 19       		.uleb128 0x19
 4510 0224 00       		.byte	0
 4511 0225 00       		.byte	0
 4512 0226 27       		.uleb128 0x27
 4513 0227 34       		.uleb128 0x34
 4514 0228 00       		.byte	0
 4515 0229 03       		.uleb128 0x3
 4516 022a 0E       		.uleb128 0xe
 4517 022b 3A       		.uleb128 0x3a
 4518 022c 0B       		.uleb128 0xb
 4519 022d 3B       		.uleb128 0x3b
 4520 022e 0B       		.uleb128 0xb
 4521 022f 49       		.uleb128 0x49
 4522 0230 13       		.uleb128 0x13
 4523 0231 3F       		.uleb128 0x3f
 4524 0232 19       		.uleb128 0x19
 4525 0233 02       		.uleb128 0x2
 4526 0234 18       		.uleb128 0x18
 4527 0235 00       		.byte	0
 4528 0236 00       		.byte	0
 4529 0237 28       		.uleb128 0x28
 4530 0238 2E       		.uleb128 0x2e
 4531 0239 01       		.byte	0x1
 4532 023a 3F       		.uleb128 0x3f
 4533 023b 19       		.uleb128 0x19
 4534 023c 03       		.uleb128 0x3
 4535 023d 0E       		.uleb128 0xe
 4536 023e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 132


 4537 023f 0B       		.uleb128 0xb
 4538 0240 3B       		.uleb128 0x3b
 4539 0241 0B       		.uleb128 0xb
 4540 0242 27       		.uleb128 0x27
 4541 0243 19       		.uleb128 0x19
 4542 0244 3C       		.uleb128 0x3c
 4543 0245 19       		.uleb128 0x19
 4544 0246 01       		.uleb128 0x1
 4545 0247 13       		.uleb128 0x13
 4546 0248 00       		.byte	0
 4547 0249 00       		.byte	0
 4548 024a 29       		.uleb128 0x29
 4549 024b 2E       		.uleb128 0x2e
 4550 024c 00       		.byte	0
 4551 024d 3F       		.uleb128 0x3f
 4552 024e 19       		.uleb128 0x19
 4553 024f 03       		.uleb128 0x3
 4554 0250 0E       		.uleb128 0xe
 4555 0251 3A       		.uleb128 0x3a
 4556 0252 0B       		.uleb128 0xb
 4557 0253 3B       		.uleb128 0x3b
 4558 0254 0B       		.uleb128 0xb
 4559 0255 27       		.uleb128 0x27
 4560 0256 19       		.uleb128 0x19
 4561 0257 49       		.uleb128 0x49
 4562 0258 13       		.uleb128 0x13
 4563 0259 3C       		.uleb128 0x3c
 4564 025a 19       		.uleb128 0x19
 4565 025b 00       		.byte	0
 4566 025c 00       		.byte	0
 4567 025d 2A       		.uleb128 0x2a
 4568 025e 2E       		.uleb128 0x2e
 4569 025f 00       		.byte	0
 4570 0260 3F       		.uleb128 0x3f
 4571 0261 19       		.uleb128 0x19
 4572 0262 03       		.uleb128 0x3
 4573 0263 0E       		.uleb128 0xe
 4574 0264 3A       		.uleb128 0x3a
 4575 0265 0B       		.uleb128 0xb
 4576 0266 3B       		.uleb128 0x3b
 4577 0267 0B       		.uleb128 0xb
 4578 0268 27       		.uleb128 0x27
 4579 0269 19       		.uleb128 0x19
 4580 026a 3C       		.uleb128 0x3c
 4581 026b 19       		.uleb128 0x19
 4582 026c 00       		.byte	0
 4583 026d 00       		.byte	0
 4584 026e 2B       		.uleb128 0x2b
 4585 026f 2E       		.uleb128 0x2e
 4586 0270 01       		.byte	0x1
 4587 0271 3F       		.uleb128 0x3f
 4588 0272 19       		.uleb128 0x19
 4589 0273 03       		.uleb128 0x3
 4590 0274 0E       		.uleb128 0xe
 4591 0275 3A       		.uleb128 0x3a
 4592 0276 0B       		.uleb128 0xb
 4593 0277 3B       		.uleb128 0x3b
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 133


 4594 0278 0B       		.uleb128 0xb
 4595 0279 27       		.uleb128 0x27
 4596 027a 19       		.uleb128 0x19
 4597 027b 49       		.uleb128 0x49
 4598 027c 13       		.uleb128 0x13
 4599 027d 3C       		.uleb128 0x3c
 4600 027e 19       		.uleb128 0x19
 4601 027f 01       		.uleb128 0x1
 4602 0280 13       		.uleb128 0x13
 4603 0281 00       		.byte	0
 4604 0282 00       		.byte	0
 4605 0283 2C       		.uleb128 0x2c
 4606 0284 2E       		.uleb128 0x2e
 4607 0285 01       		.byte	0x1
 4608 0286 3F       		.uleb128 0x3f
 4609 0287 19       		.uleb128 0x19
 4610 0288 03       		.uleb128 0x3
 4611 0289 0E       		.uleb128 0xe
 4612 028a 3A       		.uleb128 0x3a
 4613 028b 0B       		.uleb128 0xb
 4614 028c 3B       		.uleb128 0x3b
 4615 028d 0B       		.uleb128 0xb
 4616 028e 27       		.uleb128 0x27
 4617 028f 19       		.uleb128 0x19
 4618 0290 3C       		.uleb128 0x3c
 4619 0291 19       		.uleb128 0x19
 4620 0292 00       		.byte	0
 4621 0293 00       		.byte	0
 4622 0294 00       		.byte	0
 4623              		.section	.debug_loc,"",%progbits
 4624              	.Ldebug_loc0:
 4625              	.LLST0:
 4626 0000 00000000 		.4byte	.LVL0
 4627 0004 0C000000 		.4byte	.LVL1
 4628 0008 0100     		.2byte	0x1
 4629 000a 50       		.byte	0x50
 4630 000b 0C000000 		.4byte	.LVL1
 4631 000f 24000000 		.4byte	.LFE34
 4632 0013 0400     		.2byte	0x4
 4633 0015 F3       		.byte	0xf3
 4634 0016 01       		.uleb128 0x1
 4635 0017 50       		.byte	0x50
 4636 0018 9F       		.byte	0x9f
 4637 0019 00000000 		.4byte	0
 4638 001d 00000000 		.4byte	0
 4639              	.LLST1:
 4640 0021 00000000 		.4byte	.LVL2
 4641 0025 07000000 		.4byte	.LVL3-1
 4642 0029 0100     		.2byte	0x1
 4643 002b 50       		.byte	0x50
 4644 002c 07000000 		.4byte	.LVL3-1
 4645 0030 16000000 		.4byte	.LVL6
 4646 0034 0100     		.2byte	0x1
 4647 0036 54       		.byte	0x54
 4648 0037 16000000 		.4byte	.LVL6
 4649 003b 18000000 		.4byte	.LFE35
 4650 003f 0400     		.2byte	0x4
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 134


 4651 0041 F3       		.byte	0xf3
 4652 0042 01       		.uleb128 0x1
 4653 0043 50       		.byte	0x50
 4654 0044 9F       		.byte	0x9f
 4655 0045 00000000 		.4byte	0
 4656 0049 00000000 		.4byte	0
 4657              	.LLST2:
 4658 004d 02000000 		.4byte	.LVL7
 4659 0051 06000000 		.4byte	.LVL8
 4660 0055 0200     		.2byte	0x2
 4661 0057 30       		.byte	0x30
 4662 0058 9F       		.byte	0x9f
 4663 0059 06000000 		.4byte	.LVL8
 4664 005d 12000000 		.4byte	.LVL11
 4665 0061 0100     		.2byte	0x1
 4666 0063 54       		.byte	0x54
 4667 0064 00000000 		.4byte	0
 4668 0068 00000000 		.4byte	0
 4669              	.LLST3:
 4670 006c 12000000 		.4byte	.LVL14
 4671 0070 2A000000 		.4byte	.LVL19
 4672 0074 0100     		.2byte	0x1
 4673 0076 54       		.byte	0x54
 4674 0077 00000000 		.4byte	0
 4675 007b 00000000 		.4byte	0
 4676              	.LLST4:
 4677 007f 1A000000 		.4byte	.LVL15
 4678 0083 20000000 		.4byte	.LVL16
 4679 0087 0100     		.2byte	0x1
 4680 0089 50       		.byte	0x50
 4681 008a 00000000 		.4byte	0
 4682 008e 00000000 		.4byte	0
 4683              	.LLST5:
 4684 0092 00000000 		.4byte	.LVL20
 4685 0096 02000000 		.4byte	.LVL21
 4686 009a 0100     		.2byte	0x1
 4687 009c 50       		.byte	0x50
 4688 009d 02000000 		.4byte	.LVL21
 4689 00a1 0C000000 		.4byte	.LFE42
 4690 00a5 0400     		.2byte	0x4
 4691 00a7 F3       		.byte	0xf3
 4692 00a8 01       		.uleb128 0x1
 4693 00a9 50       		.byte	0x50
 4694 00aa 9F       		.byte	0x9f
 4695 00ab 00000000 		.4byte	0
 4696 00af 00000000 		.4byte	0
 4697              	.LLST6:
 4698 00b3 00000000 		.4byte	.LVL22
 4699 00b7 02000000 		.4byte	.LVL23
 4700 00bb 0100     		.2byte	0x1
 4701 00bd 50       		.byte	0x50
 4702 00be 02000000 		.4byte	.LVL23
 4703 00c2 0C000000 		.4byte	.LFE43
 4704 00c6 0400     		.2byte	0x4
 4705 00c8 F3       		.byte	0xf3
 4706 00c9 01       		.uleb128 0x1
 4707 00ca 50       		.byte	0x50
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 135


 4708 00cb 9F       		.byte	0x9f
 4709 00cc 00000000 		.4byte	0
 4710 00d0 00000000 		.4byte	0
 4711              	.LLST7:
 4712 00d4 00000000 		.4byte	.LVL24
 4713 00d8 04000000 		.4byte	.LVL25
 4714 00dc 0100     		.2byte	0x1
 4715 00de 50       		.byte	0x50
 4716 00df 04000000 		.4byte	.LVL25
 4717 00e3 0C000000 		.4byte	.LFE44
 4718 00e7 0400     		.2byte	0x4
 4719 00e9 F3       		.byte	0xf3
 4720 00ea 01       		.uleb128 0x1
 4721 00eb 50       		.byte	0x50
 4722 00ec 9F       		.byte	0x9f
 4723 00ed 00000000 		.4byte	0
 4724 00f1 00000000 		.4byte	0
 4725              	.LLST8:
 4726 00f5 00000000 		.4byte	.LVL26
 4727 00f9 04000000 		.4byte	.LVL27
 4728 00fd 0100     		.2byte	0x1
 4729 00ff 50       		.byte	0x50
 4730 0100 04000000 		.4byte	.LVL27
 4731 0104 0C000000 		.4byte	.LFE45
 4732 0108 0400     		.2byte	0x4
 4733 010a F3       		.byte	0xf3
 4734 010b 01       		.uleb128 0x1
 4735 010c 50       		.byte	0x50
 4736 010d 9F       		.byte	0x9f
 4737 010e 00000000 		.4byte	0
 4738 0112 00000000 		.4byte	0
 4739              	.LLST9:
 4740 0116 00000000 		.4byte	.LVL28
 4741 011a 04000000 		.4byte	.LVL29
 4742 011e 0100     		.2byte	0x1
 4743 0120 50       		.byte	0x50
 4744 0121 04000000 		.4byte	.LVL29
 4745 0125 0C000000 		.4byte	.LFE46
 4746 0129 0400     		.2byte	0x4
 4747 012b F3       		.byte	0xf3
 4748 012c 01       		.uleb128 0x1
 4749 012d 50       		.byte	0x50
 4750 012e 9F       		.byte	0x9f
 4751 012f 00000000 		.4byte	0
 4752 0133 00000000 		.4byte	0
 4753              	.LLST10:
 4754 0137 00000000 		.4byte	.LVL30
 4755 013b 04000000 		.4byte	.LVL31
 4756 013f 0100     		.2byte	0x1
 4757 0141 50       		.byte	0x50
 4758 0142 04000000 		.4byte	.LVL31
 4759 0146 0C000000 		.4byte	.LFE47
 4760 014a 0400     		.2byte	0x4
 4761 014c F3       		.byte	0xf3
 4762 014d 01       		.uleb128 0x1
 4763 014e 50       		.byte	0x50
 4764 014f 9F       		.byte	0x9f
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 136


 4765 0150 00000000 		.4byte	0
 4766 0154 00000000 		.4byte	0
 4767              	.LLST11:
 4768 0158 00000000 		.4byte	.LVL32
 4769 015c 04000000 		.4byte	.LVL33
 4770 0160 0100     		.2byte	0x1
 4771 0162 50       		.byte	0x50
 4772 0163 04000000 		.4byte	.LVL33
 4773 0167 0C000000 		.4byte	.LFE48
 4774 016b 0400     		.2byte	0x4
 4775 016d F3       		.byte	0xf3
 4776 016e 01       		.uleb128 0x1
 4777 016f 50       		.byte	0x50
 4778 0170 9F       		.byte	0x9f
 4779 0171 00000000 		.4byte	0
 4780 0175 00000000 		.4byte	0
 4781              	.LLST12:
 4782 0179 00000000 		.4byte	.LVL34
 4783 017d 04000000 		.4byte	.LVL35
 4784 0181 0100     		.2byte	0x1
 4785 0183 50       		.byte	0x50
 4786 0184 04000000 		.4byte	.LVL35
 4787 0188 0C000000 		.4byte	.LFE49
 4788 018c 0400     		.2byte	0x4
 4789 018e F3       		.byte	0xf3
 4790 018f 01       		.uleb128 0x1
 4791 0190 50       		.byte	0x50
 4792 0191 9F       		.byte	0x9f
 4793 0192 00000000 		.4byte	0
 4794 0196 00000000 		.4byte	0
 4795              	.LLST13:
 4796 019a 00000000 		.4byte	.LVL41
 4797 019e 04000000 		.4byte	.LVL42
 4798 01a2 0100     		.2byte	0x1
 4799 01a4 50       		.byte	0x50
 4800 01a5 04000000 		.4byte	.LVL42
 4801 01a9 0C000000 		.4byte	.LFE55
 4802 01ad 0400     		.2byte	0x4
 4803 01af F3       		.byte	0xf3
 4804 01b0 01       		.uleb128 0x1
 4805 01b1 50       		.byte	0x50
 4806 01b2 9F       		.byte	0x9f
 4807 01b3 00000000 		.4byte	0
 4808 01b7 00000000 		.4byte	0
 4809              	.LLST14:
 4810 01bb 00000000 		.4byte	.LVL43
 4811 01bf 16000000 		.4byte	.LVL48
 4812 01c3 0100     		.2byte	0x1
 4813 01c5 50       		.byte	0x50
 4814 01c6 16000000 		.4byte	.LVL48
 4815 01ca 80000000 		.4byte	.LVL57
 4816 01ce 0100     		.2byte	0x1
 4817 01d0 54       		.byte	0x54
 4818 01d1 80000000 		.4byte	.LVL57
 4819 01d5 98000000 		.4byte	.LFE56
 4820 01d9 0400     		.2byte	0x4
 4821 01db F3       		.byte	0xf3
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 137


 4822 01dc 01       		.uleb128 0x1
 4823 01dd 50       		.byte	0x50
 4824 01de 9F       		.byte	0x9f
 4825 01df 00000000 		.4byte	0
 4826 01e3 00000000 		.4byte	0
 4827              	.LLST15:
 4828 01e7 08000000 		.4byte	.LVL44
 4829 01eb 18000000 		.4byte	.LVL49
 4830 01ef 0100     		.2byte	0x1
 4831 01f1 53       		.byte	0x53
 4832 01f2 00000000 		.4byte	0
 4833 01f6 00000000 		.4byte	0
 4834              	.LLST16:
 4835 01fa 14000000 		.4byte	.LVL47
 4836 01fe 80000000 		.4byte	.LVL59
 4837 0202 0100     		.2byte	0x1
 4838 0204 57       		.byte	0x57
 4839 0205 00000000 		.4byte	0
 4840 0209 00000000 		.4byte	0
 4841              	.LLST17:
 4842 020d 0C000000 		.4byte	.LVL45
 4843 0211 80000000 		.4byte	.LVL58
 4844 0215 0100     		.2byte	0x1
 4845 0217 56       		.byte	0x56
 4846 0218 00000000 		.4byte	0
 4847 021c 00000000 		.4byte	0
 4848              	.LLST18:
 4849 0220 10000000 		.4byte	.LVL46
 4850 0224 2E000000 		.4byte	.LVL51
 4851 0228 0100     		.2byte	0x1
 4852 022a 55       		.byte	0x55
 4853 022b 44000000 		.4byte	.LVL53
 4854 022f 4C000000 		.4byte	.LVL54
 4855 0233 0100     		.2byte	0x1
 4856 0235 55       		.byte	0x55
 4857 0236 00000000 		.4byte	0
 4858 023a 00000000 		.4byte	0
 4859              	.LLST19:
 4860 023e 00000000 		.4byte	.LVL60
 4861 0242 06000000 		.4byte	.LVL62
 4862 0246 0100     		.2byte	0x1
 4863 0248 50       		.byte	0x50
 4864 0249 06000000 		.4byte	.LVL62
 4865 024d 1C000000 		.4byte	.LFE57
 4866 0251 0400     		.2byte	0x4
 4867 0253 F3       		.byte	0xf3
 4868 0254 01       		.uleb128 0x1
 4869 0255 50       		.byte	0x50
 4870 0256 9F       		.byte	0x9f
 4871 0257 00000000 		.4byte	0
 4872 025b 00000000 		.4byte	0
 4873              	.LLST20:
 4874 025f 02000000 		.4byte	.LVL61
 4875 0263 06000000 		.4byte	.LVL62
 4876 0267 0200     		.2byte	0x2
 4877 0269 30       		.byte	0x30
 4878 026a 9F       		.byte	0x9f
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 138


 4879 026b 06000000 		.4byte	.LVL62
 4880 026f 1A000000 		.4byte	.LVL66
 4881 0273 0100     		.2byte	0x1
 4882 0275 54       		.byte	0x54
 4883 0276 00000000 		.4byte	0
 4884 027a 00000000 		.4byte	0
 4885              	.LLST21:
 4886 027e 02000000 		.4byte	.LVL61
 4887 0282 06000000 		.4byte	.LVL62
 4888 0286 0200     		.2byte	0x2
 4889 0288 30       		.byte	0x30
 4890 0289 9F       		.byte	0x9f
 4891 028a 06000000 		.4byte	.LVL62
 4892 028e 1A000000 		.4byte	.LVL67
 4893 0292 0100     		.2byte	0x1
 4894 0294 55       		.byte	0x55
 4895 0295 1A000000 		.4byte	.LVL67
 4896 0299 1C000000 		.4byte	.LFE57
 4897 029d 0100     		.2byte	0x1
 4898 029f 50       		.byte	0x50
 4899 02a0 00000000 		.4byte	0
 4900 02a4 00000000 		.4byte	0
 4901              	.LLST22:
 4902 02a8 02000000 		.4byte	.LVL68
 4903 02ac 08000000 		.4byte	.LVL69
 4904 02b0 0200     		.2byte	0x2
 4905 02b2 30       		.byte	0x30
 4906 02b3 9F       		.byte	0x9f
 4907 02b4 08000000 		.4byte	.LVL69
 4908 02b8 1C000000 		.4byte	.LVL73
 4909 02bc 0100     		.2byte	0x1
 4910 02be 54       		.byte	0x54
 4911 02bf 00000000 		.4byte	0
 4912 02c3 00000000 		.4byte	0
 4913              	.LLST23:
 4914 02c7 02000000 		.4byte	.LVL68
 4915 02cb 08000000 		.4byte	.LVL69
 4916 02cf 0200     		.2byte	0x2
 4917 02d1 30       		.byte	0x30
 4918 02d2 9F       		.byte	0x9f
 4919 02d3 08000000 		.4byte	.LVL69
 4920 02d7 1C000000 		.4byte	.LVL74
 4921 02db 0100     		.2byte	0x1
 4922 02dd 55       		.byte	0x55
 4923 02de 1C000000 		.4byte	.LVL74
 4924 02e2 1E000000 		.4byte	.LFE58
 4925 02e6 0100     		.2byte	0x1
 4926 02e8 50       		.byte	0x50
 4927 02e9 00000000 		.4byte	0
 4928 02ed 00000000 		.4byte	0
 4929              	.LLST24:
 4930 02f1 00000000 		.4byte	.LVL75
 4931 02f5 04000000 		.4byte	.LVL77
 4932 02f9 0100     		.2byte	0x1
 4933 02fb 50       		.byte	0x50
 4934 02fc 04000000 		.4byte	.LVL77
 4935 0300 1C000000 		.4byte	.LFE59
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 139


 4936 0304 0400     		.2byte	0x4
 4937 0306 F3       		.byte	0xf3
 4938 0307 01       		.uleb128 0x1
 4939 0308 50       		.byte	0x50
 4940 0309 9F       		.byte	0x9f
 4941 030a 00000000 		.4byte	0
 4942 030e 00000000 		.4byte	0
 4943              	.LLST25:
 4944 0312 02000000 		.4byte	.LVL76
 4945 0316 04000000 		.4byte	.LVL77
 4946 031a 0200     		.2byte	0x2
 4947 031c 30       		.byte	0x30
 4948 031d 9F       		.byte	0x9f
 4949 031e 04000000 		.4byte	.LVL77
 4950 0322 10000000 		.4byte	.LVL79
 4951 0326 0100     		.2byte	0x1
 4952 0328 54       		.byte	0x54
 4953 0329 12000000 		.4byte	.LVL80
 4954 032d 16000000 		.4byte	.LVL81
 4955 0331 0100     		.2byte	0x1
 4956 0333 54       		.byte	0x54
 4957 0334 00000000 		.4byte	0
 4958 0338 00000000 		.4byte	0
 4959              	.LLST26:
 4960 033c 00000000 		.4byte	.LVL82
 4961 0340 04000000 		.4byte	.LVL84
 4962 0344 0100     		.2byte	0x1
 4963 0346 50       		.byte	0x50
 4964 0347 04000000 		.4byte	.LVL84
 4965 034b 1C000000 		.4byte	.LFE60
 4966 034f 0400     		.2byte	0x4
 4967 0351 F3       		.byte	0xf3
 4968 0352 01       		.uleb128 0x1
 4969 0353 50       		.byte	0x50
 4970 0354 9F       		.byte	0x9f
 4971 0355 00000000 		.4byte	0
 4972 0359 00000000 		.4byte	0
 4973              	.LLST27:
 4974 035d 02000000 		.4byte	.LVL83
 4975 0361 04000000 		.4byte	.LVL84
 4976 0365 0200     		.2byte	0x2
 4977 0367 30       		.byte	0x30
 4978 0368 9F       		.byte	0x9f
 4979 0369 04000000 		.4byte	.LVL84
 4980 036d 10000000 		.4byte	.LVL86
 4981 0371 0100     		.2byte	0x1
 4982 0373 54       		.byte	0x54
 4983 0374 12000000 		.4byte	.LVL87
 4984 0378 16000000 		.4byte	.LVL88
 4985 037c 0100     		.2byte	0x1
 4986 037e 54       		.byte	0x54
 4987 037f 00000000 		.4byte	0
 4988 0383 00000000 		.4byte	0
 4989              	.LLST28:
 4990 0387 00000000 		.4byte	.LVL89
 4991 038b 0C000000 		.4byte	.LVL92
 4992 038f 0100     		.2byte	0x1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 140


 4993 0391 50       		.byte	0x50
 4994 0392 0C000000 		.4byte	.LVL92
 4995 0396 2C000000 		.4byte	.LFE61
 4996 039a 0400     		.2byte	0x4
 4997 039c F3       		.byte	0xf3
 4998 039d 01       		.uleb128 0x1
 4999 039e 50       		.byte	0x50
 5000 039f 9F       		.byte	0x9f
 5001 03a0 00000000 		.4byte	0
 5002 03a4 00000000 		.4byte	0
 5003              	.LLST29:
 5004 03a8 08000000 		.4byte	.LVL91
 5005 03ac 10000000 		.4byte	.LVL93
 5006 03b0 0200     		.2byte	0x2
 5007 03b2 30       		.byte	0x30
 5008 03b3 9F       		.byte	0x9f
 5009 03b4 10000000 		.4byte	.LVL93
 5010 03b8 20000000 		.4byte	.LVL96
 5011 03bc 0100     		.2byte	0x1
 5012 03be 53       		.byte	0x53
 5013 03bf 22000000 		.4byte	.LVL97
 5014 03c3 2C000000 		.4byte	.LFE61
 5015 03c7 0100     		.2byte	0x1
 5016 03c9 53       		.byte	0x53
 5017 03ca 00000000 		.4byte	0
 5018 03ce 00000000 		.4byte	0
 5019              	.LLST30:
 5020 03d2 02000000 		.4byte	.LVL90
 5021 03d6 10000000 		.4byte	.LVL93
 5022 03da 0300     		.2byte	0x3
 5023 03dc 09       		.byte	0x9
 5024 03dd FF       		.byte	0xff
 5025 03de 9F       		.byte	0x9f
 5026 03df 10000000 		.4byte	.LVL93
 5027 03e3 2C000000 		.4byte	.LFE61
 5028 03e7 0100     		.2byte	0x1
 5029 03e9 50       		.byte	0x50
 5030 03ea 00000000 		.4byte	0
 5031 03ee 00000000 		.4byte	0
 5032              	.LLST31:
 5033 03f2 02000000 		.4byte	.LVL90
 5034 03f6 10000000 		.4byte	.LVL93
 5035 03fa 0200     		.2byte	0x2
 5036 03fc 30       		.byte	0x30
 5037 03fd 9F       		.byte	0x9f
 5038 03fe 10000000 		.4byte	.LVL93
 5039 0402 1C000000 		.4byte	.LVL94
 5040 0406 0100     		.2byte	0x1
 5041 0408 56       		.byte	0x56
 5042 0409 1E000000 		.4byte	.LVL95
 5043 040d 26000000 		.4byte	.LVL99
 5044 0411 0100     		.2byte	0x1
 5045 0413 56       		.byte	0x56
 5046 0414 00000000 		.4byte	0
 5047 0418 00000000 		.4byte	0
 5048              	.LLST32:
 5049 041c 08000000 		.4byte	.LVL91
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 141


 5050 0420 26000000 		.4byte	.LVL98
 5051 0424 0100     		.2byte	0x1
 5052 0426 55       		.byte	0x55
 5053 0427 00000000 		.4byte	0
 5054 042b 00000000 		.4byte	0
 5055              	.LLST33:
 5056 042f 00000000 		.4byte	.LVL100
 5057 0433 0E000000 		.4byte	.LVL102
 5058 0437 0100     		.2byte	0x1
 5059 0439 50       		.byte	0x50
 5060 043a 0E000000 		.4byte	.LVL102
 5061 043e E4000000 		.4byte	.LFE62
 5062 0442 0400     		.2byte	0x4
 5063 0444 F3       		.byte	0xf3
 5064 0445 01       		.uleb128 0x1
 5065 0446 50       		.byte	0x50
 5066 0447 9F       		.byte	0x9f
 5067 0448 00000000 		.4byte	0
 5068 044c 00000000 		.4byte	0
 5069              	.LLST34:
 5070 0450 00000000 		.4byte	.LVL100
 5071 0454 14000000 		.4byte	.LVL104
 5072 0458 0100     		.2byte	0x1
 5073 045a 51       		.byte	0x51
 5074 045b 14000000 		.4byte	.LVL104
 5075 045f E4000000 		.4byte	.LFE62
 5076 0463 0400     		.2byte	0x4
 5077 0465 F3       		.byte	0xf3
 5078 0466 01       		.uleb128 0x1
 5079 0467 51       		.byte	0x51
 5080 0468 9F       		.byte	0x9f
 5081 0469 00000000 		.4byte	0
 5082 046d 00000000 		.4byte	0
 5083              	.LLST35:
 5084 0471 00000000 		.4byte	.LVL100
 5085 0475 2E000000 		.4byte	.LVL109
 5086 0479 0100     		.2byte	0x1
 5087 047b 52       		.byte	0x52
 5088 047c 2E000000 		.4byte	.LVL109
 5089 0480 E4000000 		.4byte	.LFE62
 5090 0484 0400     		.2byte	0x4
 5091 0486 F3       		.byte	0xf3
 5092 0487 01       		.uleb128 0x1
 5093 0488 52       		.byte	0x52
 5094 0489 9F       		.byte	0x9f
 5095 048a 00000000 		.4byte	0
 5096 048e 00000000 		.4byte	0
 5097              	.LLST36:
 5098 0492 00000000 		.4byte	.LVL100
 5099 0496 0C000000 		.4byte	.LVL101
 5100 049a 0100     		.2byte	0x1
 5101 049c 53       		.byte	0x53
 5102 049d 0C000000 		.4byte	.LVL101
 5103 04a1 E4000000 		.4byte	.LFE62
 5104 04a5 0400     		.2byte	0x4
 5105 04a7 F3       		.byte	0xf3
 5106 04a8 01       		.uleb128 0x1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 142


 5107 04a9 53       		.byte	0x53
 5108 04aa 9F       		.byte	0x9f
 5109 04ab 00000000 		.4byte	0
 5110 04af 00000000 		.4byte	0
 5111              	.LLST37:
 5112 04b3 00000000 		.4byte	.LVL100
 5113 04b7 0C000000 		.4byte	.LVL101
 5114 04bb 0200     		.2byte	0x2
 5115 04bd 91       		.byte	0x91
 5116 04be 00       		.sleb128 0
 5117 04bf 0C000000 		.4byte	.LVL101
 5118 04c3 10000000 		.4byte	.LVL103
 5119 04c7 0200     		.2byte	0x2
 5120 04c9 73       		.byte	0x73
 5121 04ca 00       		.sleb128 0
 5122 04cb 10000000 		.4byte	.LVL103
 5123 04cf E4000000 		.4byte	.LFE62
 5124 04d3 0200     		.2byte	0x2
 5125 04d5 91       		.byte	0x91
 5126 04d6 00       		.sleb128 0
 5127 04d7 00000000 		.4byte	0
 5128 04db 00000000 		.4byte	0
 5129              	.LLST38:
 5130 04df 14000000 		.4byte	.LVL104
 5131 04e3 1C000000 		.4byte	.LVL105
 5132 04e7 0200     		.2byte	0x2
 5133 04e9 30       		.byte	0x30
 5134 04ea 9F       		.byte	0x9f
 5135 04eb 1C000000 		.4byte	.LVL105
 5136 04ef 1E000000 		.4byte	.LVL106
 5137 04f3 0100     		.2byte	0x1
 5138 04f5 56       		.byte	0x56
 5139 04f6 1E000000 		.4byte	.LVL106
 5140 04fa 20000000 		.4byte	.LVL107
 5141 04fe 0200     		.2byte	0x2
 5142 0500 30       		.byte	0x30
 5143 0501 9F       		.byte	0x9f
 5144 0502 20000000 		.4byte	.LVL107
 5145 0506 38000000 		.4byte	.LVL110
 5146 050a 0100     		.2byte	0x1
 5147 050c 56       		.byte	0x56
 5148 050d 44000000 		.4byte	.LVL111
 5149 0511 5E000000 		.4byte	.LVL114
 5150 0515 0100     		.2byte	0x1
 5151 0517 56       		.byte	0x56
 5152 0518 00000000 		.4byte	0
 5153 051c 00000000 		.4byte	0
 5154              	.LLST39:
 5155 0520 24000000 		.4byte	.LVL108
 5156 0524 DC000000 		.4byte	.LVL127
 5157 0528 0100     		.2byte	0x1
 5158 052a 55       		.byte	0x55
 5159 052b 00000000 		.4byte	0
 5160 052f 00000000 		.4byte	0
 5161              	.LLST40:
 5162 0533 B8000000 		.4byte	.LVL116
 5163 0537 BE000000 		.4byte	.LVL118
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 143


 5164 053b 0100     		.2byte	0x1
 5165 053d 50       		.byte	0x50
 5166 053e BE000000 		.4byte	.LVL118
 5167 0542 C1000000 		.4byte	.LVL119-1
 5168 0546 0E00     		.2byte	0xe
 5169 0548 72       		.byte	0x72
 5170 0549 00       		.sleb128 0
 5171 054a 03       		.byte	0x3
 5172 054b 24000000 		.4byte	CapSense_centroid.5414
 5173 054f 94       		.byte	0x94
 5174 0550 01       		.byte	0x1
 5175 0551 08       		.byte	0x8
 5176 0552 FF       		.byte	0xff
 5177 0553 1A       		.byte	0x1a
 5178 0554 1C       		.byte	0x1c
 5179 0555 9F       		.byte	0x9f
 5180 0556 00000000 		.4byte	0
 5181 055a 00000000 		.4byte	0
 5182              	.LLST41:
 5183 055e BC000000 		.4byte	.LVL117
 5184 0562 C1000000 		.4byte	.LVL119-1
 5185 0566 0100     		.2byte	0x1
 5186 0568 51       		.byte	0x51
 5187 0569 C6000000 		.4byte	.LVL120
 5188 056d CE000000 		.4byte	.LVL121
 5189 0571 0100     		.2byte	0x1
 5190 0573 54       		.byte	0x54
 5191 0574 CE000000 		.4byte	.LVL121
 5192 0578 D6000000 		.4byte	.LVL122
 5193 057c 0100     		.2byte	0x1
 5194 057e 50       		.byte	0x50
 5195 057f D6000000 		.4byte	.LVL122
 5196 0583 D8000000 		.4byte	.LVL123
 5197 0587 0500     		.2byte	0x5
 5198 0589 70       		.byte	0x70
 5199 058a 80827E   		.sleb128 -32512
 5200 058d 9F       		.byte	0x9f
 5201 058e D8000000 		.4byte	.LVL123
 5202 0592 DC000000 		.4byte	.LVL125
 5203 0596 0C00     		.2byte	0xc
 5204 0598 7D       		.byte	0x7d
 5205 0599 00       		.sleb128 0
 5206 059a 94       		.byte	0x94
 5207 059b 02       		.byte	0x2
 5208 059c 40       		.byte	0x40
 5209 059d 24       		.byte	0x24
 5210 059e 40       		.byte	0x40
 5211 059f 26       		.byte	0x26
 5212 05a0 74       		.byte	0x74
 5213 05a1 00       		.sleb128 0
 5214 05a2 1E       		.byte	0x1e
 5215 05a3 9F       		.byte	0x9f
 5216 05a4 DC000000 		.4byte	.LVL125
 5217 05a8 DC000000 		.4byte	.LVL126
 5218 05ac 0C00     		.2byte	0xc
 5219 05ae 91       		.byte	0x91
 5220 05af 60       		.sleb128 -32
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 144


 5221 05b0 94       		.byte	0x94
 5222 05b1 02       		.byte	0x2
 5223 05b2 40       		.byte	0x40
 5224 05b3 24       		.byte	0x24
 5225 05b4 40       		.byte	0x40
 5226 05b5 26       		.byte	0x26
 5227 05b6 74       		.byte	0x74
 5228 05b7 00       		.sleb128 0
 5229 05b8 1E       		.byte	0x1e
 5230 05b9 9F       		.byte	0x9f
 5231 05ba 00000000 		.4byte	0
 5232 05be 00000000 		.4byte	0
 5233              	.LLST42:
 5234 05c2 14000000 		.4byte	.LVL104
 5235 05c6 4E000000 		.4byte	.LVL112
 5236 05ca 0100     		.2byte	0x1
 5237 05cc 51       		.byte	0x51
 5238 05cd 5C000000 		.4byte	.LVL113
 5239 05d1 6A000000 		.4byte	.LVL115
 5240 05d5 0100     		.2byte	0x1
 5241 05d7 51       		.byte	0x51
 5242 05d8 00000000 		.4byte	0
 5243 05dc 00000000 		.4byte	0
 5244              	.LLST43:
 5245 05e0 00000000 		.4byte	.LVL128
 5246 05e4 0C000000 		.4byte	.LVL130
 5247 05e8 0100     		.2byte	0x1
 5248 05ea 50       		.byte	0x50
 5249 05eb 0C000000 		.4byte	.LVL130
 5250 05ef 30000000 		.4byte	.LVL136
 5251 05f3 0100     		.2byte	0x1
 5252 05f5 54       		.byte	0x54
 5253 05f6 30000000 		.4byte	.LVL136
 5254 05fa 40000000 		.4byte	.LFE64
 5255 05fe 0400     		.2byte	0x4
 5256 0600 F3       		.byte	0xf3
 5257 0601 01       		.uleb128 0x1
 5258 0602 50       		.byte	0x50
 5259 0603 9F       		.byte	0x9f
 5260 0604 00000000 		.4byte	0
 5261 0608 00000000 		.4byte	0
 5262              	.LLST44:
 5263 060c 12000000 		.4byte	.LVL131
 5264 0610 27000000 		.4byte	.LVL132-1
 5265 0614 0100     		.2byte	0x1
 5266 0616 50       		.byte	0x50
 5267 0617 2C000000 		.4byte	.LVL134
 5268 061b 2E000000 		.4byte	.LVL135
 5269 061f 0100     		.2byte	0x1
 5270 0621 50       		.byte	0x50
 5271 0622 00000000 		.4byte	0
 5272 0626 00000000 		.4byte	0
 5273              	.LLST45:
 5274 062a 2A000000 		.4byte	.LVL133
 5275 062e 2C000000 		.4byte	.LVL134
 5276 0632 0100     		.2byte	0x1
 5277 0634 50       		.byte	0x50
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 145


 5278 0635 2E000000 		.4byte	.LVL135
 5279 0639 40000000 		.4byte	.LFE64
 5280 063d 0100     		.2byte	0x1
 5281 063f 50       		.byte	0x50
 5282 0640 00000000 		.4byte	0
 5283 0644 00000000 		.4byte	0
 5284              	.LLST46:
 5285 0648 00000000 		.4byte	.LVL137
 5286 064c 08000000 		.4byte	.LVL138
 5287 0650 0100     		.2byte	0x1
 5288 0652 50       		.byte	0x50
 5289 0653 08000000 		.4byte	.LVL138
 5290 0657 0A000000 		.4byte	.LVL139
 5291 065b 0400     		.2byte	0x4
 5292 065d F3       		.byte	0xf3
 5293 065e 01       		.uleb128 0x1
 5294 065f 50       		.byte	0x50
 5295 0660 9F       		.byte	0x9f
 5296 0661 0A000000 		.4byte	.LVL139
 5297 0665 1A000000 		.4byte	.LVL141
 5298 0669 0100     		.2byte	0x1
 5299 066b 50       		.byte	0x50
 5300 066c 00000000 		.4byte	0
 5301 0670 00000000 		.4byte	0
 5302              	.LLST47:
 5303 0674 00000000 		.4byte	.LVL137
 5304 0678 0A000000 		.4byte	.LVL139
 5305 067c 0100     		.2byte	0x1
 5306 067e 51       		.byte	0x51
 5307 067f 0A000000 		.4byte	.LVL139
 5308 0683 1C000000 		.4byte	.LFE65
 5309 0687 0100     		.2byte	0x1
 5310 0689 51       		.byte	0x51
 5311 068a 00000000 		.4byte	0
 5312 068e 00000000 		.4byte	0
 5313              	.LLST48:
 5314 0692 00000000 		.4byte	.LVL142
 5315 0696 06000000 		.4byte	.LVL145
 5316 069a 0100     		.2byte	0x1
 5317 069c 50       		.byte	0x50
 5318 069d 06000000 		.4byte	.LVL145
 5319 06a1 0C000000 		.4byte	.LFE66
 5320 06a5 0400     		.2byte	0x4
 5321 06a7 F3       		.byte	0xf3
 5322 06a8 01       		.uleb128 0x1
 5323 06a9 50       		.byte	0x50
 5324 06aa 9F       		.byte	0x9f
 5325 06ab 00000000 		.4byte	0
 5326 06af 00000000 		.4byte	0
 5327              	.LLST49:
 5328 06b3 00000000 		.4byte	.LVL142
 5329 06b7 04000000 		.4byte	.LVL144
 5330 06bb 0100     		.2byte	0x1
 5331 06bd 51       		.byte	0x51
 5332 06be 04000000 		.4byte	.LVL144
 5333 06c2 0C000000 		.4byte	.LFE66
 5334 06c6 0400     		.2byte	0x4
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 146


 5335 06c8 F3       		.byte	0xf3
 5336 06c9 01       		.uleb128 0x1
 5337 06ca 51       		.byte	0x51
 5338 06cb 9F       		.byte	0x9f
 5339 06cc 00000000 		.4byte	0
 5340 06d0 00000000 		.4byte	0
 5341              	.LLST50:
 5342 06d4 02000000 		.4byte	.LVL143
 5343 06d8 06000000 		.4byte	.LVL145
 5344 06dc 0100     		.2byte	0x1
 5345 06de 53       		.byte	0x53
 5346 06df 06000000 		.4byte	.LVL145
 5347 06e3 0A000000 		.4byte	.LVL147
 5348 06e7 0100     		.2byte	0x1
 5349 06e9 50       		.byte	0x50
 5350 06ea 0A000000 		.4byte	.LVL147
 5351 06ee 0C000000 		.4byte	.LFE66
 5352 06f2 0800     		.2byte	0x8
 5353 06f4 71       		.byte	0x71
 5354 06f5 00       		.sleb128 0
 5355 06f6 73       		.byte	0x73
 5356 06f7 00       		.sleb128 0
 5357 06f8 22       		.byte	0x22
 5358 06f9 32       		.byte	0x32
 5359 06fa 25       		.byte	0x25
 5360 06fb 9F       		.byte	0x9f
 5361 06fc 00000000 		.4byte	0
 5362 0700 00000000 		.4byte	0
 5363              	.LLST51:
 5364 0704 00000000 		.4byte	.LVL148
 5365 0708 2A000000 		.4byte	.LVL151
 5366 070c 0100     		.2byte	0x1
 5367 070e 50       		.byte	0x50
 5368 070f 2A000000 		.4byte	.LVL151
 5369 0713 DA000000 		.4byte	.LVL168
 5370 0717 0100     		.2byte	0x1
 5371 0719 54       		.byte	0x54
 5372 071a DA000000 		.4byte	.LVL168
 5373 071e E0000000 		.4byte	.LVL169
 5374 0722 0400     		.2byte	0x4
 5375 0724 F3       		.byte	0xf3
 5376 0725 01       		.uleb128 0x1
 5377 0726 50       		.byte	0x50
 5378 0727 9F       		.byte	0x9f
 5379 0728 E0000000 		.4byte	.LVL169
 5380 072c E4000000 		.4byte	.LVL171
 5381 0730 0100     		.2byte	0x1
 5382 0732 54       		.byte	0x54
 5383 0733 E4000000 		.4byte	.LVL171
 5384 0737 E8000000 		.4byte	.LVL172
 5385 073b 0400     		.2byte	0x4
 5386 073d F3       		.byte	0xf3
 5387 073e 01       		.uleb128 0x1
 5388 073f 50       		.byte	0x50
 5389 0740 9F       		.byte	0x9f
 5390 0741 E8000000 		.4byte	.LVL172
 5391 0745 EC000000 		.4byte	.LVL173
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 147


 5392 0749 0100     		.2byte	0x1
 5393 074b 54       		.byte	0x54
 5394 074c EC000000 		.4byte	.LVL173
 5395 0750 1C010000 		.4byte	.LFE38
 5396 0754 0400     		.2byte	0x4
 5397 0756 F3       		.byte	0xf3
 5398 0757 01       		.uleb128 0x1
 5399 0758 50       		.byte	0x50
 5400 0759 9F       		.byte	0x9f
 5401 075a 00000000 		.4byte	0
 5402 075e 00000000 		.4byte	0
 5403              	.LLST52:
 5404 0762 AA000000 		.4byte	.LVL161
 5405 0766 B4000000 		.4byte	.LVL163
 5406 076a 0100     		.2byte	0x1
 5407 076c 53       		.byte	0x53
 5408 076d B4000000 		.4byte	.LVL163
 5409 0771 C4000000 		.4byte	.LVL165
 5410 0775 0100     		.2byte	0x1
 5411 0777 57       		.byte	0x57
 5412 0778 00000000 		.4byte	0
 5413 077c 00000000 		.4byte	0
 5414              	.LLST53:
 5415 0780 52000000 		.4byte	.LVL156
 5416 0784 58000000 		.4byte	.LVL157
 5417 0788 0200     		.2byte	0x2
 5418 078a 31       		.byte	0x31
 5419 078b 9F       		.byte	0x9f
 5420 078c 5C000000 		.4byte	.LVL158
 5421 0790 60000000 		.4byte	.LVL159
 5422 0794 0200     		.2byte	0x2
 5423 0796 30       		.byte	0x30
 5424 0797 9F       		.byte	0x9f
 5425 0798 60000000 		.4byte	.LVL159
 5426 079c D2000000 		.4byte	.LVL166
 5427 07a0 0100     		.2byte	0x1
 5428 07a2 58       		.byte	0x58
 5429 07a3 D2000000 		.4byte	.LVL166
 5430 07a7 D8000000 		.4byte	.LVL167
 5431 07ab 0100     		.2byte	0x1
 5432 07ad 53       		.byte	0x53
 5433 07ae D8000000 		.4byte	.LVL167
 5434 07b2 E0000000 		.4byte	.LVL169
 5435 07b6 0100     		.2byte	0x1
 5436 07b8 58       		.byte	0x58
 5437 07b9 E0000000 		.4byte	.LVL169
 5438 07bd E2000000 		.4byte	.LVL170
 5439 07c1 0100     		.2byte	0x1
 5440 07c3 53       		.byte	0x53
 5441 07c4 E2000000 		.4byte	.LVL170
 5442 07c8 F2000000 		.4byte	.LVL175
 5443 07cc 0100     		.2byte	0x1
 5444 07ce 58       		.byte	0x58
 5445 07cf 00000000 		.4byte	0
 5446 07d3 00000000 		.4byte	0
 5447              	.LLST54:
 5448 07d7 52000000 		.4byte	.LVL156
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 148


 5449 07db 58000000 		.4byte	.LVL157
 5450 07df 0100     		.2byte	0x1
 5451 07e1 55       		.byte	0x55
 5452 07e2 5C000000 		.4byte	.LVL158
 5453 07e6 F2000000 		.4byte	.LVL174
 5454 07ea 0100     		.2byte	0x1
 5455 07ec 55       		.byte	0x55
 5456 07ed 00000000 		.4byte	0
 5457 07f1 00000000 		.4byte	0
 5458              	.LLST55:
 5459 07f5 1A000000 		.4byte	.LVL150
 5460 07f9 30000000 		.4byte	.LVL153
 5461 07fd 0100     		.2byte	0x1
 5462 07ff 57       		.byte	0x57
 5463 0800 30000000 		.4byte	.LVL153
 5464 0804 34000000 		.4byte	.LVL154
 5465 0808 0100     		.2byte	0x1
 5466 080a 50       		.byte	0x50
 5467 080b 34000000 		.4byte	.LVL154
 5468 080f B4000000 		.4byte	.LVL163
 5469 0813 0100     		.2byte	0x1
 5470 0815 57       		.byte	0x57
 5471 0816 00000000 		.4byte	0
 5472 081a 00000000 		.4byte	0
 5473              	.LLST56:
 5474 081e 00000000 		.4byte	.LVL176
 5475 0822 07000000 		.4byte	.LVL177-1
 5476 0826 0100     		.2byte	0x1
 5477 0828 50       		.byte	0x50
 5478 0829 07000000 		.4byte	.LVL177-1
 5479 082d 0E000000 		.4byte	.LVL179
 5480 0831 0100     		.2byte	0x1
 5481 0833 54       		.byte	0x54
 5482 0834 0E000000 		.4byte	.LVL179
 5483 0838 10000000 		.4byte	.LFE39
 5484 083c 0400     		.2byte	0x4
 5485 083e F3       		.byte	0xf3
 5486 083f 01       		.uleb128 0x1
 5487 0840 50       		.byte	0x50
 5488 0841 9F       		.byte	0x9f
 5489 0842 00000000 		.4byte	0
 5490 0846 00000000 		.4byte	0
 5491              	.LLST57:
 5492 084a 02000000 		.4byte	.LVL180
 5493 084e 06000000 		.4byte	.LVL181
 5494 0852 0200     		.2byte	0x2
 5495 0854 30       		.byte	0x30
 5496 0855 9F       		.byte	0x9f
 5497 0856 06000000 		.4byte	.LVL181
 5498 085a 1E000000 		.4byte	.LVL186
 5499 085e 0100     		.2byte	0x1
 5500 0860 54       		.byte	0x54
 5501 0861 00000000 		.4byte	0
 5502 0865 00000000 		.4byte	0
 5503              	.LLST58:
 5504 0869 0E000000 		.4byte	.LVL182
 5505 086d 14000000 		.4byte	.LVL183
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 149


 5506 0871 0100     		.2byte	0x1
 5507 0873 50       		.byte	0x50
 5508 0874 00000000 		.4byte	0
 5509 0878 00000000 		.4byte	0
 5510              	.LLST59:
 5511 087c 00000000 		.4byte	.LVL187
 5512 0880 06000000 		.4byte	.LVL189
 5513 0884 0100     		.2byte	0x1
 5514 0886 50       		.byte	0x50
 5515 0887 06000000 		.4byte	.LVL189
 5516 088b 24000000 		.4byte	.LFE41
 5517 088f 0400     		.2byte	0x4
 5518 0891 F3       		.byte	0xf3
 5519 0892 01       		.uleb128 0x1
 5520 0893 50       		.byte	0x50
 5521 0894 9F       		.byte	0x9f
 5522 0895 00000000 		.4byte	0
 5523 0899 00000000 		.4byte	0
 5524              	.LLST60:
 5525 089d 02000000 		.4byte	.LVL188
 5526 08a1 06000000 		.4byte	.LVL189
 5527 08a5 0200     		.2byte	0x2
 5528 08a7 30       		.byte	0x30
 5529 08a8 9F       		.byte	0x9f
 5530 08a9 06000000 		.4byte	.LVL189
 5531 08ad 1E000000 		.4byte	.LVL194
 5532 08b1 0100     		.2byte	0x1
 5533 08b3 54       		.byte	0x54
 5534 08b4 00000000 		.4byte	0
 5535 08b8 00000000 		.4byte	0
 5536              	.LLST61:
 5537 08bc 0E000000 		.4byte	.LVL190
 5538 08c0 14000000 		.4byte	.LVL191
 5539 08c4 0100     		.2byte	0x1
 5540 08c6 50       		.byte	0x50
 5541 08c7 00000000 		.4byte	0
 5542 08cb 00000000 		.4byte	0
 5543              	.LLST62:
 5544 08cf 00000000 		.4byte	.LVL195
 5545 08d3 12000000 		.4byte	.LVL197
 5546 08d7 0100     		.2byte	0x1
 5547 08d9 50       		.byte	0x50
 5548 08da 12000000 		.4byte	.LVL197
 5549 08de 50000000 		.4byte	.LVL205
 5550 08e2 0100     		.2byte	0x1
 5551 08e4 54       		.byte	0x54
 5552 08e5 50000000 		.4byte	.LVL205
 5553 08e9 5E000000 		.4byte	.LVL208
 5554 08ed 0400     		.2byte	0x4
 5555 08ef F3       		.byte	0xf3
 5556 08f0 01       		.uleb128 0x1
 5557 08f1 50       		.byte	0x50
 5558 08f2 9F       		.byte	0x9f
 5559 08f3 5E000000 		.4byte	.LVL208
 5560 08f7 68000000 		.4byte	.LVL210
 5561 08fb 0100     		.2byte	0x1
 5562 08fd 54       		.byte	0x54
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 150


 5563 08fe 68000000 		.4byte	.LVL210
 5564 0902 7C000000 		.4byte	.LFE63
 5565 0906 0400     		.2byte	0x4
 5566 0908 F3       		.byte	0xf3
 5567 0909 01       		.uleb128 0x1
 5568 090a 50       		.byte	0x50
 5569 090b 9F       		.byte	0x9f
 5570 090c 00000000 		.4byte	0
 5571 0910 00000000 		.4byte	0
 5572              	.LLST63:
 5573 0914 36000000 		.4byte	.LVL201
 5574 0918 44000000 		.4byte	.LVL202
 5575 091c 0100     		.2byte	0x1
 5576 091e 53       		.byte	0x53
 5577 091f 44000000 		.4byte	.LVL202
 5578 0923 48000000 		.4byte	.LVL203
 5579 0927 0300     		.2byte	0x3
 5580 0929 75       		.byte	0x75
 5581 092a 01       		.sleb128 1
 5582 092b 9F       		.byte	0x9f
 5583 092c 4E000000 		.4byte	.LVL204
 5584 0930 57000000 		.4byte	.LVL206-1
 5585 0934 0100     		.2byte	0x1
 5586 0936 53       		.byte	0x53
 5587 0937 57000000 		.4byte	.LVL206-1
 5588 093b 5E000000 		.4byte	.LVL208
 5589 093f 0300     		.2byte	0x3
 5590 0941 75       		.byte	0x75
 5591 0942 01       		.sleb128 1
 5592 0943 9F       		.byte	0x9f
 5593 0944 00000000 		.4byte	0
 5594 0948 00000000 		.4byte	0
 5595              	.LLST64:
 5596 094c 0C000000 		.4byte	.LVL196
 5597 0950 48000000 		.4byte	.LVL203
 5598 0954 0100     		.2byte	0x1
 5599 0956 55       		.byte	0x55
 5600 0957 4E000000 		.4byte	.LVL204
 5601 095b 62000000 		.4byte	.LVL209
 5602 095f 0100     		.2byte	0x1
 5603 0961 55       		.byte	0x55
 5604 0962 00000000 		.4byte	0
 5605 0966 00000000 		.4byte	0
 5606              	.LLST65:
 5607 096a 18000000 		.4byte	.LVL198
 5608 096e 2D000000 		.4byte	.LVL199-1
 5609 0972 0100     		.2byte	0x1
 5610 0974 50       		.byte	0x50
 5611 0975 5E000000 		.4byte	.LVL208
 5612 0979 68000000 		.4byte	.LVL210
 5613 097d 0100     		.2byte	0x1
 5614 097f 50       		.byte	0x50
 5615 0980 00000000 		.4byte	0
 5616 0984 00000000 		.4byte	0
 5617              	.LLST66:
 5618 0988 32000000 		.4byte	.LVL200
 5619 098c 57000000 		.4byte	.LVL206-1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 151


 5620 0990 0100     		.2byte	0x1
 5621 0992 50       		.byte	0x50
 5622 0993 5A000000 		.4byte	.LVL207
 5623 0997 5E000000 		.4byte	.LVL208
 5624 099b 0100     		.2byte	0x1
 5625 099d 53       		.byte	0x53
 5626 099e 5E000000 		.4byte	.LVL208
 5627 09a2 68000000 		.4byte	.LVL210
 5628 09a6 0300     		.2byte	0x3
 5629 09a8 09       		.byte	0x9
 5630 09a9 FF       		.byte	0xff
 5631 09aa 9F       		.byte	0x9f
 5632 09ab 68000000 		.4byte	.LVL210
 5633 09af 7C000000 		.4byte	.LFE63
 5634 09b3 0100     		.2byte	0x1
 5635 09b5 50       		.byte	0x50
 5636 09b6 00000000 		.4byte	0
 5637 09ba 00000000 		.4byte	0
 5638              	.LLST67:
 5639 09be 00000000 		.4byte	.LVL211
 5640 09c2 04000000 		.4byte	.LVL212
 5641 09c6 0100     		.2byte	0x1
 5642 09c8 50       		.byte	0x50
 5643 09c9 04000000 		.4byte	.LVL212
 5644 09cd 0C000000 		.4byte	.LFE67
 5645 09d1 0400     		.2byte	0x4
 5646 09d3 F3       		.byte	0xf3
 5647 09d4 01       		.uleb128 0x1
 5648 09d5 50       		.byte	0x50
 5649 09d6 9F       		.byte	0x9f
 5650 09d7 00000000 		.4byte	0
 5651 09db 00000000 		.4byte	0
 5652              	.LLST68:
 5653 09df 00000000 		.4byte	.LVL213
 5654 09e3 04000000 		.4byte	.LVL214
 5655 09e7 0100     		.2byte	0x1
 5656 09e9 50       		.byte	0x50
 5657 09ea 04000000 		.4byte	.LVL214
 5658 09ee 0C000000 		.4byte	.LFE68
 5659 09f2 0400     		.2byte	0x4
 5660 09f4 F3       		.byte	0xf3
 5661 09f5 01       		.uleb128 0x1
 5662 09f6 50       		.byte	0x50
 5663 09f7 9F       		.byte	0x9f
 5664 09f8 00000000 		.4byte	0
 5665 09fc 00000000 		.4byte	0
 5666              	.LLST69:
 5667 0a00 00000000 		.4byte	.LVL215
 5668 0a04 04000000 		.4byte	.LVL216
 5669 0a08 0100     		.2byte	0x1
 5670 0a0a 50       		.byte	0x50
 5671 0a0b 04000000 		.4byte	.LVL216
 5672 0a0f 0C000000 		.4byte	.LFE69
 5673 0a13 0400     		.2byte	0x4
 5674 0a15 F3       		.byte	0xf3
 5675 0a16 01       		.uleb128 0x1
 5676 0a17 50       		.byte	0x50
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 152


 5677 0a18 9F       		.byte	0x9f
 5678 0a19 00000000 		.4byte	0
 5679 0a1d 00000000 		.4byte	0
 5680              		.section	.debug_aranges,"",%progbits
 5681 0000 44010000 		.4byte	0x144
 5682 0004 0200     		.2byte	0x2
 5683 0006 00000000 		.4byte	.Ldebug_info0
 5684 000a 04       		.byte	0x4
 5685 000b 00       		.byte	0
 5686 000c 0000     		.2byte	0
 5687 000e 0000     		.2byte	0
 5688 0010 00000000 		.4byte	.LFB34
 5689 0014 24000000 		.4byte	.LFE34-.LFB34
 5690 0018 00000000 		.4byte	.LFB35
 5691 001c 18000000 		.4byte	.LFE35-.LFB35
 5692 0020 00000000 		.4byte	.LFB36
 5693 0024 14000000 		.4byte	.LFE36-.LFB36
 5694 0028 00000000 		.4byte	.LFB37
 5695 002c 30000000 		.4byte	.LFE37-.LFB37
 5696 0030 00000000 		.4byte	.LFB42
 5697 0034 0C000000 		.4byte	.LFE42-.LFB42
 5698 0038 00000000 		.4byte	.LFB43
 5699 003c 0C000000 		.4byte	.LFE43-.LFB43
 5700 0040 00000000 		.4byte	.LFB44
 5701 0044 0C000000 		.4byte	.LFE44-.LFB44
 5702 0048 00000000 		.4byte	.LFB45
 5703 004c 0C000000 		.4byte	.LFE45-.LFB45
 5704 0050 00000000 		.4byte	.LFB46
 5705 0054 0C000000 		.4byte	.LFE46-.LFB46
 5706 0058 00000000 		.4byte	.LFB47
 5707 005c 0C000000 		.4byte	.LFE47-.LFB47
 5708 0060 00000000 		.4byte	.LFB48
 5709 0064 0C000000 		.4byte	.LFE48-.LFB48
 5710 0068 00000000 		.4byte	.LFB49
 5711 006c 0C000000 		.4byte	.LFE49-.LFB49
 5712 0070 00000000 		.4byte	.LFB50
 5713 0074 0C000000 		.4byte	.LFE50-.LFB50
 5714 0078 00000000 		.4byte	.LFB51
 5715 007c 0C000000 		.4byte	.LFE51-.LFB51
 5716 0080 00000000 		.4byte	.LFB52
 5717 0084 0C000000 		.4byte	.LFE52-.LFB52
 5718 0088 00000000 		.4byte	.LFB53
 5719 008c 0C000000 		.4byte	.LFE53-.LFB53
 5720 0090 00000000 		.4byte	.LFB54
 5721 0094 0C000000 		.4byte	.LFE54-.LFB54
 5722 0098 00000000 		.4byte	.LFB55
 5723 009c 0C000000 		.4byte	.LFE55-.LFB55
 5724 00a0 00000000 		.4byte	.LFB56
 5725 00a4 98000000 		.4byte	.LFE56-.LFB56
 5726 00a8 00000000 		.4byte	.LFB57
 5727 00ac 1C000000 		.4byte	.LFE57-.LFB57
 5728 00b0 00000000 		.4byte	.LFB58
 5729 00b4 1E000000 		.4byte	.LFE58-.LFB58
 5730 00b8 00000000 		.4byte	.LFB59
 5731 00bc 1C000000 		.4byte	.LFE59-.LFB59
 5732 00c0 00000000 		.4byte	.LFB60
 5733 00c4 1C000000 		.4byte	.LFE60-.LFB60
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 153


 5734 00c8 00000000 		.4byte	.LFB61
 5735 00cc 2C000000 		.4byte	.LFE61-.LFB61
 5736 00d0 00000000 		.4byte	.LFB62
 5737 00d4 E4000000 		.4byte	.LFE62-.LFB62
 5738 00d8 00000000 		.4byte	.LFB64
 5739 00dc 40000000 		.4byte	.LFE64-.LFB64
 5740 00e0 00000000 		.4byte	.LFB65
 5741 00e4 1C000000 		.4byte	.LFE65-.LFB65
 5742 00e8 00000000 		.4byte	.LFB66
 5743 00ec 0C000000 		.4byte	.LFE66-.LFB66
 5744 00f0 00000000 		.4byte	.LFB38
 5745 00f4 1C010000 		.4byte	.LFE38-.LFB38
 5746 00f8 00000000 		.4byte	.LFB39
 5747 00fc 10000000 		.4byte	.LFE39-.LFB39
 5748 0100 00000000 		.4byte	.LFB40
 5749 0104 24000000 		.4byte	.LFE40-.LFB40
 5750 0108 00000000 		.4byte	.LFB41
 5751 010c 24000000 		.4byte	.LFE41-.LFB41
 5752 0110 00000000 		.4byte	.LFB63
 5753 0114 7C000000 		.4byte	.LFE63-.LFB63
 5754 0118 00000000 		.4byte	.LFB67
 5755 011c 0C000000 		.4byte	.LFE67-.LFB67
 5756 0120 00000000 		.4byte	.LFB68
 5757 0124 0C000000 		.4byte	.LFE68-.LFB68
 5758 0128 00000000 		.4byte	.LFB69
 5759 012c 0C000000 		.4byte	.LFE69-.LFB69
 5760 0130 00000000 		.4byte	.LFB70
 5761 0134 0C000000 		.4byte	.LFE70-.LFB70
 5762 0138 00000000 		.4byte	.LFB71
 5763 013c 0C000000 		.4byte	.LFE71-.LFB71
 5764 0140 00000000 		.4byte	0
 5765 0144 00000000 		.4byte	0
 5766              		.section	.debug_ranges,"",%progbits
 5767              	.Ldebug_ranges0:
 5768 0000 00000000 		.4byte	.LFB34
 5769 0004 24000000 		.4byte	.LFE34
 5770 0008 00000000 		.4byte	.LFB35
 5771 000c 18000000 		.4byte	.LFE35
 5772 0010 00000000 		.4byte	.LFB36
 5773 0014 14000000 		.4byte	.LFE36
 5774 0018 00000000 		.4byte	.LFB37
 5775 001c 30000000 		.4byte	.LFE37
 5776 0020 00000000 		.4byte	.LFB42
 5777 0024 0C000000 		.4byte	.LFE42
 5778 0028 00000000 		.4byte	.LFB43
 5779 002c 0C000000 		.4byte	.LFE43
 5780 0030 00000000 		.4byte	.LFB44
 5781 0034 0C000000 		.4byte	.LFE44
 5782 0038 00000000 		.4byte	.LFB45
 5783 003c 0C000000 		.4byte	.LFE45
 5784 0040 00000000 		.4byte	.LFB46
 5785 0044 0C000000 		.4byte	.LFE46
 5786 0048 00000000 		.4byte	.LFB47
 5787 004c 0C000000 		.4byte	.LFE47
 5788 0050 00000000 		.4byte	.LFB48
 5789 0054 0C000000 		.4byte	.LFE48
 5790 0058 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 154


 5791 005c 0C000000 		.4byte	.LFE49
 5792 0060 00000000 		.4byte	.LFB50
 5793 0064 0C000000 		.4byte	.LFE50
 5794 0068 00000000 		.4byte	.LFB51
 5795 006c 0C000000 		.4byte	.LFE51
 5796 0070 00000000 		.4byte	.LFB52
 5797 0074 0C000000 		.4byte	.LFE52
 5798 0078 00000000 		.4byte	.LFB53
 5799 007c 0C000000 		.4byte	.LFE53
 5800 0080 00000000 		.4byte	.LFB54
 5801 0084 0C000000 		.4byte	.LFE54
 5802 0088 00000000 		.4byte	.LFB55
 5803 008c 0C000000 		.4byte	.LFE55
 5804 0090 00000000 		.4byte	.LFB56
 5805 0094 98000000 		.4byte	.LFE56
 5806 0098 00000000 		.4byte	.LFB57
 5807 009c 1C000000 		.4byte	.LFE57
 5808 00a0 00000000 		.4byte	.LFB58
 5809 00a4 1E000000 		.4byte	.LFE58
 5810 00a8 00000000 		.4byte	.LFB59
 5811 00ac 1C000000 		.4byte	.LFE59
 5812 00b0 00000000 		.4byte	.LFB60
 5813 00b4 1C000000 		.4byte	.LFE60
 5814 00b8 00000000 		.4byte	.LFB61
 5815 00bc 2C000000 		.4byte	.LFE61
 5816 00c0 00000000 		.4byte	.LFB62
 5817 00c4 E4000000 		.4byte	.LFE62
 5818 00c8 00000000 		.4byte	.LFB64
 5819 00cc 40000000 		.4byte	.LFE64
 5820 00d0 00000000 		.4byte	.LFB65
 5821 00d4 1C000000 		.4byte	.LFE65
 5822 00d8 00000000 		.4byte	.LFB66
 5823 00dc 0C000000 		.4byte	.LFE66
 5824 00e0 00000000 		.4byte	.LFB38
 5825 00e4 1C010000 		.4byte	.LFE38
 5826 00e8 00000000 		.4byte	.LFB39
 5827 00ec 10000000 		.4byte	.LFE39
 5828 00f0 00000000 		.4byte	.LFB40
 5829 00f4 24000000 		.4byte	.LFE40
 5830 00f8 00000000 		.4byte	.LFB41
 5831 00fc 24000000 		.4byte	.LFE41
 5832 0100 00000000 		.4byte	.LFB63
 5833 0104 7C000000 		.4byte	.LFE63
 5834 0108 00000000 		.4byte	.LFB67
 5835 010c 0C000000 		.4byte	.LFE67
 5836 0110 00000000 		.4byte	.LFB68
 5837 0114 0C000000 		.4byte	.LFE68
 5838 0118 00000000 		.4byte	.LFB69
 5839 011c 0C000000 		.4byte	.LFE69
 5840 0120 00000000 		.4byte	.LFB70
 5841 0124 0C000000 		.4byte	.LFE70
 5842 0128 00000000 		.4byte	.LFB71
 5843 012c 0C000000 		.4byte	.LFE71
 5844 0130 00000000 		.4byte	0
 5845 0134 00000000 		.4byte	0
 5846              		.section	.debug_line,"",%progbits
 5847              	.Ldebug_line0:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 155


 5848 0000 78040000 		.section	.debug_str,"MS",%progbits,1
 5848      02006C00 
 5848      00000201 
 5848      FB0E0D00 
 5848      01010101 
 5849              	.LASF130:
 5850 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5850      656E7365 
 5850      5F73656E 
 5850      736F7242 
 5850      6173656C 
 5851              	.LASF102:
 5852 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5852      656E7365 
 5852      5F494952 
 5852      3446696C 
 5852      74657200 
 5853              	.LASF77:
 5854 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 5854      656E7365 
 5854      5F646562 
 5854      6F756E63 
 5854      65436F75 
 5855              	.LASF32:
 5856 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 5856      53706565 
 5856      6454626C 
 5856      00
 5857              	.LASF133:
 5858 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5858      656E7365 
 5858      5F6C6F77 
 5858      42617365 
 5858      6C696E65 
 5859              	.LASF103:
 5860 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5860      656E7365 
 5860      5F557064 
 5860      61746542 
 5860      6173656C 
 5861              	.LASF35:
 5862 0095 6E756D62 		.ascii	"numberOfSensors\000"
 5862      65724F66 
 5862      53656E73 
 5862      6F727300 
 5863              	.LASF39:
 5864 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 5864      65744269 
 5864      7456616C 
 5864      756500
 5865              	.LASF84:
 5866 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 5866      656E7365 
 5866      5F446973 
 5866      61626C65 
 5866      57696467 
 5867              	.LASF109:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 156


 5868 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5868      656E7365 
 5868      5F557064 
 5868      61746545 
 5868      6E61626C 
 5869              	.LASF115:
 5870 00eb 706F7349 		.ascii	"posIndex\000"
 5870      6E646578 
 5870      00
 5871              	.LASF143:
 5872 00f4 43617053 		.ascii	"CapSense_config\000"
 5872      656E7365 
 5872      5F636F6E 
 5872      66696700 
 5873              	.LASF54:
 5874 0104 69735365 		.ascii	"isSensorEnabled\000"
 5874      6E736F72 
 5874      456E6162 
 5874      6C656400 
 5875              	.LASF80:
 5876 0114 6E756D4F 		.ascii	"numOfSensors\000"
 5876      6653656E 
 5876      736F7273 
 5876      00
 5877              	.LASF8:
 5878 0121 756E7369 		.ascii	"unsigned int\000"
 5878      676E6564 
 5878      20696E74 
 5878      00
 5879              	.LASF44:
 5880 012e 746F7461 		.ascii	"totalSensorsNum\000"
 5880      6C53656E 
 5880      736F7273 
 5880      4E756D00 
 5881              	.LASF95:
 5882 013e 706F734E 		.ascii	"posNext\000"
 5882      65787400 
 5883              	.LASF12:
 5884 0146 696E7431 		.ascii	"int16\000"
 5884      3600
 5885              	.LASF29:
 5886 014c 73616D70 		.ascii	"sampleMaxTbl\000"
 5886      6C654D61 
 5886      7854626C 
 5886      00
 5887              	.LASF53:
 5888 0159 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5888      656E7365 
 5888      5F496E69 
 5888      7469616C 
 5888      697A6545 
 5889              	.LASF125:
 5890 017d 43617053 		.ascii	"CapSense_posFiltersData\000"
 5890      656E7365 
 5890      5F706F73 
 5890      46696C74 
 5890      65727344 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 157


 5891              	.LASF27:
 5892 0195 7369676E 		.ascii	"signRegisterTbl\000"
 5892      52656769 
 5892      73746572 
 5892      54626C00 
 5893              	.LASF139:
 5894 01a5 43617053 		.ascii	"CapSense_debounce\000"
 5894      656E7365 
 5894      5F646562 
 5894      6F756E63 
 5894      6500
 5895              	.LASF50:
 5896 01b7 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5896      656E7365 
 5896      5F496E69 
 5896      7469616C 
 5896      697A6553 
 5897              	.LASF48:
 5898 01d9 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_40\000"
 5898      656E7365 
 5898      5F434F4E 
 5898      4649475F 
 5898      54595045 
 5899              	.LASF151:
 5900 01f7 43617053 		.ascii	"CapSense_IsBusy\000"
 5900      656E7365 
 5900      5F497342 
 5900      75737900 
 5901              	.LASF55:
 5902 0207 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5902      656E7365 
 5902      5F536574 
 5902      42617365 
 5902      6C696E65 
 5903              	.LASF34:
 5904 0220 72617744 		.ascii	"rawDataIndex\000"
 5904      61746149 
 5904      6E646578 
 5904      00
 5905              	.LASF43:
 5906 022d 746F7461 		.ascii	"totalWidgetsNum\000"
 5906      6C576964 
 5906      67657473 
 5906      4E756D00 
 5907              	.LASF59:
 5908 023d 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5908      656E7365 
 5908      5F536574 
 5908      44696666 
 5908      436F756E 
 5909              	.LASF131:
 5910 0257 43617053 		.ascii	"CapSense_sensorSignal\000"
 5910      656E7365 
 5910      5F73656E 
 5910      736F7253 
 5910      69676E61 
 5911              	.LASF140:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 158


 5912 026d 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5912      656E7365 
 5912      5F726177 
 5912      44617461 
 5912      496E6465 
 5913              	.LASF67:
 5914 0283 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5914      656E7365 
 5914      5F536574 
 5914      4E6F6973 
 5914      65546872 
 5915              	.LASF110:
 5916 029e 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5916      656E7365 
 5916      5F557064 
 5916      61746557 
 5916      69646765 
 5917              	.LASF138:
 5918 02bc 43617053 		.ascii	"CapSense_hysteresis\000"
 5918      656E7365 
 5918      5F687973 
 5918      74657265 
 5918      73697300 
 5919              	.LASF14:
 5920 02d0 666C6F61 		.ascii	"float\000"
 5920      7400
 5921              	.LASF13:
 5922 02d6 696E7433 		.ascii	"int32\000"
 5922      3200
 5923              	.LASF87:
 5924 02dc 636F756E 		.ascii	"count\000"
 5924      7400
 5925              	.LASF24:
 5926 02e2 7265736F 		.ascii	"resolutionsTbl\000"
 5926      6C757469 
 5926      6F6E7354 
 5926      626C00
 5927              	.LASF117:
 5928 02f1 706F7346 		.ascii	"posFiltersMask\000"
 5928      696C7465 
 5928      72734D61 
 5928      736B00
 5929              	.LASF63:
 5930 0300 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5930      656E7365 
 5930      5F476574 
 5930      4E6F6973 
 5930      65546872 
 5931              	.LASF26:
 5932 031b 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5932      696E6744 
 5932      69666665 
 5932      72656E63 
 5932      6554626C 
 5933              	.LASF7:
 5934 0330 6C6F6E67 		.ascii	"long long unsigned int\000"
 5934      206C6F6E 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 159


 5934      6720756E 
 5934      7369676E 
 5934      65642069 
 5935              	.LASF127:
 5936 0347 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5936      656E7365 
 5936      5F73656E 
 5936      736F7245 
 5936      6E61626C 
 5937              	.LASF147:
 5938 0361 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_40\000"
 5938      7572654E 
 5938      6F697365 
 5938      456E7665 
 5938      6C6F7065 
 5939              	.LASF62:
 5940 037f 77696467 		.ascii	"widget\000"
 5940      657400
 5941              	.LASF124:
 5942 0386 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5942      656E7365 
 5942      5F706F73 
 5942      46696C74 
 5942      6572734D 
 5943              	.LASF135:
 5944 039e 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5944      656E7365 
 5944      5F66696E 
 5944      67657254 
 5944      68726573 
 5945              	.LASF128:
 5946 03b7 43617053 		.ascii	"CapSense_widgetNumber\000"
 5946      656E7365 
 5946      5F776964 
 5946      6765744E 
 5946      756D6265 
 5947              	.LASF66:
 5948 03cd 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5948      656E7365 
 5948      5F536574 
 5948      46696E67 
 5948      65725468 
 5949              	.LASF122:
 5950 03e9 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5950      656E7365 
 5950      5F446973 
 5950      61626C65 
 5950      52617744 
 5951              	.LASF60:
 5952 0408 76616C75 		.ascii	"value\000"
 5952      6500
 5953              	.LASF64:
 5954 040e 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5954      656E7365 
 5954      5F476574 
 5954      46696E67 
 5954      65724879 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 160


 5955              	.LASF58:
 5956 042b 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5956      656E7365 
 5956      5F476574 
 5956      44696666 
 5956      436F756E 
 5957              	.LASF105:
 5958 0445 7369676E 		.ascii	"sign\000"
 5958      00
 5959              	.LASF86:
 5960 044a 6F666673 		.ascii	"offset\000"
 5960      657400
 5961              	.LASF25:
 5962 0451 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5962      65456E76 
 5962      656C6F70 
 5962      6554626C 
 5962      00
 5963              	.LASF104:
 5964 0462 63616C63 		.ascii	"calc\000"
 5964      00
 5965              	.LASF38:
 5966 0467 70747252 		.ascii	"ptrReadSensorRaw\000"
 5966      65616453 
 5966      656E736F 
 5966      72526177 
 5966      00
 5967              	.LASF76:
 5968 0478 68797374 		.ascii	"hysteresis\000"
 5968      65726573 
 5968      697300
 5969              	.LASF145:
 5970 0483 43617053 		.ascii	"CapSense_ScanSensor\000"
 5970      656E7365 
 5970      5F536361 
 5970      6E53656E 
 5970      736F7200 
 5971              	.LASF107:
 5972 0497 66696C74 		.ascii	"filteredRawData\000"
 5972      65726564 
 5972      52617744 
 5972      61746100 
 5973              	.LASF111:
 5974 04a7 73656E73 		.ascii	"sensorsPerWidget\000"
 5974      6F727350 
 5974      65725769 
 5974      64676574 
 5974      00
 5975              	.LASF82:
 5976 04b8 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5976      656E7365 
 5976      5F436865 
 5976      636B4973 
 5976      416E7957 
 5977              	.LASF141:
 5978 04d8 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5978      656E7365 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 161


 5978      5F6E756D 
 5978      6265724F 
 5978      6653656E 
 5979              	.LASF137:
 5980 04f1 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5980      656E7365 
 5980      5F6E6567 
 5980      61746976 
 5980      654E6F69 
 5981              	.LASF42:
 5982 0511 746F7461 		.ascii	"totalScanslotsNum\000"
 5982      6C536361 
 5982      6E736C6F 
 5982      74734E75 
 5982      6D00
 5983              	.LASF51:
 5984 0523 73656E73 		.ascii	"sensor\000"
 5984      6F7200
 5985              	.LASF45:
 5986 052a 73656E73 		.ascii	"sensetivitySeed\000"
 5986      65746976 
 5986      69747953 
 5986      65656400 
 5987              	.LASF83:
 5988 053a 43617053 		.ascii	"CapSense_EnableWidget\000"
 5988      656E7365 
 5988      5F456E61 
 5988      626C6557 
 5988      69646765 
 5989              	.LASF16:
 5990 0550 63686172 		.ascii	"char\000"
 5990      00
 5991              	.LASF65:
 5992 0555 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5992      656E7365 
 5992      5F476574 
 5992      4E656761 
 5992      74697665 
 5993              	.LASF33:
 5994 0578 70726573 		.ascii	"prescalerTable\000"
 5994      63616C65 
 5994      72546162 
 5994      6C6500
 5995              	.LASF10:
 5996 0587 75696E74 		.ascii	"uint16\000"
 5996      313600
 5997              	.LASF56:
 5998 058e 64617461 		.ascii	"data\000"
 5998      00
 5999              	.LASF18:
 6000 0593 69646163 		.ascii	"idac1LevelsTbl\000"
 6000      314C6576 
 6000      656C7354 
 6000      626C00
 6001              	.LASF92:
 6002 05a2 7265736F 		.ascii	"resolution\000"
 6002      6C757469 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 162


 6002      6F6E00
 6003              	.LASF79:
 6004 05ad 72617749 		.ascii	"rawIndex\000"
 6004      6E646578 
 6004      00
 6005              	.LASF154:
 6006 05b6 43617053 		.ascii	"CapSense_UpdateThresholds\000"
 6006      656E7365 
 6006      5F557064 
 6006      61746554 
 6006      68726573 
 6007              	.LASF96:
 6008 05d0 43617053 		.ascii	"CapSense_centroid\000"
 6008      656E7365 
 6008      5F63656E 
 6008      74726F69 
 6008      6400
 6009              	.LASF152:
 6010 05e2 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 6010      656E7365 
 6010      5F536361 
 6010      6E456E61 
 6010      626C6564 
 6011              	.LASF149:
 6012 05fe 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 6012      6E657261 
 6012      7465645F 
 6012      536F7572 
 6012      63655C50 
 6013              	.LASF6:
 6014 0627 6C6F6E67 		.ascii	"long long int\000"
 6014      206C6F6E 
 6014      6720696E 
 6014      7400
 6015              	.LASF118:
 6016 0635 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 6016      656E7365 
 6016      5F476574 
 6016      57696467 
 6016      65744E75 
 6017              	.LASF73:
 6018 064e 6465626F 		.ascii	"debounce\000"
 6018      756E6365 
 6018      00
 6019              	.LASF37:
 6020 0657 70747250 		.ascii	"ptrPreScan\000"
 6020      72655363 
 6020      616E00
 6021              	.LASF72:
 6022 0662 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 6022      656E7365 
 6022      5F436865 
 6022      636B4973 
 6022      53656E73 
 6023              	.LASF36:
 6024 067f 70747247 		.ascii	"ptrGetRaw\000"
 6024      65745261 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 163


 6024      7700
 6025              	.LASF108:
 6026 0689 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 6026      656E7365 
 6026      5F557064 
 6026      61746553 
 6026      656E736F 
 6027              	.LASF49:
 6028 06a7 43617053 		.ascii	"CapSense_BaseInit\000"
 6028      656E7365 
 6028      5F426173 
 6028      65496E69 
 6028      7400
 6029              	.LASF91:
 6030 06b9 43617053 		.ascii	"CapSense_CalcCentroid\000"
 6030      656E7365 
 6030      5F43616C 
 6030      6343656E 
 6030      74726F69 
 6031              	.LASF28:
 6032 06cf 73616D70 		.ascii	"sampleMinTbl\000"
 6032      6C654D69 
 6032      6E54626C 
 6032      00
 6033              	.LASF126:
 6034 06dc 43617053 		.ascii	"CapSense_sensorRaw\000"
 6034      656E7365 
 6034      5F73656E 
 6034      736F7252 
 6034      617700
 6035              	.LASF119:
 6036 06ef 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 6036      656E7365 
 6036      5F476574 
 6036      4C6F7742 
 6036      6173656C 
 6037              	.LASF69:
 6038 070c 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 6038      656E7365 
 6038      5F536574 
 6038      4E656761 
 6038      74697665 
 6039              	.LASF11:
 6040 072f 75696E74 		.ascii	"uint32\000"
 6040      333200
 6041              	.LASF116:
 6042 0736 66697273 		.ascii	"firstTimeIndex\000"
 6042      7454696D 
 6042      65496E64 
 6042      657800
 6043              	.LASF90:
 6044 0745 73746172 		.ascii	"startOfSlider\000"
 6044      744F6653 
 6044      6C696465 
 6044      7200
 6045              	.LASF68:
 6046 0753 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 164


 6046      656E7365 
 6046      5F536574 
 6046      46696E67 
 6046      65724879 
 6047              	.LASF61:
 6048 0770 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 6048      656E7365 
 6048      5F476574 
 6048      46696E67 
 6048      65725468 
 6049              	.LASF98:
 6050 078c 6E756D65 		.ascii	"numerator\000"
 6050      7261746F 
 6050      7200
 6051              	.LASF113:
 6052 0796 6C617374 		.ascii	"lastSensor\000"
 6052      53656E73 
 6052      6F7200
 6053              	.LASF46:
 6054 07a1 6866636C 		.ascii	"hfclkFreq_MHz\000"
 6054      6B467265 
 6054      715F4D48 
 6054      7A00
 6055              	.LASF94:
 6056 07af 706F7350 		.ascii	"posPrev\000"
 6056      72657600 
 6057              	.LASF23:
 6058 07b7 77696467 		.ascii	"widgetNubmersTbl\000"
 6058      65744E75 
 6058      626D6572 
 6058      7354626C 
 6058      00
 6059              	.LASF114:
 6060 07c8 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 6060      656E7365 
 6060      5F476574 
 6060      43656E74 
 6060      726F6964 
 6061              	.LASF19:
 6062 07e0 69646163 		.ascii	"idac2LevelsTbl\000"
 6062      324C6576 
 6062      656C7354 
 6062      626C00
 6063              	.LASF2:
 6064 07ef 73686F72 		.ascii	"short int\000"
 6064      7420696E 
 6064      7400
 6065              	.LASF4:
 6066 07f9 6C6F6E67 		.ascii	"long int\000"
 6066      20696E74 
 6066      00
 6067              	.LASF112:
 6068 0802 66697273 		.ascii	"firstSensor\000"
 6068      7453656E 
 6068      736F7200 
 6069              	.LASF89:
 6070 080e 74656D70 		.ascii	"temp\000"
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 165


 6070      00
 6071              	.LASF85:
 6072 0813 43617053 		.ascii	"CapSense_FindMaximum\000"
 6072      656E7365 
 6072      5F46696E 
 6072      644D6178 
 6072      696D756D 
 6073              	.LASF148:
 6074 0828 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6074      4320342E 
 6074      392E3320 
 6074      32303135 
 6074      30333033 
 6075 085b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 6075      20726576 
 6075      6973696F 
 6075      6E203232 
 6075      31323230 
 6076 088e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6076      66756E63 
 6076      74696F6E 
 6076      2D736563 
 6076      74696F6E 
 6077              	.LASF121:
 6078 08b6 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 6078      656E7365 
 6078      5F456E61 
 6078      626C6552 
 6078      61774461 
 6079              	.LASF134:
 6080 08d4 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 6080      656E7365 
 6080      5F6C6F77 
 6080      42617365 
 6080      6C696E65 
 6081              	.LASF99:
 6082 08ee 64656E6F 		.ascii	"denominator\000"
 6082      6D696E61 
 6082      746F7200 
 6083              	.LASF31:
 6084 08fa 6B56616C 		.ascii	"kValueTbl\000"
 6084      75655462 
 6084      6C00
 6085              	.LASF129:
 6086 0904 43617053 		.ascii	"CapSense_sensorBaseline\000"
 6086      656E7365 
 6086      5F73656E 
 6086      736F7242 
 6086      6173656C 
 6087              	.LASF88:
 6088 091c 6D617869 		.ascii	"maximum\000"
 6088      6D756D00 
 6089              	.LASF17:
 6090 0924 73697A65 		.ascii	"sizetype\000"
 6090      74797065 
 6090      00
 6091              	.LASF5:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 166


 6092 092d 6C6F6E67 		.ascii	"long unsigned int\000"
 6092      20756E73 
 6092      69676E65 
 6092      6420696E 
 6092      7400
 6093              	.LASF47:
 6094 093f 706F696E 		.ascii	"pointers\000"
 6094      74657273 
 6094      00
 6095              	.LASF150:
 6096 0948 453A5C37 		.ascii	"E:\\744\\psoc\\BuzzerControlviaCapSense\\bzz.cydsn\000"
 6096      34345C70 
 6096      736F635C 
 6096      42757A7A 
 6096      6572436F 
 6097              	.LASF93:
 6098 0977 6E6F6973 		.ascii	"noiseThreshold\000"
 6098      65546872 
 6098      6573686F 
 6098      6C6400
 6099              	.LASF30:
 6100 0986 70726576 		.ascii	"previousSampleTbl\000"
 6100      696F7573 
 6100      53616D70 
 6100      6C655462 
 6100      6C00
 6101              	.LASF70:
 6102 0998 43617053 		.ascii	"CapSense_SetDebounce\000"
 6102      656E7365 
 6102      5F536574 
 6102      4465626F 
 6102      756E6365 
 6103              	.LASF75:
 6104 09ad 66696E67 		.ascii	"fingerThreshold\000"
 6104      65725468 
 6104      72657368 
 6104      6F6C6400 
 6105              	.LASF21:
 6106 09bd 63686172 		.ascii	"chargeDivTbl\000"
 6106      67654469 
 6106      7654626C 
 6106      00
 6107              	.LASF1:
 6108 09ca 756E7369 		.ascii	"unsigned char\000"
 6108      676E6564 
 6108      20636861 
 6108      7200
 6109              	.LASF136:
 6110 09d8 43617053 		.ascii	"CapSense_noiseThreshold\000"
 6110      656E7365 
 6110      5F6E6F69 
 6110      73655468 
 6110      72657368 
 6111              	.LASF74:
 6112 09f0 6465626F 		.ascii	"debounceIndex\000"
 6112      756E6365 
 6112      496E6465 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 167


 6112      7800
 6113              	.LASF52:
 6114 09fe 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 6114      656E7365 
 6114      5F496E69 
 6114      7469616C 
 6114      697A6541 
 6115              	.LASF57:
 6116 0a1e 43617053 		.ascii	"CapSense_GetBaselineData\000"
 6116      656E7365 
 6116      5F476574 
 6116      42617365 
 6116      6C696E65 
 6117              	.LASF71:
 6118 0a37 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 6118      656E7365 
 6118      5F536574 
 6118      4C6F7742 
 6118      6173656C 
 6119              	.LASF20:
 6120 0a54 73656E73 		.ascii	"sensetivityTbl\000"
 6120      65746976 
 6120      69747954 
 6120      626C00
 6121              	.LASF146:
 6122 0a63 43617053 		.ascii	"CapSense_SetBitValue\000"
 6122      656E7365 
 6122      5F536574 
 6122      42697456 
 6122      616C7565 
 6123              	.LASF123:
 6124 0a78 43617053 		.ascii	"CapSense_centroidMult\000"
 6124      656E7365 
 6124      5F63656E 
 6124      74726F69 
 6124      644D756C 
 6125              	.LASF153:
 6126 0a8e 43617053 		.ascii	"CapSense_GetBitValue\000"
 6126      656E7365 
 6126      5F476574 
 6126      42697456 
 6126      616C7565 
 6127              	.LASF81:
 6128 0aa3 73746174 		.ascii	"state\000"
 6128      6500
 6129              	.LASF144:
 6130 0aa9 43617053 		.ascii	"CapSense_enableRawFilters\000"
 6130      656E7365 
 6130      5F656E61 
 6130      626C6552 
 6130      61774669 
 6131              	.LASF22:
 6132 0ac3 6D6F6444 		.ascii	"modDivTbl\000"
 6132      69765462 
 6132      6C00
 6133              	.LASF0:
 6134 0acd 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 168


 6134      65642063 
 6134      68617200 
 6135              	.LASF3:
 6136 0ad9 73686F72 		.ascii	"short unsigned int\000"
 6136      7420756E 
 6136      7369676E 
 6136      65642069 
 6136      6E7400
 6137              	.LASF100:
 6138 0aec 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 6138      656E7365 
 6138      5F476574 
 6138      52616469 
 6138      616C4365 
 6139              	.LASF40:
 6140 0b0a 70747253 		.ascii	"ptrSetBitValue\000"
 6140      65744269 
 6140      7456616C 
 6140      756500
 6141              	.LASF101:
 6142 0b19 43617053 		.ascii	"CapSense_MedianFilter\000"
 6142      656E7365 
 6142      5F4D6564 
 6142      69616E46 
 6142      696C7465 
 6143              	.LASF106:
 6144 0b2f 74656D70 		.ascii	"tempRaw\000"
 6144      52617700 
 6145              	.LASF120:
 6146 0b37 43617053 		.ascii	"CapSense_GetDebounce\000"
 6146      656E7365 
 6146      5F476574 
 6146      4465626F 
 6146      756E6365 
 6147              	.LASF78:
 6148 0b4c 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 6148      656E7365 
 6148      5F436865 
 6148      636B4973 
 6148      57696467 
 6149              	.LASF9:
 6150 0b69 75696E74 		.ascii	"uint8\000"
 6150      3800
 6151              	.LASF15:
 6152 0b6f 646F7562 		.ascii	"double\000"
 6152      6C6500
 6153              	.LASF41:
 6154 0b76 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_40\000"
 6154      656E7365 
 6154      5F434F4E 
 6154      4649475F 
 6154      54595045 
 6155              	.LASF142:
 6156 0b9d 43617053 		.ascii	"CapSense_rawFilterData1\000"
 6156      656E7365 
 6156      5F726177 
 6156      46696C74 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccgPKuRg.s 			page 169


 6156      65724461 
 6157              	.LASF97:
 6158 0bb5 706F7369 		.ascii	"position\000"
 6158      74696F6E 
 6158      00
 6159              	.LASF132:
 6160 0bbe 43617053 		.ascii	"CapSense_sensorOnMask\000"
 6160      656E7365 
 6160      5F73656E 
 6160      736F724F 
 6160      6E4D6173 
 6161              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
