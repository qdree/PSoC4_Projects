ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"LCD_LCDPort.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LCD_LCDPort_SetDriveMode,"ax",%progbits
  18              		.align	2
  19              		.global	LCD_LCDPort_SetDriveMode
  20              		.code	16
  21              		.thumb_func
  22              		.type	LCD_LCDPort_SetDriveMode, %function
  23              	LCD_LCDPort_SetDriveMode:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\LCD_LCDPort.c"
   1:.\Generated_Source\PSoC4/LCD_LCDPort.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * File Name: LCD_LCDPort.c  
   3:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
   5:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * Description:
   6:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  This file contains API to enable firmware control of a Pins component.
   7:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
   8:.\Generated_Source\PSoC4/LCD_LCDPort.c **** ********************************************************************************
   9:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * the software package with which this file was provided.
  13:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *******************************************************************************/
  14:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
  15:.\Generated_Source\PSoC4/LCD_LCDPort.c **** #include "cytypes.h"
  16:.\Generated_Source\PSoC4/LCD_LCDPort.c **** #include "LCD_LCDPort.h"
  17:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
  18:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
  19:.\Generated_Source\PSoC4/LCD_LCDPort.c **** #if defined(LCD_LCDPort__PC)
  20:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     #define LCD_LCDPort_SetP4PinDriveMode(shift, mode)  \
  21:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     do { \
  22:.\Generated_Source\PSoC4/LCD_LCDPort.c ****         LCD_LCDPort_PC =   (LCD_LCDPort_PC & \
  23:.\Generated_Source\PSoC4/LCD_LCDPort.c ****                                 (uint32)(~(uint32)(LCD_LCDPort_DRIVE_MODE_IND_MASK << \
  24:.\Generated_Source\PSoC4/LCD_LCDPort.c ****                                 (LCD_LCDPort_DRIVE_MODE_BITS * (shift))))) | \
  25:.\Generated_Source\PSoC4/LCD_LCDPort.c ****                                 (uint32)((uint32)(mode) << \
  26:.\Generated_Source\PSoC4/LCD_LCDPort.c ****                                 (LCD_LCDPort_DRIVE_MODE_BITS * (shift))); \
  27:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     } while (0)
  28:.\Generated_Source\PSoC4/LCD_LCDPort.c **** #else
  29:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     #if (CY_PSOC4_4200L)
  30:.\Generated_Source\PSoC4/LCD_LCDPort.c ****         #define LCD_LCDPort_SetP4PinDriveMode(shift, mode)  \
  31:.\Generated_Source\PSoC4/LCD_LCDPort.c ****         do { \
  32:.\Generated_Source\PSoC4/LCD_LCDPort.c ****             LCD_LCDPort_USBIO_CTRL_REG = (LCD_LCDPort_USBIO_CTRL_REG & \
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 2


  33:.\Generated_Source\PSoC4/LCD_LCDPort.c ****                                     (uint32)(~(uint32)(LCD_LCDPort_DRIVE_MODE_IND_MASK << \
  34:.\Generated_Source\PSoC4/LCD_LCDPort.c ****                                     (LCD_LCDPort_DRIVE_MODE_BITS * (shift))))) | \
  35:.\Generated_Source\PSoC4/LCD_LCDPort.c ****                                     (uint32)((uint32)(mode) << \
  36:.\Generated_Source\PSoC4/LCD_LCDPort.c ****                                     (LCD_LCDPort_DRIVE_MODE_BITS * (shift))); \
  37:.\Generated_Source\PSoC4/LCD_LCDPort.c ****         } while (0)
  38:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     #endif
  39:.\Generated_Source\PSoC4/LCD_LCDPort.c **** #endif
  40:.\Generated_Source\PSoC4/LCD_LCDPort.c ****   
  41:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
  42:.\Generated_Source\PSoC4/LCD_LCDPort.c **** #if defined(LCD_LCDPort__PC) || (CY_PSOC4_4200L) 
  43:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     /*******************************************************************************
  44:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     * Function Name: LCD_LCDPort_SetDriveMode
  45:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     ****************************************************************************//**
  46:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *
  47:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     * 
  49:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *
  52:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     * parameter for more information.
  54:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *
  55:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     * \param mode
  56:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *  \ref driveMode.
  58:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *
  59:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     * \return
  60:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *  None
  61:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *
  62:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     * \sideeffect
  63:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *
  69:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     * \funcusage
  70:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *  \snippet LCD_LCDPort_SUT.c usage_LCD_LCDPort_SetDriveMode
  71:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     *******************************************************************************/
  72:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     void LCD_LCDPort_SetDriveMode(uint8 mode)
  73:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     {
  26              		.loc 1 73 0
  27              		.cfi_startproc
  28              	.LVL0:
  74:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 		LCD_LCDPort_SetP4PinDriveMode(LCD_LCDPort__0__SHIFT, mode);
  29              		.loc 1 74 0
  30 0000 154B     		ldr	r3, .L2
  31 0002 1A68     		ldr	r2, [r3]
  32 0004 0721     		mov	r1, #7
  33 0006 8A43     		bic	r2, r1
  34 0008 0243     		orr	r2, r0
  35 000a 1A60     		str	r2, [r3]
  75:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 		LCD_LCDPort_SetP4PinDriveMode(LCD_LCDPort__1__SHIFT, mode);
  36              		.loc 1 75 0
  37 000c 1A68     		ldr	r2, [r3]
  38 000e 3131     		add	r1, r1, #49
  39 0010 8A43     		bic	r2, r1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 3


  40 0012 C100     		lsl	r1, r0, #3
  41 0014 0A43     		orr	r2, r1
  42 0016 1A60     		str	r2, [r3]
  76:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 		LCD_LCDPort_SetP4PinDriveMode(LCD_LCDPort__2__SHIFT, mode);
  43              		.loc 1 76 0
  44 0018 1968     		ldr	r1, [r3]
  45 001a 104A     		ldr	r2, .L2+4
  46 001c 0A40     		and	r2, r1
  47 001e 8101     		lsl	r1, r0, #6
  48 0020 0A43     		orr	r2, r1
  49 0022 1A60     		str	r2, [r3]
  77:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 		LCD_LCDPort_SetP4PinDriveMode(LCD_LCDPort__3__SHIFT, mode);
  50              		.loc 1 77 0
  51 0024 1968     		ldr	r1, [r3]
  52 0026 0E4A     		ldr	r2, .L2+8
  53 0028 0A40     		and	r2, r1
  54 002a 4102     		lsl	r1, r0, #9
  55 002c 0A43     		orr	r2, r1
  56 002e 1A60     		str	r2, [r3]
  78:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 		LCD_LCDPort_SetP4PinDriveMode(LCD_LCDPort__4__SHIFT, mode);
  57              		.loc 1 78 0
  58 0030 1968     		ldr	r1, [r3]
  59 0032 0C4A     		ldr	r2, .L2+12
  60 0034 0A40     		and	r2, r1
  61 0036 0103     		lsl	r1, r0, #12
  62 0038 0A43     		orr	r2, r1
  63 003a 1A60     		str	r2, [r3]
  79:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 		LCD_LCDPort_SetP4PinDriveMode(LCD_LCDPort__5__SHIFT, mode);
  64              		.loc 1 79 0
  65 003c 1968     		ldr	r1, [r3]
  66 003e 0A4A     		ldr	r2, .L2+16
  67 0040 0A40     		and	r2, r1
  68 0042 C103     		lsl	r1, r0, #15
  69 0044 0A43     		orr	r2, r1
  70 0046 1A60     		str	r2, [r3]
  80:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 		LCD_LCDPort_SetP4PinDriveMode(LCD_LCDPort__6__SHIFT, mode);
  71              		.loc 1 80 0
  72 0048 1968     		ldr	r1, [r3]
  73 004a 084A     		ldr	r2, .L2+20
  74 004c 0A40     		and	r2, r1
  75 004e 8004     		lsl	r0, r0, #18
  76              	.LVL1:
  77 0050 1043     		orr	r0, r2
  78 0052 1860     		str	r0, [r3]
  81:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     }
  79              		.loc 1 81 0
  80              		@ sp needed
  81 0054 7047     		bx	lr
  82              	.L3:
  83 0056 C046     		.align	2
  84              	.L2:
  85 0058 08020440 		.word	1074004488
  86 005c 3FFEFFFF 		.word	-449
  87 0060 FFF1FFFF 		.word	-3585
  88 0064 FF8FFFFF 		.word	-28673
  89 0068 FF7FFCFF 		.word	-229377
  90 006c FFFFE3FF 		.word	-1835009
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 4


  91              		.cfi_endproc
  92              	.LFE0:
  93              		.size	LCD_LCDPort_SetDriveMode, .-LCD_LCDPort_SetDriveMode
  94              		.section	.text.LCD_LCDPort_Write,"ax",%progbits
  95              		.align	2
  96              		.global	LCD_LCDPort_Write
  97              		.code	16
  98              		.thumb_func
  99              		.type	LCD_LCDPort_Write, %function
 100              	LCD_LCDPort_Write:
 101              	.LFB1:
  82:.\Generated_Source\PSoC4/LCD_LCDPort.c **** #endif
  83:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
  84:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
  85:.\Generated_Source\PSoC4/LCD_LCDPort.c **** /*******************************************************************************
  86:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * Function Name: LCD_LCDPort_Write
  87:.\Generated_Source\PSoC4/LCD_LCDPort.c **** ****************************************************************************//**
  88:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
  89:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \brief Writes the value to the physical port (data output register), masking
  90:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  and shifting the bits appropriately. 
  91:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
  92:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * The data output register controls the signal applied to the physical pin in 
  93:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * conjunction with the drive mode parameter. This function avoids changing 
  94:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * other bits in the port by using the appropriate method (read-modify-write or
  95:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * bit banding).
  96:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
  97:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  98:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * as it is driven by the hardware signal attached to it.
  99:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 100:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \param value
 101:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  Value to write to the component instance.
 102:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 103:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \return 
 104:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  None 
 105:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 106:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \sideeffect
 107:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 108:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 109:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  interrupts this function and performs writes to the Pins component data 
 110:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 111:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 112:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  this function.
 113:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 114:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \funcusage
 115:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  \snippet LCD_LCDPort_SUT.c usage_LCD_LCDPort_Write
 116:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *******************************************************************************/
 117:.\Generated_Source\PSoC4/LCD_LCDPort.c **** void LCD_LCDPort_Write(uint8 value)
 118:.\Generated_Source\PSoC4/LCD_LCDPort.c **** {
 102              		.loc 1 118 0
 103              		.cfi_startproc
 104              	.LVL2:
 105 0000 031C     		mov	r3, r0
 119:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     uint8 drVal = (uint8)(LCD_LCDPort_DR & (uint8)(~LCD_LCDPort_MASK));
 106              		.loc 1 119 0
 107 0002 0449     		ldr	r1, .L5
 108 0004 0868     		ldr	r0, [r1]
 109              	.LVL3:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 5


 110 0006 8022     		mov	r2, #128
 111 0008 0240     		and	r2, r0
 112              	.LVL4:
 120:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     drVal = (drVal | ((uint8)(value << LCD_LCDPort_SHIFT) & LCD_LCDPort_MASK));
 113              		.loc 1 120 0
 114 000a 7F20     		mov	r0, #127
 115 000c 1840     		and	r0, r3
 116 000e 1043     		orr	r0, r2
 117              	.LVL5:
 121:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     LCD_LCDPort_DR = (uint32)drVal;
 118              		.loc 1 121 0
 119 0010 0860     		str	r0, [r1]
 122:.\Generated_Source\PSoC4/LCD_LCDPort.c **** }
 120              		.loc 1 122 0
 121              		@ sp needed
 122 0012 7047     		bx	lr
 123              	.L6:
 124              		.align	2
 125              	.L5:
 126 0014 00020440 		.word	1074004480
 127              		.cfi_endproc
 128              	.LFE1:
 129              		.size	LCD_LCDPort_Write, .-LCD_LCDPort_Write
 130              		.section	.text.LCD_LCDPort_Read,"ax",%progbits
 131              		.align	2
 132              		.global	LCD_LCDPort_Read
 133              		.code	16
 134              		.thumb_func
 135              		.type	LCD_LCDPort_Read, %function
 136              	LCD_LCDPort_Read:
 137              	.LFB2:
 123:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
 124:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
 125:.\Generated_Source\PSoC4/LCD_LCDPort.c **** /*******************************************************************************
 126:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * Function Name: LCD_LCDPort_Read
 127:.\Generated_Source\PSoC4/LCD_LCDPort.c **** ****************************************************************************//**
 128:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 129:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \brief Reads the associated physical port (pin status register) and masks 
 130:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  the required bits according to the width and bit position of the component
 131:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  instance. 
 132:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 133:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * The pin's status register returns the current logic level present on the 
 134:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * physical pin.
 135:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 136:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \return 
 137:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  The current value for the pins in the component as a right justified number.
 138:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 139:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \funcusage
 140:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  \snippet LCD_LCDPort_SUT.c usage_LCD_LCDPort_Read  
 141:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/LCD_LCDPort.c **** uint8 LCD_LCDPort_Read(void)
 143:.\Generated_Source\PSoC4/LCD_LCDPort.c **** {
 138              		.loc 1 143 0
 139              		.cfi_startproc
 144:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     return (uint8)((LCD_LCDPort_PS & LCD_LCDPort_MASK) >> LCD_LCDPort_SHIFT);
 140              		.loc 1 144 0
 141 0000 024B     		ldr	r3, .L8
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 6


 142 0002 1868     		ldr	r0, [r3]
 143 0004 7F23     		mov	r3, #127
 144 0006 1840     		and	r0, r3
 145:.\Generated_Source\PSoC4/LCD_LCDPort.c **** }
 145              		.loc 1 145 0
 146              		@ sp needed
 147 0008 7047     		bx	lr
 148              	.L9:
 149 000a C046     		.align	2
 150              	.L8:
 151 000c 04020440 		.word	1074004484
 152              		.cfi_endproc
 153              	.LFE2:
 154              		.size	LCD_LCDPort_Read, .-LCD_LCDPort_Read
 155              		.section	.text.LCD_LCDPort_ReadDataReg,"ax",%progbits
 156              		.align	2
 157              		.global	LCD_LCDPort_ReadDataReg
 158              		.code	16
 159              		.thumb_func
 160              		.type	LCD_LCDPort_ReadDataReg, %function
 161              	LCD_LCDPort_ReadDataReg:
 162              	.LFB3:
 146:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
 147:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
 148:.\Generated_Source\PSoC4/LCD_LCDPort.c **** /*******************************************************************************
 149:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * Function Name: LCD_LCDPort_ReadDataReg
 150:.\Generated_Source\PSoC4/LCD_LCDPort.c **** ****************************************************************************//**
 151:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 152:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \brief Reads the associated physical port's data output register and masks 
 153:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  the correct bits according to the width and bit position of the component 
 154:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  instance. 
 155:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 156:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * The data output register controls the signal applied to the physical pin in 
 157:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * conjunction with the drive mode parameter. This is not the same as the 
 158:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * preferred LCD_LCDPort_Read() API because the 
 159:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * LCD_LCDPort_ReadDataReg() reads the data register instead of the status 
 160:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * register. For output pins this is a useful function to determine the value 
 161:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * just written to the pin.
 162:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 163:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \return 
 164:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  The current value of the data register masked and shifted into a right 
 165:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  justified number for the component instance.
 166:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 167:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \funcusage
 168:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  \snippet LCD_LCDPort_SUT.c usage_LCD_LCDPort_ReadDataReg 
 169:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *******************************************************************************/
 170:.\Generated_Source\PSoC4/LCD_LCDPort.c **** uint8 LCD_LCDPort_ReadDataReg(void)
 171:.\Generated_Source\PSoC4/LCD_LCDPort.c **** {
 163              		.loc 1 171 0
 164              		.cfi_startproc
 172:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     return (uint8)((LCD_LCDPort_DR & LCD_LCDPort_MASK) >> LCD_LCDPort_SHIFT);
 165              		.loc 1 172 0
 166 0000 024B     		ldr	r3, .L11
 167 0002 1868     		ldr	r0, [r3]
 168 0004 7F23     		mov	r3, #127
 169 0006 1840     		and	r0, r3
 173:.\Generated_Source\PSoC4/LCD_LCDPort.c **** }
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 7


 170              		.loc 1 173 0
 171              		@ sp needed
 172 0008 7047     		bx	lr
 173              	.L12:
 174 000a C046     		.align	2
 175              	.L11:
 176 000c 00020440 		.word	1074004480
 177              		.cfi_endproc
 178              	.LFE3:
 179              		.size	LCD_LCDPort_ReadDataReg, .-LCD_LCDPort_ReadDataReg
 180              		.section	.text.LCD_LCDPort_SetInterruptMode,"ax",%progbits
 181              		.align	2
 182              		.global	LCD_LCDPort_SetInterruptMode
 183              		.code	16
 184              		.thumb_func
 185              		.type	LCD_LCDPort_SetInterruptMode, %function
 186              	LCD_LCDPort_SetInterruptMode:
 187              	.LFB4:
 174:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
 175:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
 176:.\Generated_Source\PSoC4/LCD_LCDPort.c **** /*******************************************************************************
 177:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * Function Name: LCD_LCDPort_SetInterruptMode
 178:.\Generated_Source\PSoC4/LCD_LCDPort.c **** ****************************************************************************//**
 179:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 180:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \brief Configures the interrupt mode for each of the Pins component's
 181:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 182:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  specified in the Pins component.
 183:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 184:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 185:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  interrupt may trigger it.
 186:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 187:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \param position
 188:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 189:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 190:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  component. Or you may use LCD_LCDPort_INTR_ALL to configure the
 191:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  interrupt mode of all the pins in the Pins component.       
 192:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  - LCD_LCDPort_0_INTR       (First pin in the list)
 193:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  - LCD_LCDPort_1_INTR       (Second pin in the list)
 194:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  - ...
 195:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  - LCD_LCDPort_INTR_ALL     (All pins in Pins component)
 196:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 197:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \param mode
 198:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 199:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  \ref intrMode.
 200:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 201:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \return 
 202:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  None
 203:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  
 204:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \sideeffect
 205:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  It is recommended that the interrupt be disabled before calling this 
 206:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 207:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 208:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  port.
 209:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 210:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \funcusage
 211:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  \snippet LCD_LCDPort_SUT.c usage_LCD_LCDPort_SetInterruptMode
 212:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *******************************************************************************/
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 8


 213:.\Generated_Source\PSoC4/LCD_LCDPort.c **** void LCD_LCDPort_SetInterruptMode(uint16 position, uint16 mode)
 214:.\Generated_Source\PSoC4/LCD_LCDPort.c **** {
 188              		.loc 1 214 0
 189              		.cfi_startproc
 190              	.LVL6:
 215:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     uint32 intrCfg;
 216:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     
 217:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     intrCfg =  LCD_LCDPort_INTCFG & (uint32)(~(uint32)position);
 191              		.loc 1 217 0
 192 0000 034A     		ldr	r2, .L14
 193 0002 1368     		ldr	r3, [r2]
 194 0004 8343     		bic	r3, r0
 195              	.LVL7:
 218:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     LCD_LCDPort_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 196              		.loc 1 218 0
 197 0006 0140     		and	r1, r0
 198              	.LVL8:
 199 0008 1943     		orr	r1, r3
 200 000a 1160     		str	r1, [r2]
 219:.\Generated_Source\PSoC4/LCD_LCDPort.c **** }
 201              		.loc 1 219 0
 202              		@ sp needed
 203 000c 7047     		bx	lr
 204              	.L15:
 205 000e C046     		.align	2
 206              	.L14:
 207 0010 0C020440 		.word	1074004492
 208              		.cfi_endproc
 209              	.LFE4:
 210              		.size	LCD_LCDPort_SetInterruptMode, .-LCD_LCDPort_SetInterruptMode
 211              		.section	.text.LCD_LCDPort_ClearInterrupt,"ax",%progbits
 212              		.align	2
 213              		.global	LCD_LCDPort_ClearInterrupt
 214              		.code	16
 215              		.thumb_func
 216              		.type	LCD_LCDPort_ClearInterrupt, %function
 217              	LCD_LCDPort_ClearInterrupt:
 218              	.LFB5:
 220:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
 221:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 
 222:.\Generated_Source\PSoC4/LCD_LCDPort.c **** /*******************************************************************************
 223:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * Function Name: LCD_LCDPort_ClearInterrupt
 224:.\Generated_Source\PSoC4/LCD_LCDPort.c **** ****************************************************************************//**
 225:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 226:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \brief Clears any active interrupts attached with the component and returns 
 227:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  the value of the interrupt status register allowing determination of which
 228:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  pins generated an interrupt event.
 229:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
 230:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \return 
 231:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 232:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 233:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 234:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  
 235:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \sideeffect
 236:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  Clears all bits of the physical port's interrupt status register, not just
 237:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  those associated with the Pins component.
 238:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 9


 239:.\Generated_Source\PSoC4/LCD_LCDPort.c **** * \funcusage
 240:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *  \snippet LCD_LCDPort_SUT.c usage_LCD_LCDPort_ClearInterrupt
 241:.\Generated_Source\PSoC4/LCD_LCDPort.c **** *******************************************************************************/
 242:.\Generated_Source\PSoC4/LCD_LCDPort.c **** uint8 LCD_LCDPort_ClearInterrupt(void)
 243:.\Generated_Source\PSoC4/LCD_LCDPort.c **** {
 219              		.loc 1 243 0
 220              		.cfi_startproc
 244:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 	uint8 maskedStatus = (uint8)(LCD_LCDPort_INTSTAT & LCD_LCDPort_MASK);
 221              		.loc 1 244 0
 222 0000 024A     		ldr	r2, .L17
 223 0002 1068     		ldr	r0, [r2]
 224 0004 7F23     		mov	r3, #127
 225 0006 1840     		and	r0, r3
 226              	.LVL9:
 245:.\Generated_Source\PSoC4/LCD_LCDPort.c **** 	LCD_LCDPort_INTSTAT = maskedStatus;
 227              		.loc 1 245 0
 228 0008 1060     		str	r0, [r2]
 246:.\Generated_Source\PSoC4/LCD_LCDPort.c ****     return maskedStatus >> LCD_LCDPort_SHIFT;
 247:.\Generated_Source\PSoC4/LCD_LCDPort.c **** }
 229              		.loc 1 247 0
 230              		@ sp needed
 231 000a 7047     		bx	lr
 232              	.L18:
 233              		.align	2
 234              	.L17:
 235 000c 10020440 		.word	1074004496
 236              		.cfi_endproc
 237              	.LFE5:
 238              		.size	LCD_LCDPort_ClearInterrupt, .-LCD_LCDPort_ClearInterrupt
 239              		.text
 240              	.Letext0:
 241              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 242              		.section	.debug_info,"",%progbits
 243              	.Ldebug_info0:
 244 0000 97010000 		.4byte	0x197
 245 0004 0400     		.2byte	0x4
 246 0006 00000000 		.4byte	.Ldebug_abbrev0
 247 000a 04       		.byte	0x4
 248 000b 01       		.uleb128 0x1
 249 000c 5C010000 		.4byte	.LASF28
 250 0010 01       		.byte	0x1
 251 0011 F9000000 		.4byte	.LASF29
 252 0015 20020000 		.4byte	.LASF30
 253 0019 00000000 		.4byte	.Ldebug_ranges0+0
 254 001d 00000000 		.4byte	0
 255 0021 00000000 		.4byte	.Ldebug_line0
 256 0025 02       		.uleb128 0x2
 257 0026 01       		.byte	0x1
 258 0027 06       		.byte	0x6
 259 0028 14020000 		.4byte	.LASF0
 260 002c 02       		.uleb128 0x2
 261 002d 01       		.byte	0x1
 262 002e 08       		.byte	0x8
 263 002f 74000000 		.4byte	.LASF1
 264 0033 02       		.uleb128 0x2
 265 0034 02       		.byte	0x2
 266 0035 05       		.byte	0x5
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 10


 267 0036 EA010000 		.4byte	.LASF2
 268 003a 02       		.uleb128 0x2
 269 003b 02       		.byte	0x2
 270 003c 07       		.byte	0x7
 271 003d 9A000000 		.4byte	.LASF3
 272 0041 02       		.uleb128 0x2
 273 0042 04       		.byte	0x4
 274 0043 05       		.byte	0x5
 275 0044 0B020000 		.4byte	.LASF4
 276 0048 02       		.uleb128 0x2
 277 0049 04       		.byte	0x4
 278 004a 07       		.byte	0x7
 279 004b 88000000 		.4byte	.LASF5
 280 004f 02       		.uleb128 0x2
 281 0050 08       		.byte	0x8
 282 0051 05       		.byte	0x5
 283 0052 3C010000 		.4byte	.LASF6
 284 0056 02       		.uleb128 0x2
 285 0057 08       		.byte	0x8
 286 0058 07       		.byte	0x7
 287 0059 20010000 		.4byte	.LASF7
 288 005d 03       		.uleb128 0x3
 289 005e 04       		.byte	0x4
 290 005f 05       		.byte	0x5
 291 0060 696E7400 		.ascii	"int\000"
 292 0064 02       		.uleb128 0x2
 293 0065 04       		.byte	0x4
 294 0066 07       		.byte	0x7
 295 0067 EC000000 		.4byte	.LASF8
 296 006b 04       		.uleb128 0x4
 297 006c F4010000 		.4byte	.LASF9
 298 0070 02       		.byte	0x2
 299 0071 3801     		.2byte	0x138
 300 0073 2C000000 		.4byte	0x2c
 301 0077 04       		.uleb128 0x4
 302 0078 CD000000 		.4byte	.LASF10
 303 007c 02       		.byte	0x2
 304 007d 3901     		.2byte	0x139
 305 007f 3A000000 		.4byte	0x3a
 306 0083 04       		.uleb128 0x4
 307 0084 DD000000 		.4byte	.LASF11
 308 0088 02       		.byte	0x2
 309 0089 3A01     		.2byte	0x13a
 310 008b 48000000 		.4byte	0x48
 311 008f 02       		.uleb128 0x2
 312 0090 04       		.byte	0x4
 313 0091 04       		.byte	0x4
 314 0092 6E000000 		.4byte	.LASF12
 315 0096 02       		.uleb128 0x2
 316 0097 08       		.byte	0x8
 317 0098 04       		.byte	0x4
 318 0099 C6000000 		.4byte	.LASF13
 319 009d 02       		.uleb128 0x2
 320 009e 01       		.byte	0x1
 321 009f 08       		.byte	0x8
 322 00a0 57010000 		.4byte	.LASF14
 323 00a4 04       		.uleb128 0x4
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 11


 324 00a5 00000000 		.4byte	.LASF15
 325 00a9 02       		.byte	0x2
 326 00aa E401     		.2byte	0x1e4
 327 00ac B0000000 		.4byte	0xb0
 328 00b0 05       		.uleb128 0x5
 329 00b1 83000000 		.4byte	0x83
 330 00b5 06       		.uleb128 0x6
 331 00b6 AD000000 		.4byte	.LASF16
 332 00ba 01       		.byte	0x1
 333 00bb 48       		.byte	0x48
 334 00bc 00000000 		.4byte	.LFB0
 335 00c0 70000000 		.4byte	.LFE0-.LFB0
 336 00c4 01       		.uleb128 0x1
 337 00c5 9C       		.byte	0x9c
 338 00c6 DA000000 		.4byte	0xda
 339 00ca 07       		.uleb128 0x7
 340 00cb 37010000 		.4byte	.LASF18
 341 00cf 01       		.byte	0x1
 342 00d0 48       		.byte	0x48
 343 00d1 6B000000 		.4byte	0x6b
 344 00d5 00000000 		.4byte	.LLST0
 345 00d9 00       		.byte	0
 346 00da 06       		.uleb128 0x6
 347 00db 0C000000 		.4byte	.LASF17
 348 00df 01       		.byte	0x1
 349 00e0 75       		.byte	0x75
 350 00e1 00000000 		.4byte	.LFB1
 351 00e5 18000000 		.4byte	.LFE1-.LFB1
 352 00e9 01       		.uleb128 0x1
 353 00ea 9C       		.byte	0x9c
 354 00eb 0E010000 		.4byte	0x10e
 355 00ef 07       		.uleb128 0x7
 356 00f0 06000000 		.4byte	.LASF19
 357 00f4 01       		.byte	0x1
 358 00f5 75       		.byte	0x75
 359 00f6 6B000000 		.4byte	0x6b
 360 00fa 21000000 		.4byte	.LLST1
 361 00fe 08       		.uleb128 0x8
 362 00ff 82000000 		.4byte	.LASF24
 363 0103 01       		.byte	0x1
 364 0104 77       		.byte	0x77
 365 0105 6B000000 		.4byte	0x6b
 366 0109 42000000 		.4byte	.LLST2
 367 010d 00       		.byte	0
 368 010e 09       		.uleb128 0x9
 369 010f FA010000 		.4byte	.LASF20
 370 0113 01       		.byte	0x1
 371 0114 8E       		.byte	0x8e
 372 0115 6B000000 		.4byte	0x6b
 373 0119 00000000 		.4byte	.LFB2
 374 011d 10000000 		.4byte	.LFE2-.LFB2
 375 0121 01       		.uleb128 0x1
 376 0122 9C       		.byte	0x9c
 377 0123 09       		.uleb128 0x9
 378 0124 1E000000 		.4byte	.LASF21
 379 0128 01       		.byte	0x1
 380 0129 AA       		.byte	0xaa
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 12


 381 012a 6B000000 		.4byte	0x6b
 382 012e 00000000 		.4byte	.LFB3
 383 0132 10000000 		.4byte	.LFE3-.LFB3
 384 0136 01       		.uleb128 0x1
 385 0137 9C       		.byte	0x9c
 386 0138 06       		.uleb128 0x6
 387 0139 36000000 		.4byte	.LASF22
 388 013d 01       		.byte	0x1
 389 013e D5       		.byte	0xd5
 390 013f 00000000 		.4byte	.LFB4
 391 0143 14000000 		.4byte	.LFE4-.LFB4
 392 0147 01       		.uleb128 0x1
 393 0148 9C       		.byte	0x9c
 394 0149 77010000 		.4byte	0x177
 395 014d 0A       		.uleb128 0xa
 396 014e D4000000 		.4byte	.LASF23
 397 0152 01       		.byte	0x1
 398 0153 D5       		.byte	0xd5
 399 0154 77000000 		.4byte	0x77
 400 0158 01       		.uleb128 0x1
 401 0159 50       		.byte	0x50
 402 015a 07       		.uleb128 0x7
 403 015b 37010000 		.4byte	.LASF18
 404 015f 01       		.byte	0x1
 405 0160 D5       		.byte	0xd5
 406 0161 77000000 		.4byte	0x77
 407 0165 60000000 		.4byte	.LLST3
 408 0169 0B       		.uleb128 0xb
 409 016a E4000000 		.4byte	.LASF25
 410 016e 01       		.byte	0x1
 411 016f D7       		.byte	0xd7
 412 0170 83000000 		.4byte	0x83
 413 0174 01       		.uleb128 0x1
 414 0175 53       		.byte	0x53
 415 0176 00       		.byte	0
 416 0177 0C       		.uleb128 0xc
 417 0178 53000000 		.4byte	.LASF26
 418 017c 01       		.byte	0x1
 419 017d F2       		.byte	0xf2
 420 017e 6B000000 		.4byte	0x6b
 421 0182 00000000 		.4byte	.LFB5
 422 0186 10000000 		.4byte	.LFE5-.LFB5
 423 018a 01       		.uleb128 0x1
 424 018b 9C       		.byte	0x9c
 425 018c 0B       		.uleb128 0xb
 426 018d 4A010000 		.4byte	.LASF27
 427 0191 01       		.byte	0x1
 428 0192 F4       		.byte	0xf4
 429 0193 6B000000 		.4byte	0x6b
 430 0197 01       		.uleb128 0x1
 431 0198 50       		.byte	0x50
 432 0199 00       		.byte	0
 433 019a 00       		.byte	0
 434              		.section	.debug_abbrev,"",%progbits
 435              	.Ldebug_abbrev0:
 436 0000 01       		.uleb128 0x1
 437 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 13


 438 0002 01       		.byte	0x1
 439 0003 25       		.uleb128 0x25
 440 0004 0E       		.uleb128 0xe
 441 0005 13       		.uleb128 0x13
 442 0006 0B       		.uleb128 0xb
 443 0007 03       		.uleb128 0x3
 444 0008 0E       		.uleb128 0xe
 445 0009 1B       		.uleb128 0x1b
 446 000a 0E       		.uleb128 0xe
 447 000b 55       		.uleb128 0x55
 448 000c 17       		.uleb128 0x17
 449 000d 11       		.uleb128 0x11
 450 000e 01       		.uleb128 0x1
 451 000f 10       		.uleb128 0x10
 452 0010 17       		.uleb128 0x17
 453 0011 00       		.byte	0
 454 0012 00       		.byte	0
 455 0013 02       		.uleb128 0x2
 456 0014 24       		.uleb128 0x24
 457 0015 00       		.byte	0
 458 0016 0B       		.uleb128 0xb
 459 0017 0B       		.uleb128 0xb
 460 0018 3E       		.uleb128 0x3e
 461 0019 0B       		.uleb128 0xb
 462 001a 03       		.uleb128 0x3
 463 001b 0E       		.uleb128 0xe
 464 001c 00       		.byte	0
 465 001d 00       		.byte	0
 466 001e 03       		.uleb128 0x3
 467 001f 24       		.uleb128 0x24
 468 0020 00       		.byte	0
 469 0021 0B       		.uleb128 0xb
 470 0022 0B       		.uleb128 0xb
 471 0023 3E       		.uleb128 0x3e
 472 0024 0B       		.uleb128 0xb
 473 0025 03       		.uleb128 0x3
 474 0026 08       		.uleb128 0x8
 475 0027 00       		.byte	0
 476 0028 00       		.byte	0
 477 0029 04       		.uleb128 0x4
 478 002a 16       		.uleb128 0x16
 479 002b 00       		.byte	0
 480 002c 03       		.uleb128 0x3
 481 002d 0E       		.uleb128 0xe
 482 002e 3A       		.uleb128 0x3a
 483 002f 0B       		.uleb128 0xb
 484 0030 3B       		.uleb128 0x3b
 485 0031 05       		.uleb128 0x5
 486 0032 49       		.uleb128 0x49
 487 0033 13       		.uleb128 0x13
 488 0034 00       		.byte	0
 489 0035 00       		.byte	0
 490 0036 05       		.uleb128 0x5
 491 0037 35       		.uleb128 0x35
 492 0038 00       		.byte	0
 493 0039 49       		.uleb128 0x49
 494 003a 13       		.uleb128 0x13
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 14


 495 003b 00       		.byte	0
 496 003c 00       		.byte	0
 497 003d 06       		.uleb128 0x6
 498 003e 2E       		.uleb128 0x2e
 499 003f 01       		.byte	0x1
 500 0040 3F       		.uleb128 0x3f
 501 0041 19       		.uleb128 0x19
 502 0042 03       		.uleb128 0x3
 503 0043 0E       		.uleb128 0xe
 504 0044 3A       		.uleb128 0x3a
 505 0045 0B       		.uleb128 0xb
 506 0046 3B       		.uleb128 0x3b
 507 0047 0B       		.uleb128 0xb
 508 0048 27       		.uleb128 0x27
 509 0049 19       		.uleb128 0x19
 510 004a 11       		.uleb128 0x11
 511 004b 01       		.uleb128 0x1
 512 004c 12       		.uleb128 0x12
 513 004d 06       		.uleb128 0x6
 514 004e 40       		.uleb128 0x40
 515 004f 18       		.uleb128 0x18
 516 0050 9742     		.uleb128 0x2117
 517 0052 19       		.uleb128 0x19
 518 0053 01       		.uleb128 0x1
 519 0054 13       		.uleb128 0x13
 520 0055 00       		.byte	0
 521 0056 00       		.byte	0
 522 0057 07       		.uleb128 0x7
 523 0058 05       		.uleb128 0x5
 524 0059 00       		.byte	0
 525 005a 03       		.uleb128 0x3
 526 005b 0E       		.uleb128 0xe
 527 005c 3A       		.uleb128 0x3a
 528 005d 0B       		.uleb128 0xb
 529 005e 3B       		.uleb128 0x3b
 530 005f 0B       		.uleb128 0xb
 531 0060 49       		.uleb128 0x49
 532 0061 13       		.uleb128 0x13
 533 0062 02       		.uleb128 0x2
 534 0063 17       		.uleb128 0x17
 535 0064 00       		.byte	0
 536 0065 00       		.byte	0
 537 0066 08       		.uleb128 0x8
 538 0067 34       		.uleb128 0x34
 539 0068 00       		.byte	0
 540 0069 03       		.uleb128 0x3
 541 006a 0E       		.uleb128 0xe
 542 006b 3A       		.uleb128 0x3a
 543 006c 0B       		.uleb128 0xb
 544 006d 3B       		.uleb128 0x3b
 545 006e 0B       		.uleb128 0xb
 546 006f 49       		.uleb128 0x49
 547 0070 13       		.uleb128 0x13
 548 0071 02       		.uleb128 0x2
 549 0072 17       		.uleb128 0x17
 550 0073 00       		.byte	0
 551 0074 00       		.byte	0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 15


 552 0075 09       		.uleb128 0x9
 553 0076 2E       		.uleb128 0x2e
 554 0077 00       		.byte	0
 555 0078 3F       		.uleb128 0x3f
 556 0079 19       		.uleb128 0x19
 557 007a 03       		.uleb128 0x3
 558 007b 0E       		.uleb128 0xe
 559 007c 3A       		.uleb128 0x3a
 560 007d 0B       		.uleb128 0xb
 561 007e 3B       		.uleb128 0x3b
 562 007f 0B       		.uleb128 0xb
 563 0080 27       		.uleb128 0x27
 564 0081 19       		.uleb128 0x19
 565 0082 49       		.uleb128 0x49
 566 0083 13       		.uleb128 0x13
 567 0084 11       		.uleb128 0x11
 568 0085 01       		.uleb128 0x1
 569 0086 12       		.uleb128 0x12
 570 0087 06       		.uleb128 0x6
 571 0088 40       		.uleb128 0x40
 572 0089 18       		.uleb128 0x18
 573 008a 9742     		.uleb128 0x2117
 574 008c 19       		.uleb128 0x19
 575 008d 00       		.byte	0
 576 008e 00       		.byte	0
 577 008f 0A       		.uleb128 0xa
 578 0090 05       		.uleb128 0x5
 579 0091 00       		.byte	0
 580 0092 03       		.uleb128 0x3
 581 0093 0E       		.uleb128 0xe
 582 0094 3A       		.uleb128 0x3a
 583 0095 0B       		.uleb128 0xb
 584 0096 3B       		.uleb128 0x3b
 585 0097 0B       		.uleb128 0xb
 586 0098 49       		.uleb128 0x49
 587 0099 13       		.uleb128 0x13
 588 009a 02       		.uleb128 0x2
 589 009b 18       		.uleb128 0x18
 590 009c 00       		.byte	0
 591 009d 00       		.byte	0
 592 009e 0B       		.uleb128 0xb
 593 009f 34       		.uleb128 0x34
 594 00a0 00       		.byte	0
 595 00a1 03       		.uleb128 0x3
 596 00a2 0E       		.uleb128 0xe
 597 00a3 3A       		.uleb128 0x3a
 598 00a4 0B       		.uleb128 0xb
 599 00a5 3B       		.uleb128 0x3b
 600 00a6 0B       		.uleb128 0xb
 601 00a7 49       		.uleb128 0x49
 602 00a8 13       		.uleb128 0x13
 603 00a9 02       		.uleb128 0x2
 604 00aa 18       		.uleb128 0x18
 605 00ab 00       		.byte	0
 606 00ac 00       		.byte	0
 607 00ad 0C       		.uleb128 0xc
 608 00ae 2E       		.uleb128 0x2e
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 16


 609 00af 01       		.byte	0x1
 610 00b0 3F       		.uleb128 0x3f
 611 00b1 19       		.uleb128 0x19
 612 00b2 03       		.uleb128 0x3
 613 00b3 0E       		.uleb128 0xe
 614 00b4 3A       		.uleb128 0x3a
 615 00b5 0B       		.uleb128 0xb
 616 00b6 3B       		.uleb128 0x3b
 617 00b7 0B       		.uleb128 0xb
 618 00b8 27       		.uleb128 0x27
 619 00b9 19       		.uleb128 0x19
 620 00ba 49       		.uleb128 0x49
 621 00bb 13       		.uleb128 0x13
 622 00bc 11       		.uleb128 0x11
 623 00bd 01       		.uleb128 0x1
 624 00be 12       		.uleb128 0x12
 625 00bf 06       		.uleb128 0x6
 626 00c0 40       		.uleb128 0x40
 627 00c1 18       		.uleb128 0x18
 628 00c2 9742     		.uleb128 0x2117
 629 00c4 19       		.uleb128 0x19
 630 00c5 00       		.byte	0
 631 00c6 00       		.byte	0
 632 00c7 00       		.byte	0
 633              		.section	.debug_loc,"",%progbits
 634              	.Ldebug_loc0:
 635              	.LLST0:
 636 0000 00000000 		.4byte	.LVL0
 637 0004 50000000 		.4byte	.LVL1
 638 0008 0100     		.2byte	0x1
 639 000a 50       		.byte	0x50
 640 000b 50000000 		.4byte	.LVL1
 641 000f 70000000 		.4byte	.LFE0
 642 0013 0400     		.2byte	0x4
 643 0015 F3       		.byte	0xf3
 644 0016 01       		.uleb128 0x1
 645 0017 50       		.byte	0x50
 646 0018 9F       		.byte	0x9f
 647 0019 00000000 		.4byte	0
 648 001d 00000000 		.4byte	0
 649              	.LLST1:
 650 0021 00000000 		.4byte	.LVL2
 651 0025 06000000 		.4byte	.LVL3
 652 0029 0100     		.2byte	0x1
 653 002b 50       		.byte	0x50
 654 002c 06000000 		.4byte	.LVL3
 655 0030 18000000 		.4byte	.LFE1
 656 0034 0400     		.2byte	0x4
 657 0036 F3       		.byte	0xf3
 658 0037 01       		.uleb128 0x1
 659 0038 50       		.byte	0x50
 660 0039 9F       		.byte	0x9f
 661 003a 00000000 		.4byte	0
 662 003e 00000000 		.4byte	0
 663              	.LLST2:
 664 0042 0A000000 		.4byte	.LVL4
 665 0046 10000000 		.4byte	.LVL5
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 17


 666 004a 0100     		.2byte	0x1
 667 004c 52       		.byte	0x52
 668 004d 10000000 		.4byte	.LVL5
 669 0051 18000000 		.4byte	.LFE1
 670 0055 0100     		.2byte	0x1
 671 0057 50       		.byte	0x50
 672 0058 00000000 		.4byte	0
 673 005c 00000000 		.4byte	0
 674              	.LLST3:
 675 0060 00000000 		.4byte	.LVL6
 676 0064 08000000 		.4byte	.LVL8
 677 0068 0100     		.2byte	0x1
 678 006a 51       		.byte	0x51
 679 006b 08000000 		.4byte	.LVL8
 680 006f 14000000 		.4byte	.LFE4
 681 0073 0400     		.2byte	0x4
 682 0075 F3       		.byte	0xf3
 683 0076 01       		.uleb128 0x1
 684 0077 51       		.byte	0x51
 685 0078 9F       		.byte	0x9f
 686 0079 00000000 		.4byte	0
 687 007d 00000000 		.4byte	0
 688              		.section	.debug_aranges,"",%progbits
 689 0000 44000000 		.4byte	0x44
 690 0004 0200     		.2byte	0x2
 691 0006 00000000 		.4byte	.Ldebug_info0
 692 000a 04       		.byte	0x4
 693 000b 00       		.byte	0
 694 000c 0000     		.2byte	0
 695 000e 0000     		.2byte	0
 696 0010 00000000 		.4byte	.LFB0
 697 0014 70000000 		.4byte	.LFE0-.LFB0
 698 0018 00000000 		.4byte	.LFB1
 699 001c 18000000 		.4byte	.LFE1-.LFB1
 700 0020 00000000 		.4byte	.LFB2
 701 0024 10000000 		.4byte	.LFE2-.LFB2
 702 0028 00000000 		.4byte	.LFB3
 703 002c 10000000 		.4byte	.LFE3-.LFB3
 704 0030 00000000 		.4byte	.LFB4
 705 0034 14000000 		.4byte	.LFE4-.LFB4
 706 0038 00000000 		.4byte	.LFB5
 707 003c 10000000 		.4byte	.LFE5-.LFB5
 708 0040 00000000 		.4byte	0
 709 0044 00000000 		.4byte	0
 710              		.section	.debug_ranges,"",%progbits
 711              	.Ldebug_ranges0:
 712 0000 00000000 		.4byte	.LFB0
 713 0004 70000000 		.4byte	.LFE0
 714 0008 00000000 		.4byte	.LFB1
 715 000c 18000000 		.4byte	.LFE1
 716 0010 00000000 		.4byte	.LFB2
 717 0014 10000000 		.4byte	.LFE2
 718 0018 00000000 		.4byte	.LFB3
 719 001c 10000000 		.4byte	.LFE3
 720 0020 00000000 		.4byte	.LFB4
 721 0024 14000000 		.4byte	.LFE4
 722 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 18


 723 002c 10000000 		.4byte	.LFE5
 724 0030 00000000 		.4byte	0
 725 0034 00000000 		.4byte	0
 726              		.section	.debug_line,"",%progbits
 727              	.Ldebug_line0:
 728 0000 C6000000 		.section	.debug_str,"MS",%progbits,1
 728      02004A00 
 728      00000201 
 728      FB0E0D00 
 728      01010101 
 729              	.LASF15:
 730 0000 72656733 		.ascii	"reg32\000"
 730      3200
 731              	.LASF19:
 732 0006 76616C75 		.ascii	"value\000"
 732      6500
 733              	.LASF17:
 734 000c 4C43445F 		.ascii	"LCD_LCDPort_Write\000"
 734      4C434450 
 734      6F72745F 
 734      57726974 
 734      6500
 735              	.LASF21:
 736 001e 4C43445F 		.ascii	"LCD_LCDPort_ReadDataReg\000"
 736      4C434450 
 736      6F72745F 
 736      52656164 
 736      44617461 
 737              	.LASF22:
 738 0036 4C43445F 		.ascii	"LCD_LCDPort_SetInterruptMode\000"
 738      4C434450 
 738      6F72745F 
 738      53657449 
 738      6E746572 
 739              	.LASF26:
 740 0053 4C43445F 		.ascii	"LCD_LCDPort_ClearInterrupt\000"
 740      4C434450 
 740      6F72745F 
 740      436C6561 
 740      72496E74 
 741              	.LASF12:
 742 006e 666C6F61 		.ascii	"float\000"
 742      7400
 743              	.LASF1:
 744 0074 756E7369 		.ascii	"unsigned char\000"
 744      676E6564 
 744      20636861 
 744      7200
 745              	.LASF24:
 746 0082 64725661 		.ascii	"drVal\000"
 746      6C00
 747              	.LASF5:
 748 0088 6C6F6E67 		.ascii	"long unsigned int\000"
 748      20756E73 
 748      69676E65 
 748      6420696E 
 748      7400
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 19


 749              	.LASF3:
 750 009a 73686F72 		.ascii	"short unsigned int\000"
 750      7420756E 
 750      7369676E 
 750      65642069 
 750      6E7400
 751              	.LASF16:
 752 00ad 4C43445F 		.ascii	"LCD_LCDPort_SetDriveMode\000"
 752      4C434450 
 752      6F72745F 
 752      53657444 
 752      72697665 
 753              	.LASF13:
 754 00c6 646F7562 		.ascii	"double\000"
 754      6C6500
 755              	.LASF10:
 756 00cd 75696E74 		.ascii	"uint16\000"
 756      313600
 757              	.LASF23:
 758 00d4 706F7369 		.ascii	"position\000"
 758      74696F6E 
 758      00
 759              	.LASF11:
 760 00dd 75696E74 		.ascii	"uint32\000"
 760      333200
 761              	.LASF25:
 762 00e4 696E7472 		.ascii	"intrCfg\000"
 762      43666700 
 763              	.LASF8:
 764 00ec 756E7369 		.ascii	"unsigned int\000"
 764      676E6564 
 764      20696E74 
 764      00
 765              	.LASF29:
 766 00f9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\LCD_LCDPort.c\000"
 766      6E657261 
 766      7465645F 
 766      536F7572 
 766      63655C50 
 767              	.LASF7:
 768 0120 6C6F6E67 		.ascii	"long long unsigned int\000"
 768      206C6F6E 
 768      6720756E 
 768      7369676E 
 768      65642069 
 769              	.LASF18:
 770 0137 6D6F6465 		.ascii	"mode\000"
 770      00
 771              	.LASF6:
 772 013c 6C6F6E67 		.ascii	"long long int\000"
 772      206C6F6E 
 772      6720696E 
 772      7400
 773              	.LASF27:
 774 014a 6D61736B 		.ascii	"maskedStatus\000"
 774      65645374 
 774      61747573 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccmUTrQL.s 			page 20


 774      00
 775              	.LASF14:
 776 0157 63686172 		.ascii	"char\000"
 776      00
 777              	.LASF28:
 778 015c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 778      4320342E 
 778      392E3320 
 778      32303135 
 778      30333033 
 779 018f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 779      20726576 
 779      6973696F 
 779      6E203232 
 779      31323230 
 780 01c2 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 780      66756E63 
 780      74696F6E 
 780      2D736563 
 780      74696F6E 
 781              	.LASF2:
 782 01ea 73686F72 		.ascii	"short int\000"
 782      7420696E 
 782      7400
 783              	.LASF9:
 784 01f4 75696E74 		.ascii	"uint8\000"
 784      3800
 785              	.LASF20:
 786 01fa 4C43445F 		.ascii	"LCD_LCDPort_Read\000"
 786      4C434450 
 786      6F72745F 
 786      52656164 
 786      00
 787              	.LASF4:
 788 020b 6C6F6E67 		.ascii	"long int\000"
 788      20696E74 
 788      00
 789              	.LASF0:
 790 0214 7369676E 		.ascii	"signed char\000"
 790      65642063 
 790      68617200 
 791              	.LASF30:
 792 0220 453A5C37 		.ascii	"E:\\744\\Education\\Git\\PSoC4_Projects\\Diploma_sk"
 792      34345C45 
 792      64756361 
 792      74696F6E 
 792      5C476974 
 793 024e 65746368 		.ascii	"etch\\Password.cydsn\000"
 793      5C506173 
 793      73776F72 
 793      642E6379 
 793      64736E00 
 794              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
