ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * Version 5.30
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the Clocking, Interrupts, SysTick, and Voltage
   7:.\Generated_Source\PSoC4/CyLib.c **** *   Detect.
   8:.\Generated_Source\PSoC4/CyLib.c **** *
   9:.\Generated_Source\PSoC4/CyLib.c **** *  Note:
  10:.\Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the PSoC 4 System
  11:.\Generated_Source\PSoC4/CyLib.c **** *   Reference Guide provided with PSoC Creator.
  12:.\Generated_Source\PSoC4/CyLib.c **** *
  13:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  14:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  15:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  18:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  19:.\Generated_Source\PSoC4/CyLib.c **** 
  20:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/CyLib.c **** 
  22:.\Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  23:.\Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  24:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  25:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  26:.\Generated_Source\PSoC4/CyLib.c **** 
  27:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  29:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  30:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  31:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  32:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 2


  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** 
  35:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  36:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  37:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:.\Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:.\Generated_Source\PSoC4/CyLib.c **** 
  42:.\Generated_Source\PSoC4/CyLib.c **** 
  43:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  44:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:.\Generated_Source\PSoC4/CyLib.c **** *
  47:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:.\Generated_Source\PSoC4/CyLib.c **** *
  50:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:.\Generated_Source\PSoC4/CyLib.c **** 
  56:.\Generated_Source\PSoC4/CyLib.c **** 
  57:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:.\Generated_Source\PSoC4/CyLib.c **** 
  74:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:.\Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:.\Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:.\Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:.\Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:.\Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:.\Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:.\Generated_Source\PSoC4/CyLib.c **** 
  85:.\Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
  87:.\Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkImoTrim4 = 0u;
  88:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
  89:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 3


  90:.\Generated_Source\PSoC4/CyLib.c **** 
  91:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  94:.\Generated_Source\PSoC4/CyLib.c **** *
  95:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
  96:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  97:.\Generated_Source\PSoC4/CyLib.c **** *
  98:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  99:.\Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
 100:.\Generated_Source\PSoC4/CyLib.c **** *
 101:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L devices, this function will also enable USB lock if selected
 102:.\Generated_Source\PSoC4/CyLib.c **** *  in the Design Wide Resources tab.
 103:.\Generated_Source\PSoC4/CyLib.c **** *
 104:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 105:.\Generated_Source\PSoC4/CyLib.c **** *  None
 106:.\Generated_Source\PSoC4/CyLib.c **** *
 107:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 108:.\Generated_Source\PSoC4/CyLib.c **** *  None
 109:.\Generated_Source\PSoC4/CyLib.c **** *
 110:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 111:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 112:.\Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 112 0
  27              		.cfi_startproc
 113:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 113 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 114:.\Generated_Source\PSoC4/CyLib.c **** 
 115:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 116:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 117:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 118:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 119:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 120:.\Generated_Source\PSoC4/CyLib.c **** 
 121:.\Generated_Source\PSoC4/CyLib.c **** 
 122:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 123:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 124:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 125:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 126:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 127:.\Generated_Source\PSoC4/CyLib.c **** 
 128:.\Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 128 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 08010B40 		.word	1074462984
  42              		.cfi_endproc
  43              	.LFE0:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 4


  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoStop,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoStop
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoStop, %function
  51              	CySysClkImoStop:
  52              	.LFB1:
 129:.\Generated_Source\PSoC4/CyLib.c **** 
 130:.\Generated_Source\PSoC4/CyLib.c **** 
 131:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 132:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 133:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 134:.\Generated_Source\PSoC4/CyLib.c **** *
 135:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 136:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 137:.\Generated_Source\PSoC4/CyLib.c **** *
 138:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, this function will also disable WCO lock.
 139:.\Generated_Source\PSoC4/CyLib.c **** *
 140:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC PSoC 4200L devices, this function will also disable USB lock.
 141:.\Generated_Source\PSoC4/CyLib.c **** *
 142:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 143:.\Generated_Source\PSoC4/CyLib.c **** *  None
 144:.\Generated_Source\PSoC4/CyLib.c **** *
 145:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 146:.\Generated_Source\PSoC4/CyLib.c **** *  None
 147:.\Generated_Source\PSoC4/CyLib.c **** *
 148:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 149:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 150:.\Generated_Source\PSoC4/CyLib.c **** {
  53              		.loc 1 150 0
  54              		.cfi_startproc
 151:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 153:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 154:.\Generated_Source\PSoC4/CyLib.c **** 
 155:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 156:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 157:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 158:.\Generated_Source\PSoC4/CyLib.c **** 
 159:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  55              		.loc 1 159 0
  56 0000 024A     		ldr	r2, .L5
  57 0002 1368     		ldr	r3, [r2]
  58 0004 5B00     		lsl	r3, r3, #1
  59 0006 5B08     		lsr	r3, r3, #1
  60 0008 1360     		str	r3, [r2]
 160:.\Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 160 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 08010B40 		.word	1074462984
  68              		.cfi_endproc
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 5


  69              	.LFE1:
  70              		.size	CySysClkImoStop, .-CySysClkImoStop
  71              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  72              		.align	2
  73              		.global	CySysClkWriteHfclkDirect
  74              		.code	16
  75              		.thumb_func
  76              		.type	CySysClkWriteHfclkDirect, %function
  77              	CySysClkWriteHfclkDirect:
  78              	.LFB2:
 161:.\Generated_Source\PSoC4/CyLib.c **** 
 162:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 163:.\Generated_Source\PSoC4/CyLib.c **** 
 164:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 165:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 166:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 167:.\Generated_Source\PSoC4/CyLib.c ****     *
 168:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 169:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 170:.\Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 171:.\Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 172:.\Generated_Source\PSoC4/CyLib.c ****     *
 173:.\Generated_Source\PSoC4/CyLib.c ****     *  It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 174:.\Generated_Source\PSoC4/CyLib.c ****     *  CyDelay() function. The delay interval is measured based on the system
 175:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency defined by PSoC Creator at build time. If System clock frequency
 176:.\Generated_Source\PSoC4/CyLib.c ****     *  is changed in runtime, the CyDelayFreq() with the appropriate parameter
 177:.\Generated_Source\PSoC4/CyLib.c ****     *  should be called.
 178:.\Generated_Source\PSoC4/CyLib.c ****     *
 179:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 180:.\Generated_Source\PSoC4/CyLib.c ****     *  but not both.
 181:.\Generated_Source\PSoC4/CyLib.c ****     *
 182:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 183:.\Generated_Source\PSoC4/CyLib.c ****     *
 184:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 185:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 186:.\Generated_Source\PSoC4/CyLib.c ****     *
 187:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 188:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 189:.\Generated_Source\PSoC4/CyLib.c ****     *
 190:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 191:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 192:.\Generated_Source\PSoC4/CyLib.c ****     {
 193:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 194:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 195:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 196:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 197:.\Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 198:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 199:.\Generated_Source\PSoC4/CyLib.c **** 
 200:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 201:.\Generated_Source\PSoC4/CyLib.c ****         {
 202:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 203:.\Generated_Source\PSoC4/CyLib.c **** 
 204:.\Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 205:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 206:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 207:.\Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 6


 208:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 209:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 210:.\Generated_Source\PSoC4/CyLib.c **** 
 211:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 212:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 213:.\Generated_Source\PSoC4/CyLib.c ****             {
 214:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 215:.\Generated_Source\PSoC4/CyLib.c ****                 {
 216:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 217:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 218:.\Generated_Source\PSoC4/CyLib.c ****                 }
 219:.\Generated_Source\PSoC4/CyLib.c ****             }
 220:.\Generated_Source\PSoC4/CyLib.c **** 
 221:.\Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 222:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:.\Generated_Source\PSoC4/CyLib.c ****             {
 224:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 225:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:.\Generated_Source\PSoC4/CyLib.c ****             }
 227:.\Generated_Source\PSoC4/CyLib.c **** 
 228:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 229:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 230:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 231:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 232:.\Generated_Source\PSoC4/CyLib.c **** 
 233:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 234:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 235:.\Generated_Source\PSoC4/CyLib.c **** 
 236:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 237:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 238:.\Generated_Source\PSoC4/CyLib.c **** 
 239:.\Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 240:.\Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 241:.\Generated_Source\PSoC4/CyLib.c ****             {
 242:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 243:.\Generated_Source\PSoC4/CyLib.c ****             }
 244:.\Generated_Source\PSoC4/CyLib.c ****             else
 245:.\Generated_Source\PSoC4/CyLib.c ****             {
 246:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 247:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 248:.\Generated_Source\PSoC4/CyLib.c **** 
 249:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 250:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 251:.\Generated_Source\PSoC4/CyLib.c **** 
 252:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 253:.\Generated_Source\PSoC4/CyLib.c ****             }
 254:.\Generated_Source\PSoC4/CyLib.c **** 
 255:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 256:.\Generated_Source\PSoC4/CyLib.c **** 
 257:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 258:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 259:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 260:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 261:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 262:.\Generated_Source\PSoC4/CyLib.c **** 
 263:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 264:.\Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 7


 265:.\Generated_Source\PSoC4/CyLib.c ****     }
 266:.\Generated_Source\PSoC4/CyLib.c **** 
 267:.\Generated_Source\PSoC4/CyLib.c **** 
 268:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 269:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 270:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 271:.\Generated_Source\PSoC4/CyLib.c ****     *
 272:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 273:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 274:.\Generated_Source\PSoC4/CyLib.c ****     *
 275:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 276:.\Generated_Source\PSoC4/CyLib.c ****     *
 277:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 278:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 279:.\Generated_Source\PSoC4/CyLib.c ****     *
 280:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 281:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 282:.\Generated_Source\PSoC4/CyLib.c ****     *
 283:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 284:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 285:.\Generated_Source\PSoC4/CyLib.c ****     {
 286:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 287:.\Generated_Source\PSoC4/CyLib.c ****     }
 288:.\Generated_Source\PSoC4/CyLib.c **** 
 289:.\Generated_Source\PSoC4/CyLib.c **** 
 290:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 291:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 292:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 293:.\Generated_Source\PSoC4/CyLib.c ****     *
 294:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 295:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 296:.\Generated_Source\PSoC4/CyLib.c ****     *
 297:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 298:.\Generated_Source\PSoC4/CyLib.c ****     *
 299:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 300:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 301:.\Generated_Source\PSoC4/CyLib.c ****     *
 302:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 303:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 304:.\Generated_Source\PSoC4/CyLib.c ****     *
 305:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 306:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 307:.\Generated_Source\PSoC4/CyLib.c ****     {
 308:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 309:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 310:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 311:.\Generated_Source\PSoC4/CyLib.c ****     }
 312:.\Generated_Source\PSoC4/CyLib.c **** 
 313:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 314:.\Generated_Source\PSoC4/CyLib.c **** 
 315:.\Generated_Source\PSoC4/CyLib.c **** 
 316:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 317:.\Generated_Source\PSoC4/CyLib.c **** 
 318:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 320:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 321:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 8


 322:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 323:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to USB lock feature.
 324:.\Generated_Source\PSoC4/CyLib.c ****     *
 325:.\Generated_Source\PSoC4/CyLib.c ****     *  This function must be called before CySysClkWriteImoFreq().
 326:.\Generated_Source\PSoC4/CyLib.c ****     *
 327:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStart() function if USB lock
 328:.\Generated_Source\PSoC4/CyLib.c ****     *  selected in the Design Wide Resources tab.
 329:.\Generated_Source\PSoC4/CyLib.c ****     *
 330:.\Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 331:.\Generated_Source\PSoC4/CyLib.c ****     *  devices, the IMO can lock to either WCO or USB, but not both.
 332:.\Generated_Source\PSoC4/CyLib.c ****     *
 333:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 334:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 335:.\Generated_Source\PSoC4/CyLib.c ****     *
 336:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 337:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 338:.\Generated_Source\PSoC4/CyLib.c ****     *
 339:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 340:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 341:.\Generated_Source\PSoC4/CyLib.c ****     {
 342:.\Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 343:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 344:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 345:.\Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 346:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 347:.\Generated_Source\PSoC4/CyLib.c **** 
 348:.\Generated_Source\PSoC4/CyLib.c ****         /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 349:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 350:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 351:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 352:.\Generated_Source\PSoC4/CyLib.c **** 
 353:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 354:.\Generated_Source\PSoC4/CyLib.c ****     }
 355:.\Generated_Source\PSoC4/CyLib.c **** 
 356:.\Generated_Source\PSoC4/CyLib.c **** 
 357:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 358:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 359:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 360:.\Generated_Source\PSoC4/CyLib.c ****     *
 361:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 362:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to USB lock feature.
 363:.\Generated_Source\PSoC4/CyLib.c ****     *
 364:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStop() function if USB lock selected
 365:.\Generated_Source\PSoC4/CyLib.c ****     *  in the Design Wide Resources tab.
 366:.\Generated_Source\PSoC4/CyLib.c ****     *
 367:.\Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only.
 368:.\Generated_Source\PSoC4/CyLib.c ****     *
 369:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 370:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 371:.\Generated_Source\PSoC4/CyLib.c ****     *
 372:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 373:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 374:.\Generated_Source\PSoC4/CyLib.c ****     *
 375:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 376:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 377:.\Generated_Source\PSoC4/CyLib.c ****     {
 378:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 9


 379:.\Generated_Source\PSoC4/CyLib.c **** 
 380:.\Generated_Source\PSoC4/CyLib.c ****         /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 381:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 382:.\Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 383:.\Generated_Source\PSoC4/CyLib.c ****     }
 384:.\Generated_Source\PSoC4/CyLib.c **** 
 385:.\Generated_Source\PSoC4/CyLib.c **** 
 386:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 387:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 388:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 389:.\Generated_Source\PSoC4/CyLib.c ****     *
 390:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 391:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to USB lock enable state.
 392:.\Generated_Source\PSoC4/CyLib.c ****     *
 393:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4200L devices only.
 394:.\Generated_Source\PSoC4/CyLib.c ****     *
 395:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 396:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 397:.\Generated_Source\PSoC4/CyLib.c ****     *
 398:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 399:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to USB lock is enabled, and 0 if IMO to USB lock is disabled.
 400:.\Generated_Source\PSoC4/CyLib.c ****     *
 401:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 403:.\Generated_Source\PSoC4/CyLib.c ****     {
 404:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 405:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 406:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 407:.\Generated_Source\PSoC4/CyLib.c ****     }
 408:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 409:.\Generated_Source\PSoC4/CyLib.c **** 
 410:.\Generated_Source\PSoC4/CyLib.c **** 
 411:.\Generated_Source\PSoC4/CyLib.c **** 
 412:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 413:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 414:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 415:.\Generated_Source\PSoC4/CyLib.c **** *
 416:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 417:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 418:.\Generated_Source\PSoC4/CyLib.c **** *
 419:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 420:.\Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 421:.\Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 422:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 423:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 424:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 425:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 426:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL0    PLL#0
 427:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 428:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL1    PLL#1
 429:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 430:.\Generated_Source\PSoC4/CyLib.c **** *
 431:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 432:.\Generated_Source\PSoC4/CyLib.c **** *  None
 433:.\Generated_Source\PSoC4/CyLib.c **** *
 434:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 435:.\Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 10


 436:.\Generated_Source\PSoC4/CyLib.c **** *
 437:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 438:.\Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 439:.\Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 440:.\Generated_Source\PSoC4/CyLib.c **** *
 441:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 442:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 443:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 444:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 445:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 446:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 447:.\Generated_Source\PSoC4/CyLib.c **** *
 448:.\Generated_Source\PSoC4/CyLib.c **** *  Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 449:.\Generated_Source\PSoC4/CyLib.c **** *  maximum permissible value for HFCLK.
 450:.\Generated_Source\PSoC4/CyLib.c **** *
 451:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 452:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 453:.\Generated_Source\PSoC4/CyLib.c **** {
  79              		.loc 1 453 0
  80              		.cfi_startproc
  81              	.LVL0:
  82 0000 10B5     		push	{r4, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 4, -8
  85              		.cfi_offset 14, -4
  86 0002 041C     		mov	r4, r0
 454:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 455:.\Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 456:.\Generated_Source\PSoC4/CyLib.c **** 
 457:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  87              		.loc 1 457 0
  88 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL1:
 458:.\Generated_Source\PSoC4/CyLib.c **** 
 459:.\Generated_Source\PSoC4/CyLib.c **** 
 460:.\Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  90              		.loc 1 460 0
  91 0008 0449     		ldr	r1, .L8
  92 000a 0A68     		ldr	r2, [r1]
  93 000c 0723     		mov	r3, #7
  94 000e 9A43     		bic	r2, r3
  95              	.LVL2:
 461:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 462:.\Generated_Source\PSoC4/CyLib.c **** 
 463:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 464:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 465:.\Generated_Source\PSoC4/CyLib.c ****     {
 466:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 467:.\Generated_Source\PSoC4/CyLib.c ****     }
 468:.\Generated_Source\PSoC4/CyLib.c ****     else
 469:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 470:.\Generated_Source\PSoC4/CyLib.c ****     {
 471:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
  96              		.loc 1 471 0
  97 0010 2340     		and	r3, r4
  98 0012 1343     		orr	r3, r2
  99              	.LVL3:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 11


 472:.\Generated_Source\PSoC4/CyLib.c ****     }
 473:.\Generated_Source\PSoC4/CyLib.c **** 
 474:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 100              		.loc 1 474 0
 101 0014 0B60     		str	r3, [r1]
 475:.\Generated_Source\PSoC4/CyLib.c **** 
 476:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 102              		.loc 1 476 0
 103 0016 FFF7FEFF 		bl	CyExitCriticalSection
 104              	.LVL4:
 477:.\Generated_Source\PSoC4/CyLib.c **** }
 105              		.loc 1 477 0
 106              		@ sp needed
 107              	.LVL5:
 108 001a 10BD     		pop	{r4, pc}
 109              	.L9:
 110              		.align	2
 111              	.L8:
 112 001c 00010B40 		.word	1074462976
 113              		.cfi_endproc
 114              	.LFE2:
 115              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 116              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 117              		.align	2
 118              		.global	CySysClkGetSysclkSource
 119              		.code	16
 120              		.thumb_func
 121              		.type	CySysClkGetSysclkSource, %function
 122              	CySysClkGetSysclkSource:
 123              	.LFB3:
 478:.\Generated_Source\PSoC4/CyLib.c **** 
 479:.\Generated_Source\PSoC4/CyLib.c **** 
 480:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 482:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 483:.\Generated_Source\PSoC4/CyLib.c **** *
 484:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 485:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the source of the System clock.
 486:.\Generated_Source\PSoC4/CyLib.c **** *
 487:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 488:.\Generated_Source\PSoC4/CyLib.c **** *  None
 489:.\Generated_Source\PSoC4/CyLib.c **** *
 490:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 491:.\Generated_Source\PSoC4/CyLib.c **** *  The same as CySysClkWriteHfclkDirect() function parameters.
 492:.\Generated_Source\PSoC4/CyLib.c **** *
 493:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 494:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 495:.\Generated_Source\PSoC4/CyLib.c **** {
 124              		.loc 1 495 0
 125              		.cfi_startproc
 126 0000 10B5     		push	{r4, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
 496:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 497:.\Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 498:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 12


 499:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 130              		.loc 1 499 0
 131 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 132              	.LVL6:
 500:.\Generated_Source\PSoC4/CyLib.c **** 
 501:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 502:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 503:.\Generated_Source\PSoC4/CyLib.c ****     {
 504:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 505:.\Generated_Source\PSoC4/CyLib.c ****     }
 506:.\Generated_Source\PSoC4/CyLib.c ****     else
 507:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 508:.\Generated_Source\PSoC4/CyLib.c ****     {
 509:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 133              		.loc 1 509 0
 134 0006 044B     		ldr	r3, .L11
 135 0008 1B68     		ldr	r3, [r3]
 136 000a 0724     		mov	r4, #7
 137 000c 1C40     		and	r4, r3
 138              	.LVL7:
 510:.\Generated_Source\PSoC4/CyLib.c ****     }
 511:.\Generated_Source\PSoC4/CyLib.c **** 
 512:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 139              		.loc 1 512 0
 140 000e FFF7FEFF 		bl	CyExitCriticalSection
 141              	.LVL8:
 513:.\Generated_Source\PSoC4/CyLib.c **** 
 514:.\Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 515:.\Generated_Source\PSoC4/CyLib.c **** }
 142              		.loc 1 515 0
 143 0012 201C     		mov	r0, r4
 144              		@ sp needed
 145              	.LVL9:
 146 0014 10BD     		pop	{r4, pc}
 147              	.L12:
 148 0016 C046     		.align	2
 149              	.L11:
 150 0018 00010B40 		.word	1074462976
 151              		.cfi_endproc
 152              	.LFE3:
 153              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 154              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 155              		.align	2
 156              		.global	CySysClkWriteSysclkDiv
 157              		.code	16
 158              		.thumb_func
 159              		.type	CySysClkWriteSysclkDiv, %function
 160              	CySysClkWriteSysclkDiv:
 161              	.LFB4:
 516:.\Generated_Source\PSoC4/CyLib.c **** 
 517:.\Generated_Source\PSoC4/CyLib.c **** 
 518:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 519:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 520:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 521:.\Generated_Source\PSoC4/CyLib.c **** *
 522:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 523:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 13


 524:.\Generated_Source\PSoC4/CyLib.c **** *
 525:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 526:.\Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 527:.\Generated_Source\PSoC4/CyLib.c **** *
 528:.\Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 529:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 530:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 531:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 532:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 533:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 534:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 535:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 536:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 537:.\Generated_Source\PSoC4/CyLib.c **** *
 538:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 539:.\Generated_Source\PSoC4/CyLib.c **** *  None
 540:.\Generated_Source\PSoC4/CyLib.c **** *
 541:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 542:.\Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 543:.\Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 544:.\Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 545:.\Generated_Source\PSoC4/CyLib.c **** *
 546:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 547:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 548:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 549:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 550:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 551:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 552:.\Generated_Source\PSoC4/CyLib.c **** *
 553:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 554:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 555:.\Generated_Source\PSoC4/CyLib.c **** {
 162              		.loc 1 555 0
 163              		.cfi_startproc
 164              	.LVL10:
 165 0000 10B5     		push	{r4, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 4, -8
 168              		.cfi_offset 14, -4
 169 0002 041C     		mov	r4, r0
 556:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 557:.\Generated_Source\PSoC4/CyLib.c **** 
 558:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 170              		.loc 1 558 0
 171 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 172              	.LVL11:
 559:.\Generated_Source\PSoC4/CyLib.c **** 
 560:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 173              		.loc 1 560 0
 174 0008 0723     		mov	r3, #7
 175 000a 1C40     		and	r4, r3
 176              	.LVL12:
 177 000c E404     		lsl	r4, r4, #19
 561:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 562:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 178              		.loc 1 562 0
 179 000e 0449     		ldr	r1, .L14
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 14


 180 0010 0B68     		ldr	r3, [r1]
 181 0012 044A     		ldr	r2, .L14+4
 182 0014 1340     		and	r3, r2
 561:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 183              		.loc 1 561 0
 184 0016 2343     		orr	r3, r4
 560:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 185              		.loc 1 560 0
 186 0018 0B60     		str	r3, [r1]
 563:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 564:.\Generated_Source\PSoC4/CyLib.c **** 
 565:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 187              		.loc 1 565 0
 188 001a FFF7FEFF 		bl	CyExitCriticalSection
 189              	.LVL13:
 566:.\Generated_Source\PSoC4/CyLib.c **** }
 190              		.loc 1 566 0
 191              		@ sp needed
 192 001e 10BD     		pop	{r4, pc}
 193              	.L15:
 194              		.align	2
 195              	.L14:
 196 0020 00010B40 		.word	1074462976
 197 0024 FFFFC7FF 		.word	-3670017
 198              		.cfi_endproc
 199              	.LFE4:
 200              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 201              		.section	.text.CySysLvdDisable,"ax",%progbits
 202              		.align	2
 203              		.global	CySysLvdDisable
 204              		.code	16
 205              		.thumb_func
 206              		.type	CySysLvdDisable, %function
 207              	CySysLvdDisable:
 208              	.LFB7:
 567:.\Generated_Source\PSoC4/CyLib.c **** 
 568:.\Generated_Source\PSoC4/CyLib.c **** 
 569:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 571:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 572:.\Generated_Source\PSoC4/CyLib.c **** *
 573:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 574:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 575:.\Generated_Source\PSoC4/CyLib.c **** *
 576:.\Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 577:.\Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 578:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 579:.\Generated_Source\PSoC4/CyLib.c **** *
 580:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 581:.\Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 582:.\Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 583:.\Generated_Source\PSoC4/CyLib.c **** *
 584:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 585:.\Generated_Source\PSoC4/CyLib.c **** *  then this API will disable the lock, write the new IMO frequency and then
 586:.\Generated_Source\PSoC4/CyLib.c **** *  re-enable the lock.
 587:.\Generated_Source\PSoC4/CyLib.c **** *
 588:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L device families, this function enables the USB lock when 24 or
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 15


 589:.\Generated_Source\PSoC4/CyLib.c **** *  48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 590:.\Generated_Source\PSoC4/CyLib.c **** *  Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 591:.\Generated_Source\PSoC4/CyLib.c **** *  lock is disabled during IMO frequency change.
 592:.\Generated_Source\PSoC4/CyLib.c **** *
 593:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is compiled
 594:.\Generated_Source\PSoC4/CyLib.c **** *  in debug mode.
 595:.\Generated_Source\PSoC4/CyLib.c **** *
 596:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 597:.\Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 598:.\Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 599:.\Generated_Source\PSoC4/CyLib.c **** *
 600:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 601:.\Generated_Source\PSoC4/CyLib.c **** *
 602:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 603:.\Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 604:.\Generated_Source\PSoC4/CyLib.c **** *
 605:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 606:.\Generated_Source\PSoC4/CyLib.c **** *  None
 607:.\Generated_Source\PSoC4/CyLib.c **** *
 608:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 609:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 610:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 611:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 612:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 613:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 614:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 615:.\Generated_Source\PSoC4/CyLib.c **** *
 616:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 617:.\Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 618:.\Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 619:.\Generated_Source\PSoC4/CyLib.c **** *
 620:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 621:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 622:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 623:.\Generated_Source\PSoC4/CyLib.c ****     {
 624:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 625:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 626:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 627:.\Generated_Source\PSoC4/CyLib.c ****         #else
 628:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 629:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 630:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 631:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 632:.\Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 633:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 634:.\Generated_Source\PSoC4/CyLib.c **** 
 635:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 636:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 637:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 640:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 641:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 644:.\Generated_Source\PSoC4/CyLib.c **** 
 645:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 16


 646:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 647:.\Generated_Source\PSoC4/CyLib.c **** 
 648:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 649:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 650:.\Generated_Source\PSoC4/CyLib.c ****             {
 651:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 652:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 653:.\Generated_Source\PSoC4/CyLib.c ****             }
 654:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 655:.\Generated_Source\PSoC4/CyLib.c **** 
 656:.\Generated_Source\PSoC4/CyLib.c **** 
 657:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 658:.\Generated_Source\PSoC4/CyLib.c **** 
 659:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 660:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 661:.\Generated_Source\PSoC4/CyLib.c ****                 {
 662:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 663:.\Generated_Source\PSoC4/CyLib.c **** 
 664:.\Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 665:.\Generated_Source\PSoC4/CyLib.c ****                 {
 666:.\Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 667:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 668:.\Generated_Source\PSoC4/CyLib.c ****                 }
 669:.\Generated_Source\PSoC4/CyLib.c **** 
 670:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 671:.\Generated_Source\PSoC4/CyLib.c ****                 }
 672:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 673:.\Generated_Source\PSoC4/CyLib.c **** 
 674:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 675:.\Generated_Source\PSoC4/CyLib.c **** 
 676:.\Generated_Source\PSoC4/CyLib.c **** 
 677:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 678:.\Generated_Source\PSoC4/CyLib.c **** 
 679:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 680:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 681:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 682:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 683:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 684:.\Generated_Source\PSoC4/CyLib.c **** 
 685:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 686:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 687:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 688:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 689:.\Generated_Source\PSoC4/CyLib.c **** 
 690:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 691:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 692:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 693:.\Generated_Source\PSoC4/CyLib.c **** 
 694:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 695:.\Generated_Source\PSoC4/CyLib.c **** 
 696:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 697:.\Generated_Source\PSoC4/CyLib.c ****         {
 698:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 699:.\Generated_Source\PSoC4/CyLib.c ****             {
 700:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 701:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 702:.\Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 17


 703:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 704:.\Generated_Source\PSoC4/CyLib.c ****             {
 705:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 706:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 707:.\Generated_Source\PSoC4/CyLib.c ****             }
 708:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 709:.\Generated_Source\PSoC4/CyLib.c ****             {
 710:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 711:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 712:.\Generated_Source\PSoC4/CyLib.c ****             }
 713:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 714:.\Generated_Source\PSoC4/CyLib.c ****             {
 715:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 716:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 717:.\Generated_Source\PSoC4/CyLib.c ****             }
 718:.\Generated_Source\PSoC4/CyLib.c ****             else
 719:.\Generated_Source\PSoC4/CyLib.c ****             {
 720:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 721:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 722:.\Generated_Source\PSoC4/CyLib.c ****             }
 723:.\Generated_Source\PSoC4/CyLib.c **** 
 724:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 725:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 726:.\Generated_Source\PSoC4/CyLib.c **** 
 727:.\Generated_Source\PSoC4/CyLib.c **** 
 728:.\Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 729:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 730:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 731:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 732:.\Generated_Source\PSoC4/CyLib.c ****             *
 733:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 734:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 735:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 736:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 737:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 738:.\Generated_Source\PSoC4/CyLib.c ****             {
 739:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 740:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 741:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 742:.\Generated_Source\PSoC4/CyLib.c **** 
 743:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 744:.\Generated_Source\PSoC4/CyLib.c **** 
 745:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 746:.\Generated_Source\PSoC4/CyLib.c ****             }
 747:.\Generated_Source\PSoC4/CyLib.c ****             else
 748:.\Generated_Source\PSoC4/CyLib.c ****             {
 749:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 750:.\Generated_Source\PSoC4/CyLib.c ****             }
 751:.\Generated_Source\PSoC4/CyLib.c **** 
 752:.\Generated_Source\PSoC4/CyLib.c **** 
 753:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 754:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 755:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 756:.\Generated_Source\PSoC4/CyLib.c ****             *
 757:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 758:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 759:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 18


 760:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 761:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 762:.\Generated_Source\PSoC4/CyLib.c ****             {
 763:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 764:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 765:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 766:.\Generated_Source\PSoC4/CyLib.c ****             }
 767:.\Generated_Source\PSoC4/CyLib.c **** 
 768:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 769:.\Generated_Source\PSoC4/CyLib.c **** 
 770:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 771:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 772:.\Generated_Source\PSoC4/CyLib.c ****                 {
 773:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 774:.\Generated_Source\PSoC4/CyLib.c ****                 }
 775:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 776:.\Generated_Source\PSoC4/CyLib.c ****                 {
 777:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 778:.\Generated_Source\PSoC4/CyLib.c ****                 }
 779:.\Generated_Source\PSoC4/CyLib.c ****                 else
 780:.\Generated_Source\PSoC4/CyLib.c ****                 {
 781:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 782:.\Generated_Source\PSoC4/CyLib.c ****                 }
 783:.\Generated_Source\PSoC4/CyLib.c ****             #else
 784:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 785:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:.\Generated_Source\PSoC4/CyLib.c **** 
 787:.\Generated_Source\PSoC4/CyLib.c **** 
 788:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 789:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 790:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 791:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 792:.\Generated_Source\PSoC4/CyLib.c **** 
 793:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 794:.\Generated_Source\PSoC4/CyLib.c ****             {
 795:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 796:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 797:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 798:.\Generated_Source\PSoC4/CyLib.c ****             }
 799:.\Generated_Source\PSoC4/CyLib.c ****         }
 800:.\Generated_Source\PSoC4/CyLib.c ****         else
 801:.\Generated_Source\PSoC4/CyLib.c ****         {
 802:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 803:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 804:.\Generated_Source\PSoC4/CyLib.c ****         }
 805:.\Generated_Source\PSoC4/CyLib.c **** 
 806:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 807:.\Generated_Source\PSoC4/CyLib.c **** 
 808:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 809:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 810:.\Generated_Source\PSoC4/CyLib.c ****             {
 811:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 812:.\Generated_Source\PSoC4/CyLib.c ****             }
 813:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 814:.\Generated_Source\PSoC4/CyLib.c **** 
 815:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 816:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 19


 817:.\Generated_Source\PSoC4/CyLib.c ****             {
 818:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 819:.\Generated_Source\PSoC4/CyLib.c ****             }
 820:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 821:.\Generated_Source\PSoC4/CyLib.c **** 
 822:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 823:.\Generated_Source\PSoC4/CyLib.c ****     }
 824:.\Generated_Source\PSoC4/CyLib.c **** 
 825:.\Generated_Source\PSoC4/CyLib.c **** #else
 826:.\Generated_Source\PSoC4/CyLib.c **** 
 827:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 828:.\Generated_Source\PSoC4/CyLib.c ****     {
 829:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 830:.\Generated_Source\PSoC4/CyLib.c **** 
 831:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 832:.\Generated_Source\PSoC4/CyLib.c ****         {
 833:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 834:.\Generated_Source\PSoC4/CyLib.c **** 
 835:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 836:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 837:.\Generated_Source\PSoC4/CyLib.c **** 
 838:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 839:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 840:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 841:.\Generated_Source\PSoC4/CyLib.c **** 
 842:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 843:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 844:.\Generated_Source\PSoC4/CyLib.c **** 
 845:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 846:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 847:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 848:.\Generated_Source\PSoC4/CyLib.c **** 
 849:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 850:.\Generated_Source\PSoC4/CyLib.c **** 
 851:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 852:.\Generated_Source\PSoC4/CyLib.c ****             {
 853:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 854:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 855:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 858:.\Generated_Source\PSoC4/CyLib.c **** 
 859:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 860:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 861:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 862:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 863:.\Generated_Source\PSoC4/CyLib.c ****             }
 864:.\Generated_Source\PSoC4/CyLib.c **** 
 865:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 866:.\Generated_Source\PSoC4/CyLib.c ****         }
 867:.\Generated_Source\PSoC4/CyLib.c ****         else
 868:.\Generated_Source\PSoC4/CyLib.c ****         {
 869:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 870:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 871:.\Generated_Source\PSoC4/CyLib.c ****         }
 872:.\Generated_Source\PSoC4/CyLib.c ****     }
 873:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 20


 874:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 875:.\Generated_Source\PSoC4/CyLib.c **** 
 876:.\Generated_Source\PSoC4/CyLib.c **** 
 877:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 878:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 879:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 880:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 881:.\Generated_Source\PSoC4/CyLib.c ****     *
 882:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 883:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 884:.\Generated_Source\PSoC4/CyLib.c ****     *
 885:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 886:.\Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 887:.\Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
 888:.\Generated_Source\PSoC4/CyLib.c ****     *
 889:.\Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 890:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 891:.\Generated_Source\PSoC4/CyLib.c ****     *
 892:.\Generated_Source\PSoC4/CyLib.c ****     *
 893:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 894:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 895:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 896:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 897:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 898:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 899:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 900:.\Generated_Source\PSoC4/CyLib.c ****     *
 901:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 902:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 903:.\Generated_Source\PSoC4/CyLib.c ****     *
 904:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 905:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 906:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 907:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 908:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 909:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 910:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 911:.\Generated_Source\PSoC4/CyLib.c ****     *
 912:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 913:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 914:.\Generated_Source\PSoC4/CyLib.c ****     {
 915:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 916:.\Generated_Source\PSoC4/CyLib.c **** 
 917:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 918:.\Generated_Source\PSoC4/CyLib.c **** 
 919:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 920:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 921:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 922:.\Generated_Source\PSoC4/CyLib.c **** 
 923:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 924:.\Generated_Source\PSoC4/CyLib.c ****     }
 925:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 926:.\Generated_Source\PSoC4/CyLib.c **** 
 927:.\Generated_Source\PSoC4/CyLib.c **** 
 928:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 929:.\Generated_Source\PSoC4/CyLib.c **** 
 930:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 21


 931:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 932:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 933:.\Generated_Source\PSoC4/CyLib.c ****     *
 934:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 935:.\Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 936:.\Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 937:.\Generated_Source\PSoC4/CyLib.c ****     *
 938:.\Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 939:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 940:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 941:.\Generated_Source\PSoC4/CyLib.c ****     *
 942:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 943:.\Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 944:.\Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 945:.\Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 946:.\Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 947:.\Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 948:.\Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 949:.\Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 950:.\Generated_Source\PSoC4/CyLib.c ****     *
 951:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 952:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 953:.\Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 954:.\Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 955:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 956:.\Generated_Source\PSoC4/CyLib.c ****     *
 957:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 958:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 959:.\Generated_Source\PSoC4/CyLib.c ****     {
 960:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 961:.\Generated_Source\PSoC4/CyLib.c **** 
 962:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 963:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 964:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 965:.\Generated_Source\PSoC4/CyLib.c **** 
 966:.\Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 967:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 968:.\Generated_Source\PSoC4/CyLib.c **** 
 969:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 970:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 971:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 972:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 973:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 974:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 975:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 976:.\Generated_Source\PSoC4/CyLib.c **** 
 977:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 978:.\Generated_Source\PSoC4/CyLib.c ****         {
 979:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 980:.\Generated_Source\PSoC4/CyLib.c **** 
 981:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 982:.\Generated_Source\PSoC4/CyLib.c ****             {
 983:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 984:.\Generated_Source\PSoC4/CyLib.c **** 
 985:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 986:.\Generated_Source\PSoC4/CyLib.c ****                 {
 987:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 22


 988:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 989:.\Generated_Source\PSoC4/CyLib.c ****                 }
 990:.\Generated_Source\PSoC4/CyLib.c ****             }
 991:.\Generated_Source\PSoC4/CyLib.c **** 
 992:.\Generated_Source\PSoC4/CyLib.c ****         }
 993:.\Generated_Source\PSoC4/CyLib.c **** 
 994:.\Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 995:.\Generated_Source\PSoC4/CyLib.c ****     }
 996:.\Generated_Source\PSoC4/CyLib.c **** 
 997:.\Generated_Source\PSoC4/CyLib.c **** 
 998:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1000:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1001:.\Generated_Source\PSoC4/CyLib.c ****     *
1002:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1003:.\Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
1004:.\Generated_Source\PSoC4/CyLib.c ****     *
1005:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1006:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1007:.\Generated_Source\PSoC4/CyLib.c ****     *
1008:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1009:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1010:.\Generated_Source\PSoC4/CyLib.c ****     *
1011:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1012:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1013:.\Generated_Source\PSoC4/CyLib.c ****     {
1014:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1015:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1016:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1017:.\Generated_Source\PSoC4/CyLib.c **** 
1018:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1019:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1020:.\Generated_Source\PSoC4/CyLib.c ****         #else
1021:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1022:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1023:.\Generated_Source\PSoC4/CyLib.c ****     }
1024:.\Generated_Source\PSoC4/CyLib.c **** 
1025:.\Generated_Source\PSoC4/CyLib.c **** 
1026:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1027:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1028:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1029:.\Generated_Source\PSoC4/CyLib.c ****     *
1030:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1031:.\Generated_Source\PSoC4/CyLib.c ****     *  Reads the status bit for the megahertz crystal.
1032:.\Generated_Source\PSoC4/CyLib.c ****     *
1033:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4100 BLE/PSoC 4200 BLE devices, the status bit is the XO_AMP_DETECT
1034:.\Generated_Source\PSoC4/CyLib.c ****     *  bit in FSM register.
1035:.\Generated_Source\PSoC4/CyLib.c ****     *
1036:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1037:.\Generated_Source\PSoC4/CyLib.c ****     *  ECO_STATUS register.
1038:.\Generated_Source\PSoC4/CyLib.c ****     *
1039:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1040:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1041:.\Generated_Source\PSoC4/CyLib.c ****     *
1042:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1043:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4100 BLE/PSoC 4200 BLE:
1044:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO output reached 50 ppm and is oscillating in valid
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 23


1045:.\Generated_Source\PSoC4/CyLib.c ****     *  range.
1046:.\Generated_Source\PSoC4/CyLib.c ****     *
1047:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4200L:
1048:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO is running.
1049:.\Generated_Source\PSoC4/CyLib.c ****     *
1050:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1051:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1052:.\Generated_Source\PSoC4/CyLib.c ****     {
1053:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1054:.\Generated_Source\PSoC4/CyLib.c **** 
1055:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1056:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1057:.\Generated_Source\PSoC4/CyLib.c ****         #else
1058:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1059:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1060:.\Generated_Source\PSoC4/CyLib.c **** 
1061:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1062:.\Generated_Source\PSoC4/CyLib.c ****     }
1063:.\Generated_Source\PSoC4/CyLib.c **** 
1064:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1065:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1066:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1067:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1068:.\Generated_Source\PSoC4/CyLib.c ****         *
1069:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1070:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects value for the ECO divider.
1071:.\Generated_Source\PSoC4/CyLib.c ****         *
1072:.\Generated_Source\PSoC4/CyLib.c ****         *  The ECO must not be the HFCLK clock source when this function is called.
1073:.\Generated_Source\PSoC4/CyLib.c ****         *  The HFCLK source can be changed to the other clock source by call to the
1074:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1075:.\Generated_Source\PSoC4/CyLib.c ****         *  function will not have any effect if compiler in release mode, and halt the
1076:.\Generated_Source\PSoC4/CyLib.c ****         *  CPU when compiler in debug mode.
1077:.\Generated_Source\PSoC4/CyLib.c ****         *
1078:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1079:.\Generated_Source\PSoC4/CyLib.c ****         *  divider: Power of 2 divider selection.
1080:.\Generated_Source\PSoC4/CyLib.c ****         *
1081:.\Generated_Source\PSoC4/CyLib.c ****         *   Define                        Description
1082:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
1083:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
1084:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
1085:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
1086:.\Generated_Source\PSoC4/CyLib.c ****         *
1087:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1088:.\Generated_Source\PSoC4/CyLib.c ****         *  None
1089:.\Generated_Source\PSoC4/CyLib.c ****         *
1090:.\Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1091:.\Generated_Source\PSoC4/CyLib.c ****         *  If the SYSCLK clock frequency increases during the device operation, call
1092:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1093:.\Generated_Source\PSoC4/CyLib.c ****         *  of clock cycles the cache will wait before sampling data comes back from
1094:.\Generated_Source\PSoC4/CyLib.c ****         *  Flash. If the SYSCLK clock frequency decreases, you can call
1095:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() to improve the CPU performance. See
1096:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() description for more information.
1097:.\Generated_Source\PSoC4/CyLib.c ****         *
1098:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1099:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1100:.\Generated_Source\PSoC4/CyLib.c ****         {
1101:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 24


1102:.\Generated_Source\PSoC4/CyLib.c **** 
1103:.\Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1104:.\Generated_Source\PSoC4/CyLib.c ****             {
1105:.\Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1106:.\Generated_Source\PSoC4/CyLib.c **** 
1107:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1108:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1109:.\Generated_Source\PSoC4/CyLib.c **** 
1110:.\Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1111:.\Generated_Source\PSoC4/CyLib.c ****             }
1112:.\Generated_Source\PSoC4/CyLib.c ****             else
1113:.\Generated_Source\PSoC4/CyLib.c ****             {
1114:.\Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1115:.\Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1116:.\Generated_Source\PSoC4/CyLib.c ****             }
1117:.\Generated_Source\PSoC4/CyLib.c ****         }
1118:.\Generated_Source\PSoC4/CyLib.c **** 
1119:.\Generated_Source\PSoC4/CyLib.c ****     #else
1120:.\Generated_Source\PSoC4/CyLib.c **** 
1121:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1122:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1123:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1124:.\Generated_Source\PSoC4/CyLib.c ****         *
1125:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1126:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO. This API is available only for PSoC
1127:.\Generated_Source\PSoC4/CyLib.c ****         *  4200L devices only.
1128:.\Generated_Source\PSoC4/CyLib.c ****         *
1129:.\Generated_Source\PSoC4/CyLib.c ****         *  The following parameters can be trimmed for ECO. The affected registers are
1130:.\Generated_Source\PSoC4/CyLib.c ****         *  ECO_TRIM0 and ECO_TRIM1.
1131:.\Generated_Source\PSoC4/CyLib.c ****         *
1132:.\Generated_Source\PSoC4/CyLib.c ****         *  Watchdog trim - This bit field sets the error threshold below the steady
1133:.\Generated_Source\PSoC4/CyLib.c ****         *  state amplitude level.
1134:.\Generated_Source\PSoC4/CyLib.c ****         *
1135:.\Generated_Source\PSoC4/CyLib.c ****         *  Amplitude trim - This bit field is to set the crystal drive level when
1136:.\Generated_Source\PSoC4/CyLib.c ****         *  ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1137:.\Generated_Source\PSoC4/CyLib.c ****         *  driving a crystal beyond its rated limit can permanently damage the crystal.
1138:.\Generated_Source\PSoC4/CyLib.c ****         *
1139:.\Generated_Source\PSoC4/CyLib.c ****         *  Filter frequency trim - This bit field sets LPF frequency trim and affects
1140:.\Generated_Source\PSoC4/CyLib.c ****         *  the 3rd harmonic content.
1141:.\Generated_Source\PSoC4/CyLib.c ****         *
1142:.\Generated_Source\PSoC4/CyLib.c ****         *  Feedback resistor trim - This bit field sets the feedback resistor trim and
1143:.\Generated_Source\PSoC4/CyLib.c ****         *  impacts the oscillation amplitude.
1144:.\Generated_Source\PSoC4/CyLib.c ****         *
1145:.\Generated_Source\PSoC4/CyLib.c ****         *  Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1146:.\Generated_Source\PSoC4/CyLib.c ****         *  the startup time of the crystal.
1147:.\Generated_Source\PSoC4/CyLib.c ****         *
1148:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1149:.\Generated_Source\PSoC4/CyLib.c ****         *  wDTrim: Watchdog trim
1150:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1151:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1152:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1153:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1154:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1155:.\Generated_Source\PSoC4/CyLib.c ****         *
1156:.\Generated_Source\PSoC4/CyLib.c ****         *  aTrim: Amplitude trim
1157:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1158:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 25


1159:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1160:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1161:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1162:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1163:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1164:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1165:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1166:.\Generated_Source\PSoC4/CyLib.c ****         *
1167:.\Generated_Source\PSoC4/CyLib.c ****         *  fTrim: Filter frequency trim
1168:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1169:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:.\Generated_Source\PSoC4/CyLib.c ****         *
1174:.\Generated_Source\PSoC4/CyLib.c ****         *  rTrim: Feedback resistor trim
1175:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1176:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1177:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1178:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1179:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz        *
1180:.\Generated_Source\PSoC4/CyLib.c ****         *
1181:.\Generated_Source\PSoC4/CyLib.c ****         *  gTrim: Amplifier gain trim. Calculate the minimum required gm
1182:.\Generated_Source\PSoC4/CyLib.c ****         *         (trans-conductance value). Divide the calculated gm value by
1183:.\Generated_Source\PSoC4/CyLib.c ****         *         4.5 to obtain an integer value 'result'. For more information
1184:.\Generated_Source\PSoC4/CyLib.c ****         *         please refer to the device TRM.
1185:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1186:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM0       If result = 1
1187:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM1       If result = 0
1188:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 2
1189:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 3
1190:.\Generated_Source\PSoC4/CyLib.c **** 
1191:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1192:.\Generated_Source\PSoC4/CyLib.c ****         *  None
1193:.\Generated_Source\PSoC4/CyLib.c ****         *
1194:.\Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1195:.\Generated_Source\PSoC4/CyLib.c ****         *  Use care when setting the amplitude trim field because driving a crystal
1196:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1197:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1198:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1199:.\Generated_Source\PSoC4/CyLib.c ****         {
1200:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1201:.\Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1202:.\Generated_Source\PSoC4/CyLib.c **** 
1203:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1204:.\Generated_Source\PSoC4/CyLib.c **** 
1205:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1206:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1207:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1208:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1209:.\Generated_Source\PSoC4/CyLib.c **** 
1210:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1211:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1212:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1213:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1214:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1215:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 26


1216:.\Generated_Source\PSoC4/CyLib.c **** 
1217:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1218:.\Generated_Source\PSoC4/CyLib.c **** 
1219:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1220:.\Generated_Source\PSoC4/CyLib.c ****         }
1221:.\Generated_Source\PSoC4/CyLib.c **** 
1222:.\Generated_Source\PSoC4/CyLib.c **** 
1223:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1224:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1225:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1226:.\Generated_Source\PSoC4/CyLib.c ****         *
1227:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1228:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO based on crystal parameters. Use care
1229:.\Generated_Source\PSoC4/CyLib.c ****         *  when setting the driveLevel parameter because driving a crystal beyond its
1230:.\Generated_Source\PSoC4/CyLib.c ****         *  rated limit can permanently damage the crystal.
1231:.\Generated_Source\PSoC4/CyLib.c ****         *
1232:.\Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4200L devices only.
1233:.\Generated_Source\PSoC4/CyLib.c ****         *
1234:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1235:.\Generated_Source\PSoC4/CyLib.c ****         *  freq: frequency of the crystal in kHz.
1236:.\Generated_Source\PSoC4/CyLib.c ****         *  cLoad: crystal load capacitance in pF.
1237:.\Generated_Source\PSoC4/CyLib.c ****         *  esr: equivalent series resistance of the crystal in ohm.
1238:.\Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1239:.\Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1240:.\Generated_Source\PSoC4/CyLib.c ****         *
1241:.\Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1242:.\Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1243:.\Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1244:.\Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1245:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1246:.\Generated_Source\PSoC4/CyLib.c ****         *
1247:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1248:.\Generated_Source\PSoC4/CyLib.c ****         *  status:
1249:.\Generated_Source\PSoC4/CyLib.c ****         *  CYRET_SUCCESS - ECO configuration completed successfully.
1250:.\Generated_Source\PSoC4/CyLib.c ****         *  CYRET_BAD_PARAM - One or more invalid parameters
1251:.\Generated_Source\PSoC4/CyLib.c ****         *
1252:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1253:.\Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1254:.\Generated_Source\PSoC4/CyLib.c ****         {
1255:.\Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1256:.\Generated_Source\PSoC4/CyLib.c **** 
1257:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1258:.\Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1259:.\Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1260:.\Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1261:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1262:.\Generated_Source\PSoC4/CyLib.c **** 
1263:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1264:.\Generated_Source\PSoC4/CyLib.c **** 
1265:.\Generated_Source\PSoC4/CyLib.c **** 
1266:.\Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1267:.\Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1268:.\Generated_Source\PSoC4/CyLib.c ****             {
1269:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1270:.\Generated_Source\PSoC4/CyLib.c ****             }
1271:.\Generated_Source\PSoC4/CyLib.c ****             else
1272:.\Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 27


1273:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1274:.\Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1275:.\Generated_Source\PSoC4/CyLib.c **** 
1276:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1277:.\Generated_Source\PSoC4/CyLib.c ****                 {
1278:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1279:.\Generated_Source\PSoC4/CyLib.c ****                 }
1280:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1281:.\Generated_Source\PSoC4/CyLib.c ****                 {
1282:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1283:.\Generated_Source\PSoC4/CyLib.c ****                 }
1284:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1285:.\Generated_Source\PSoC4/CyLib.c ****                 {
1286:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1287:.\Generated_Source\PSoC4/CyLib.c ****                 }
1288:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1289:.\Generated_Source\PSoC4/CyLib.c ****                 {
1290:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1291:.\Generated_Source\PSoC4/CyLib.c ****                 }
1292:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1293:.\Generated_Source\PSoC4/CyLib.c ****                 {
1294:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1295:.\Generated_Source\PSoC4/CyLib.c ****                 }
1296:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1297:.\Generated_Source\PSoC4/CyLib.c ****                 {
1298:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1299:.\Generated_Source\PSoC4/CyLib.c ****                 }
1300:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1301:.\Generated_Source\PSoC4/CyLib.c ****                 {
1302:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1303:.\Generated_Source\PSoC4/CyLib.c ****                 }
1304:.\Generated_Source\PSoC4/CyLib.c ****                 else
1305:.\Generated_Source\PSoC4/CyLib.c ****                 {
1306:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1307:.\Generated_Source\PSoC4/CyLib.c ****                 }
1308:.\Generated_Source\PSoC4/CyLib.c **** 
1309:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1310:.\Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1311:.\Generated_Source\PSoC4/CyLib.c **** 
1312:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1313:.\Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1314:.\Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1315:.\Generated_Source\PSoC4/CyLib.c ****                 {
1316:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1317:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1318:.\Generated_Source\PSoC4/CyLib.c ****                 }
1319:.\Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1320:.\Generated_Source\PSoC4/CyLib.c ****                 {
1321:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1322:.\Generated_Source\PSoC4/CyLib.c ****                 }
1323:.\Generated_Source\PSoC4/CyLib.c ****                 else
1324:.\Generated_Source\PSoC4/CyLib.c ****                 {
1325:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1326:.\Generated_Source\PSoC4/CyLib.c ****                 }
1327:.\Generated_Source\PSoC4/CyLib.c **** 
1328:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1329:.\Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 28


1330:.\Generated_Source\PSoC4/CyLib.c ****                 {
1331:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1332:.\Generated_Source\PSoC4/CyLib.c ****                 }
1333:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1334:.\Generated_Source\PSoC4/CyLib.c ****                 {
1335:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1336:.\Generated_Source\PSoC4/CyLib.c ****                 }
1337:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1338:.\Generated_Source\PSoC4/CyLib.c ****                 {
1339:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1340:.\Generated_Source\PSoC4/CyLib.c ****                 }
1341:.\Generated_Source\PSoC4/CyLib.c ****                 else
1342:.\Generated_Source\PSoC4/CyLib.c ****                 {
1343:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1344:.\Generated_Source\PSoC4/CyLib.c ****                 }
1345:.\Generated_Source\PSoC4/CyLib.c **** 
1346:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1347:.\Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1348:.\Generated_Source\PSoC4/CyLib.c **** 
1349:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1350:.\Generated_Source\PSoC4/CyLib.c **** 
1351:.\Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1352:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1353:.\Generated_Source\PSoC4/CyLib.c ****                 {
1354:.\Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1355:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1356:.\Generated_Source\PSoC4/CyLib.c ****                 }
1357:.\Generated_Source\PSoC4/CyLib.c ****                 else
1358:.\Generated_Source\PSoC4/CyLib.c ****                 {
1359:.\Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1360:.\Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1361:.\Generated_Source\PSoC4/CyLib.c ****                     */
1362:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1363:.\Generated_Source\PSoC4/CyLib.c ****                 }
1364:.\Generated_Source\PSoC4/CyLib.c ****             }
1365:.\Generated_Source\PSoC4/CyLib.c **** 
1366:.\Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1367:.\Generated_Source\PSoC4/CyLib.c ****         }
1368:.\Generated_Source\PSoC4/CyLib.c **** 
1369:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1370:.\Generated_Source\PSoC4/CyLib.c **** 
1371:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1372:.\Generated_Source\PSoC4/CyLib.c **** 
1373:.\Generated_Source\PSoC4/CyLib.c **** 
1374:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1375:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1376:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1377:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1378:.\Generated_Source\PSoC4/CyLib.c ****     *
1379:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1380:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the PLL. Optionally waits for it to become stable. Waits at least
1381:.\Generated_Source\PSoC4/CyLib.c ****     *  250 us or until it is detected that the PLL is stable.
1382:.\Generated_Source\PSoC4/CyLib.c ****     *
1383:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1384:.\Generated_Source\PSoC4/CyLib.c ****     *  once the PLL is locked if the wait parameter is 1).
1385:.\Generated_Source\PSoC4/CyLib.c ****     *
1386:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 29


1387:.\Generated_Source\PSoC4/CyLib.c ****     *
1388:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1389:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1390:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1391:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1392:.\Generated_Source\PSoC4/CyLib.c ****     *
1393:.\Generated_Source\PSoC4/CyLib.c ****     *  wait:
1394:.\Generated_Source\PSoC4/CyLib.c ****     *  0 - Return immediately after configuration.
1395:.\Generated_Source\PSoC4/CyLib.c ****     *  1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1396:.\Generated_Source\PSoC4/CyLib.c ****     *  implement the timeout feature.
1397:.\Generated_Source\PSoC4/CyLib.c ****     *
1398:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1399:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1400:.\Generated_Source\PSoC4/CyLib.c ****     *
1401:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_TIMEOUT - The timeout occurred without detecting a stable clock.  If the
1402:.\Generated_Source\PSoC4/CyLib.c ****     *  input source of the clock is jittery, then the lock indication may not occur.
1403:.\Generated_Source\PSoC4/CyLib.c ****     *  However, after the timeout has expired, the generated PLL clock can still be
1404:.\Generated_Source\PSoC4/CyLib.c ****     *  used.
1405:.\Generated_Source\PSoC4/CyLib.c ****     *
1406:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1407:.\Generated_Source\PSoC4/CyLib.c ****     *
1408:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1409:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1410:.\Generated_Source\PSoC4/CyLib.c ****     {
1411:.\Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1412:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1413:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1414:.\Generated_Source\PSoC4/CyLib.c **** 
1415:.\Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1416:.\Generated_Source\PSoC4/CyLib.c ****         {
1417:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1418:.\Generated_Source\PSoC4/CyLib.c **** 
1419:.\Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1420:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1421:.\Generated_Source\PSoC4/CyLib.c **** 
1422:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1423:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1424:.\Generated_Source\PSoC4/CyLib.c **** 
1425:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1426:.\Generated_Source\PSoC4/CyLib.c **** 
1427:.\Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1428:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1429:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1430:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1431:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1432:.\Generated_Source\PSoC4/CyLib.c **** 
1433:.\Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1434:.\Generated_Source\PSoC4/CyLib.c ****             {
1435:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1438:.\Generated_Source\PSoC4/CyLib.c ****                 {
1439:.\Generated_Source\PSoC4/CyLib.c **** 
1440:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1441:.\Generated_Source\PSoC4/CyLib.c ****                     {
1442:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1443:.\Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 30


1444:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1445:.\Generated_Source\PSoC4/CyLib.c ****                     }
1446:.\Generated_Source\PSoC4/CyLib.c **** 
1447:.\Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1448:.\Generated_Source\PSoC4/CyLib.c ****                     counts--;
1449:.\Generated_Source\PSoC4/CyLib.c ****                 }
1450:.\Generated_Source\PSoC4/CyLib.c ****             }
1451:.\Generated_Source\PSoC4/CyLib.c ****         }
1452:.\Generated_Source\PSoC4/CyLib.c ****         else
1453:.\Generated_Source\PSoC4/CyLib.c ****         {
1454:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1455:.\Generated_Source\PSoC4/CyLib.c ****         }
1456:.\Generated_Source\PSoC4/CyLib.c **** 
1457:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1458:.\Generated_Source\PSoC4/CyLib.c ****     }
1459:.\Generated_Source\PSoC4/CyLib.c **** 
1460:.\Generated_Source\PSoC4/CyLib.c **** 
1461:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1462:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1463:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1464:.\Generated_Source\PSoC4/CyLib.c ****     *
1465:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1466:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero if the output of the specified PLL output is locked.
1467:.\Generated_Source\PSoC4/CyLib.c ****     *
1468:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1469:.\Generated_Source\PSoC4/CyLib.c ****     *
1470:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1471:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1472:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1473:.\Generated_Source\PSoC4/CyLib.c ****     *
1474:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1475:.\Generated_Source\PSoC4/CyLib.c ****     *  A non-zero value when the specified PLL is locked.
1476:.\Generated_Source\PSoC4/CyLib.c ****     *
1477:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1478:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1479:.\Generated_Source\PSoC4/CyLib.c ****     {
1480:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1481:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1482:.\Generated_Source\PSoC4/CyLib.c **** 
1483:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1484:.\Generated_Source\PSoC4/CyLib.c **** 
1485:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1486:.\Generated_Source\PSoC4/CyLib.c **** 
1487:.\Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1488:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1489:.\Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1490:.\Generated_Source\PSoC4/CyLib.c ****         {
1491:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1492:.\Generated_Source\PSoC4/CyLib.c ****         }
1493:.\Generated_Source\PSoC4/CyLib.c **** 
1494:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1495:.\Generated_Source\PSoC4/CyLib.c **** 
1496:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1497:.\Generated_Source\PSoC4/CyLib.c ****     }
1498:.\Generated_Source\PSoC4/CyLib.c **** 
1499:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1500:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 31


1501:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1502:.\Generated_Source\PSoC4/CyLib.c ****     *
1503:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1504:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the PLL and isolates its outputs.
1505:.\Generated_Source\PSoC4/CyLib.c ****     *
1506:.\Generated_Source\PSoC4/CyLib.c ****     *  Ensures that either PLL is not the source of HFCLK before it is disabled,
1507:.\Generated_Source\PSoC4/CyLib.c ****     *  otherwise, the CPU will halt.
1508:.\Generated_Source\PSoC4/CyLib.c ****     *
1509:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1510:.\Generated_Source\PSoC4/CyLib.c ****     *
1511:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1512:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1513:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1514:.\Generated_Source\PSoC4/CyLib.c ****     *
1515:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1516:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1517:.\Generated_Source\PSoC4/CyLib.c ****     *
1518:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1519:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1520:.\Generated_Source\PSoC4/CyLib.c ****     {
1521:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1522:.\Generated_Source\PSoC4/CyLib.c **** 
1523:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1524:.\Generated_Source\PSoC4/CyLib.c ****         {
1525:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1526:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1527:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1528:.\Generated_Source\PSoC4/CyLib.c ****         }
1529:.\Generated_Source\PSoC4/CyLib.c ****     }
1530:.\Generated_Source\PSoC4/CyLib.c **** 
1531:.\Generated_Source\PSoC4/CyLib.c **** 
1532:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1533:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1534:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1535:.\Generated_Source\PSoC4/CyLib.c ****     *
1536:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1537:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets feedback (P) and reference the (Q) divider value. This API also sets the
1538:.\Generated_Source\PSoC4/CyLib.c ****     *  programmable charge pump current value. Note that the PLL has to be disabled
1539:.\Generated_Source\PSoC4/CyLib.c ****     *  before calling this API. If this function is called while any PLL is sourcing,
1540:.\Generated_Source\PSoC4/CyLib.c ****     *  the SYSCLK will return an error.
1541:.\Generated_Source\PSoC4/CyLib.c ****     *
1542:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1543:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1544:.\Generated_Source\PSoC4/CyLib.c ****     *
1545:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1546:.\Generated_Source\PSoC4/CyLib.c ****     *
1547:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1548:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1549:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1550:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1551:.\Generated_Source\PSoC4/CyLib.c ****     *
1552:.\Generated_Source\PSoC4/CyLib.c ****     *  feedback: P divider
1553:.\Generated_Source\PSoC4/CyLib.c ****     *   Range 4 - 259. Control bits for the feedback divider
1554:.\Generated_Source\PSoC4/CyLib.c ****     *
1555:.\Generated_Source\PSoC4/CyLib.c ****     *  reference: The Q divider.
1556:.\Generated_Source\PSoC4/CyLib.c ****     *   Range 1 - 64. Divide by the reference.
1557:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 32


1558:.\Generated_Source\PSoC4/CyLib.c ****     *  current: Charge the pump current in uA. The 2 uA for output frequencies
1559:.\Generated_Source\PSoC4/CyLib.c ****     *  of 67 MHz or less, and 3 uA for higher output frequencies. The default
1560:.\Generated_Source\PSoC4/CyLib.c ****     *  value is 2 uA.
1561:.\Generated_Source\PSoC4/CyLib.c ****     *
1562:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1563:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1564:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL sources
1565:.\Generated_Source\PSoC4/CyLib.c ****     *  the system clock.
1566:.\Generated_Source\PSoC4/CyLib.c ****     *
1567:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1568:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1569:.\Generated_Source\PSoC4/CyLib.c ****     {
1570:.\Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1571:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1572:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1573:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1574:.\Generated_Source\PSoC4/CyLib.c **** 
1575:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1576:.\Generated_Source\PSoC4/CyLib.c **** 
1577:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1578:.\Generated_Source\PSoC4/CyLib.c **** 
1579:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1580:.\Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1581:.\Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1582:.\Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1583:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1584:.\Generated_Source\PSoC4/CyLib.c ****         {
1585:.\Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1586:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1587:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1588:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1589:.\Generated_Source\PSoC4/CyLib.c **** 
1590:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1591:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1592:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1593:.\Generated_Source\PSoC4/CyLib.c **** 
1594:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1595:.\Generated_Source\PSoC4/CyLib.c **** 
1596:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1597:.\Generated_Source\PSoC4/CyLib.c ****         }
1598:.\Generated_Source\PSoC4/CyLib.c **** 
1599:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1600:.\Generated_Source\PSoC4/CyLib.c **** 
1601:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1602:.\Generated_Source\PSoC4/CyLib.c ****     }
1603:.\Generated_Source\PSoC4/CyLib.c **** 
1604:.\Generated_Source\PSoC4/CyLib.c **** 
1605:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1606:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1607:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1608:.\Generated_Source\PSoC4/CyLib.c ****     *
1609:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1610:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the bypass mode for the specified PLL.
1611:.\Generated_Source\PSoC4/CyLib.c ****     *
1612:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function.
1613:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL output will glitch during this function call.
1614:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 33


1615:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1616:.\Generated_Source\PSoC4/CyLib.c ****     *
1617:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1618:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1619:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1620:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1621:.\Generated_Source\PSoC4/CyLib.c ****     *
1622:.\Generated_Source\PSoC4/CyLib.c ****     *  bypass: The bypass mode.
1623:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1624:.\Generated_Source\PSoC4/CyLib.c ****     *   automatically selects PLL the reference input (bypass mode). When locked,
1625:.\Generated_Source\PSoC4/CyLib.c ****     *   automatically selects the PLL output.
1626:.\Generated_Source\PSoC4/CyLib.c ****     *
1627:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1628:.\Generated_Source\PSoC4/CyLib.c ****     *   Ignores the lock indicator.
1629:.\Generated_Source\PSoC4/CyLib.c ****     *
1630:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1631:.\Generated_Source\PSoC4/CyLib.c ****     *
1632:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1633:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1634:.\Generated_Source\PSoC4/CyLib.c ****     *
1635:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1636:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1637:.\Generated_Source\PSoC4/CyLib.c ****     {
1638:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1639:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1640:.\Generated_Source\PSoC4/CyLib.c **** 
1641:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1642:.\Generated_Source\PSoC4/CyLib.c **** 
1643:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1644:.\Generated_Source\PSoC4/CyLib.c ****         {
1645:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1646:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1647:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1648:.\Generated_Source\PSoC4/CyLib.c ****         }
1649:.\Generated_Source\PSoC4/CyLib.c **** 
1650:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1651:.\Generated_Source\PSoC4/CyLib.c ****     }
1652:.\Generated_Source\PSoC4/CyLib.c **** 
1653:.\Generated_Source\PSoC4/CyLib.c **** 
1654:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1655:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1656:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1657:.\Generated_Source\PSoC4/CyLib.c ****     *
1658:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1659:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1660:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1661:.\Generated_Source\PSoC4/CyLib.c ****     *
1662:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1663:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1664:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1665:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1666:.\Generated_Source\PSoC4/CyLib.c ****     *
1667:.\Generated_Source\PSoC4/CyLib.c ****     *  Return
1668:.\Generated_Source\PSoC4/CyLib.c ****     *  bypass: Bypass mode.
1669:.\Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1670:.\Generated_Source\PSoC4/CyLib.c ****     *
1671:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 34


1672:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1673:.\Generated_Source\PSoC4/CyLib.c ****     {
1674:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1675:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1676:.\Generated_Source\PSoC4/CyLib.c **** 
1677:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1678:.\Generated_Source\PSoC4/CyLib.c **** 
1679:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1680:.\Generated_Source\PSoC4/CyLib.c **** 
1681:.\Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1682:.\Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1683:.\Generated_Source\PSoC4/CyLib.c **** 
1684:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1685:.\Generated_Source\PSoC4/CyLib.c **** 
1686:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1687:.\Generated_Source\PSoC4/CyLib.c ****     }
1688:.\Generated_Source\PSoC4/CyLib.c **** 
1689:.\Generated_Source\PSoC4/CyLib.c **** 
1690:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1691:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1692:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1693:.\Generated_Source\PSoC4/CyLib.c ****     *
1694:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1695:.\Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1696:.\Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1697:.\Generated_Source\PSoC4/CyLib.c ****     *
1698:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1699:.\Generated_Source\PSoC4/CyLib.c ****     *
1700:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1701:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1702:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1703:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1704:.\Generated_Source\PSoC4/CyLib.c ****     *
1705:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1706:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL sources the System clock and the PLL
1707:.\Generated_Source\PSoC4/CyLib.c ****     *  is not in the bypass mode.
1708:.\Generated_Source\PSoC4/CyLib.c ****     *
1709:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1710:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1711:.\Generated_Source\PSoC4/CyLib.c ****     {
1712:.\Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1713:.\Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1714:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1715:.\Generated_Source\PSoC4/CyLib.c **** 
1716:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1717:.\Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1718:.\Generated_Source\PSoC4/CyLib.c **** 
1719:.\Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1720:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1721:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1722:.\Generated_Source\PSoC4/CyLib.c ****         {
1723:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1724:.\Generated_Source\PSoC4/CyLib.c ****         }
1725:.\Generated_Source\PSoC4/CyLib.c **** 
1726:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1727:.\Generated_Source\PSoC4/CyLib.c ****     }
1728:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 35


1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1731:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1732:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1733:.\Generated_Source\PSoC4/CyLib.c ****     *
1734:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1735:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1736:.\Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1737:.\Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1738:.\Generated_Source\PSoC4/CyLib.c ****     *  this API.
1739:.\Generated_Source\PSoC4/CyLib.c ****     *
1740:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1741:.\Generated_Source\PSoC4/CyLib.c ****     *
1742:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1743:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1744:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1745:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1746:.\Generated_Source\PSoC4/CyLib.c ****     *
1747:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1748:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL was unlocked.
1749:.\Generated_Source\PSoC4/CyLib.c ****     *
1750:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1751:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1752:.\Generated_Source\PSoC4/CyLib.c ****     {
1753:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1754:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1755:.\Generated_Source\PSoC4/CyLib.c **** 
1756:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1757:.\Generated_Source\PSoC4/CyLib.c **** 
1758:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1759:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1760:.\Generated_Source\PSoC4/CyLib.c **** 
1761:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1762:.\Generated_Source\PSoC4/CyLib.c **** 
1763:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1764:.\Generated_Source\PSoC4/CyLib.c ****     }
1765:.\Generated_Source\PSoC4/CyLib.c **** 
1766:.\Generated_Source\PSoC4/CyLib.c **** 
1767:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1768:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1769:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1770:.\Generated_Source\PSoC4/CyLib.c ****     *
1771:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1772:.\Generated_Source\PSoC4/CyLib.c ****     *  Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1773:.\Generated_Source\PSoC4/CyLib.c ****     *  The input frequency is the frequency of the source to the PLL. The source is
1774:.\Generated_Source\PSoC4/CyLib.c ****     *  set using the CySysClkPllSetSource() function.
1775:.\Generated_Source\PSoC4/CyLib.c ****     *
1776:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1777:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1778:.\Generated_Source\PSoC4/CyLib.c ****     *
1779:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1780:.\Generated_Source\PSoC4/CyLib.c ****     *
1781:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1782:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1783:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1784:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1785:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 36


1786:.\Generated_Source\PSoC4/CyLib.c ****     *  inputFreq:
1787:.\Generated_Source\PSoC4/CyLib.c ****     *   The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1788:.\Generated_Source\PSoC4/CyLib.c ****     *
1789:.\Generated_Source\PSoC4/CyLib.c ****     *  pllFreq:
1790:.\Generated_Source\PSoC4/CyLib.c ****     *   The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1791:.\Generated_Source\PSoC4/CyLib.c ****     *
1792:.\Generated_Source\PSoC4/CyLib.c ****     * divider:
1793:.\Generated_Source\PSoC4/CyLib.c ****     *  The output clock divider for the PLL:
1794:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1795:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1796:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1797:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1798:.\Generated_Source\PSoC4/CyLib.c ****     *
1799:.\Generated_Source\PSoC4/CyLib.c ****     * freqTol:
1800:.\Generated_Source\PSoC4/CyLib.c ****     *  The tolerance in ppm, 10 ppm is equal to 0.001%.
1801:.\Generated_Source\PSoC4/CyLib.c ****     *
1802:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1803:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - The PLL was successfully configured for the requested
1804:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency.
1805:.\Generated_Source\PSoC4/CyLib.c ****     *
1806:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The PLL was not able to successfully configure for the
1807:.\Generated_Source\PSoC4/CyLib.c ****     *  requested frequency.
1808:.\Generated_Source\PSoC4/CyLib.c ****     *
1809:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1810:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1811:.\Generated_Source\PSoC4/CyLib.c ****     {
1812:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1813:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1814:.\Generated_Source\PSoC4/CyLib.c **** 
1815:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1816:.\Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1817:.\Generated_Source\PSoC4/CyLib.c **** 
1818:.\Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1819:.\Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1820:.\Generated_Source\PSoC4/CyLib.c **** 
1821:.\Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1822:.\Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1823:.\Generated_Source\PSoC4/CyLib.c **** 
1824:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1825:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:.\Generated_Source\PSoC4/CyLib.c **** 
1827:.\Generated_Source\PSoC4/CyLib.c **** 
1828:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1829:.\Generated_Source\PSoC4/CyLib.c **** 
1830:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1831:.\Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1832:.\Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1833:.\Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1834:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1835:.\Generated_Source\PSoC4/CyLib.c ****         {
1836:.\Generated_Source\PSoC4/CyLib.c **** 
1837:.\Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1838:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1839:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1840:.\Generated_Source\PSoC4/CyLib.c **** 
1841:.\Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1842:.\Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 37


1843:.\Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1844:.\Generated_Source\PSoC4/CyLib.c **** 
1845:.\Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1846:.\Generated_Source\PSoC4/CyLib.c ****             {
1847:.\Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1848:.\Generated_Source\PSoC4/CyLib.c ****                 {
1849:.\Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1850:.\Generated_Source\PSoC4/CyLib.c **** 
1851:.\Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1852:.\Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1853:.\Generated_Source\PSoC4/CyLib.c **** 
1854:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1855:.\Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1856:.\Generated_Source\PSoC4/CyLib.c **** 
1857:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1858:.\Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1859:.\Generated_Source\PSoC4/CyLib.c **** 
1860:.\Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1861:.\Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1862:.\Generated_Source\PSoC4/CyLib.c ****                     {
1863:.\Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1864:.\Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1865:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1866:.\Generated_Source\PSoC4/CyLib.c ****                     }
1867:.\Generated_Source\PSoC4/CyLib.c ****                 }
1868:.\Generated_Source\PSoC4/CyLib.c **** 
1869:.\Generated_Source\PSoC4/CyLib.c **** 
1870:.\Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1871:.\Generated_Source\PSoC4/CyLib.c ****                 {
1872:.\Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1873:.\Generated_Source\PSoC4/CyLib.c ****                     {
1874:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1875:.\Generated_Source\PSoC4/CyLib.c ****                     }
1876:.\Generated_Source\PSoC4/CyLib.c ****                 }
1877:.\Generated_Source\PSoC4/CyLib.c ****             }
1878:.\Generated_Source\PSoC4/CyLib.c **** 
1879:.\Generated_Source\PSoC4/CyLib.c ****         }
1880:.\Generated_Source\PSoC4/CyLib.c **** 
1881:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1882:.\Generated_Source\PSoC4/CyLib.c ****     }
1883:.\Generated_Source\PSoC4/CyLib.c **** 
1884:.\Generated_Source\PSoC4/CyLib.c **** 
1885:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1886:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1887:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1888:.\Generated_Source\PSoC4/CyLib.c ****     *
1889:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1890:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must not be the system clock
1891:.\Generated_Source\PSoC4/CyLib.c ****     *  source when calling this function. The PLL output will glitch during this
1892:.\Generated_Source\PSoC4/CyLib.c ****     *  function call.
1893:.\Generated_Source\PSoC4/CyLib.c ****     *
1894:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1895:.\Generated_Source\PSoC4/CyLib.c ****     *
1896:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1897:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1898:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1899:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 38


1900:.\Generated_Source\PSoC4/CyLib.c ****     *
1901:.\Generated_Source\PSoC4/CyLib.c ****     * source:
1902:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1903:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1904:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1905:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1906:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1907:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1908:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1909:.\Generated_Source\PSoC4/CyLib.c ****     *
1910:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1911:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1912:.\Generated_Source\PSoC4/CyLib.c ****     *
1913:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1914:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1915:.\Generated_Source\PSoC4/CyLib.c ****     {
1916:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1917:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1918:.\Generated_Source\PSoC4/CyLib.c **** 
1919:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1920:.\Generated_Source\PSoC4/CyLib.c **** 
1921:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1922:.\Generated_Source\PSoC4/CyLib.c ****         {
1923:.\Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1924:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1925:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1926:.\Generated_Source\PSoC4/CyLib.c ****         }
1927:.\Generated_Source\PSoC4/CyLib.c **** 
1928:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1929:.\Generated_Source\PSoC4/CyLib.c ****     }
1930:.\Generated_Source\PSoC4/CyLib.c **** 
1931:.\Generated_Source\PSoC4/CyLib.c **** 
1932:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1933:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1934:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1935:.\Generated_Source\PSoC4/CyLib.c ****     *
1936:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1937:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1938:.\Generated_Source\PSoC4/CyLib.c ****     *
1939:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1940:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1941:.\Generated_Source\PSoC4/CyLib.c ****     *
1942:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1943:.\Generated_Source\PSoC4/CyLib.c ****     *
1944:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1945:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1946:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1947:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1948:.\Generated_Source\PSoC4/CyLib.c ****     *
1949:.\Generated_Source\PSoC4/CyLib.c ****     * divider:
1950:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1951:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1952:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1953:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1954:.\Generated_Source\PSoC4/CyLib.c ****     *
1955:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1956:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS   - Completed successfully.
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 39


1957:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL
1958:.\Generated_Source\PSoC4/CyLib.c ****     *                    sources the System clock.
1959:.\Generated_Source\PSoC4/CyLib.c ****     *
1960:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1961:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1962:.\Generated_Source\PSoC4/CyLib.c ****     {
1963:.\Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1964:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1965:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1966:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1967:.\Generated_Source\PSoC4/CyLib.c **** 
1968:.\Generated_Source\PSoC4/CyLib.c **** 
1969:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1970:.\Generated_Source\PSoC4/CyLib.c **** 
1971:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1972:.\Generated_Source\PSoC4/CyLib.c **** 
1973:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1974:.\Generated_Source\PSoC4/CyLib.c ****         {
1975:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1976:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1977:.\Generated_Source\PSoC4/CyLib.c **** 
1978:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1979:.\Generated_Source\PSoC4/CyLib.c **** 
1980:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1981:.\Generated_Source\PSoC4/CyLib.c ****         }
1982:.\Generated_Source\PSoC4/CyLib.c **** 
1983:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1984:.\Generated_Source\PSoC4/CyLib.c **** 
1985:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1986:.\Generated_Source\PSoC4/CyLib.c ****     }
1987:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1988:.\Generated_Source\PSoC4/CyLib.c **** 
1989:.\Generated_Source\PSoC4/CyLib.c **** 
1990:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1991:.\Generated_Source\PSoC4/CyLib.c **** 
1992:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1994:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1995:.\Generated_Source\PSoC4/CyLib.c ****     *
1996:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1997:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1998:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1999:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2000:.\Generated_Source\PSoC4/CyLib.c ****     *
2001:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2002:.\Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
2003:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2004:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2005:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2006:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2007:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2008:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2009:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2010:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2011:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2012:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2013:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 40


2014:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2015:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2016:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2017:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2018:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2019:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2020:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2021:.\Generated_Source\PSoC4/CyLib.c ****     *
2022:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2023:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2024:.\Generated_Source\PSoC4/CyLib.c ****     *
2025:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2026:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2027:.\Generated_Source\PSoC4/CyLib.c ****     {
2028:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2029:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2030:.\Generated_Source\PSoC4/CyLib.c **** 
2031:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2032:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2033:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2034:.\Generated_Source\PSoC4/CyLib.c **** 
2035:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2036:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2037:.\Generated_Source\PSoC4/CyLib.c **** 
2038:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2039:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2040:.\Generated_Source\PSoC4/CyLib.c **** 
2041:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2042:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2043:.\Generated_Source\PSoC4/CyLib.c **** 
2044:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2045:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2046:.\Generated_Source\PSoC4/CyLib.c ****     }
2047:.\Generated_Source\PSoC4/CyLib.c **** 
2048:.\Generated_Source\PSoC4/CyLib.c **** 
2049:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2050:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2051:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2052:.\Generated_Source\PSoC4/CyLib.c ****     *
2053:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2054:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2055:.\Generated_Source\PSoC4/CyLib.c ****     *
2056:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2057:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2058:.\Generated_Source\PSoC4/CyLib.c ****     *
2059:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2060:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2061:.\Generated_Source\PSoC4/CyLib.c ****     *
2062:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2063:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2064:.\Generated_Source\PSoC4/CyLib.c ****     {
 209              		.loc 1 2064 0
 210              		.cfi_startproc
2065:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 211              		.loc 1 2065 0
 212 0000 054A     		ldr	r2, .L17
 213 0002 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 41


 214 0004 0221     		mov	r1, #2
 215 0006 8B43     		bic	r3, r1
 216 0008 1360     		str	r3, [r2]
2066:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 217              		.loc 1 2066 0
 218 000a 044A     		ldr	r2, .L17+4
 219 000c 1368     		ldr	r3, [r2]
 220 000e 0139     		sub	r1, r1, #1
 221 0010 8B43     		bic	r3, r1
 222 0012 1360     		str	r3, [r2]
2067:.\Generated_Source\PSoC4/CyLib.c ****     }
 223              		.loc 1 2067 0
 224              		@ sp needed
 225 0014 7047     		bx	lr
 226              	.L18:
 227 0016 C046     		.align	2
 228              	.L17:
 229 0018 08000B40 		.word	1074462728
 230 001c 18000B40 		.word	1074462744
 231              		.cfi_endproc
 232              	.LFE7:
 233              		.size	CySysLvdDisable, .-CySysLvdDisable
 234              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 235              		.align	2
 236              		.global	CySysLvdGetInterruptSource
 237              		.code	16
 238              		.thumb_func
 239              		.type	CySysLvdGetInterruptSource, %function
 240              	CySysLvdGetInterruptSource:
 241              	.LFB8:
2068:.\Generated_Source\PSoC4/CyLib.c **** 
2069:.\Generated_Source\PSoC4/CyLib.c **** 
2070:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2071:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2072:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2073:.\Generated_Source\PSoC4/CyLib.c ****     *
2074:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2075:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2076:.\Generated_Source\PSoC4/CyLib.c ****     *
2077:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2078:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2079:.\Generated_Source\PSoC4/CyLib.c ****     *
2080:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2081:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2082:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2083:.\Generated_Source\PSoC4/CyLib.c ****     *
2084:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2085:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2086:.\Generated_Source\PSoC4/CyLib.c ****     {
 242              		.loc 1 2086 0
 243              		.cfi_startproc
2087:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 244              		.loc 1 2087 0
 245 0000 024B     		ldr	r3, .L20
 246 0002 1B68     		ldr	r3, [r3]
 247 0004 0220     		mov	r0, #2
 248 0006 1840     		and	r0, r3
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 42


2088:.\Generated_Source\PSoC4/CyLib.c ****     }
 249              		.loc 1 2088 0
 250              		@ sp needed
 251 0008 7047     		bx	lr
 252              	.L21:
 253 000a C046     		.align	2
 254              	.L20:
 255 000c 04000B40 		.word	1074462724
 256              		.cfi_endproc
 257              	.LFE8:
 258              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 259              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 260              		.align	2
 261              		.global	CySysLvdClearInterrupt
 262              		.code	16
 263              		.thumb_func
 264              		.type	CySysLvdClearInterrupt, %function
 265              	CySysLvdClearInterrupt:
 266              	.LFB9:
2089:.\Generated_Source\PSoC4/CyLib.c **** 
2090:.\Generated_Source\PSoC4/CyLib.c **** 
2091:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2093:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2094:.\Generated_Source\PSoC4/CyLib.c ****     *
2095:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2096:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2097:.\Generated_Source\PSoC4/CyLib.c ****     *
2098:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2099:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2100:.\Generated_Source\PSoC4/CyLib.c ****     *
2101:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2102:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2103:.\Generated_Source\PSoC4/CyLib.c ****     *
2104:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2105:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2106:.\Generated_Source\PSoC4/CyLib.c ****     {
 267              		.loc 1 2106 0
 268              		.cfi_startproc
2107:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 269              		.loc 1 2107 0
 270 0000 0222     		mov	r2, #2
 271 0002 014B     		ldr	r3, .L23
 272 0004 1A60     		str	r2, [r3]
2108:.\Generated_Source\PSoC4/CyLib.c ****     }
 273              		.loc 1 2108 0
 274              		@ sp needed
 275 0006 7047     		bx	lr
 276              	.L24:
 277              		.align	2
 278              	.L23:
 279 0008 04000B40 		.word	1074462724
 280              		.cfi_endproc
 281              	.LFE9:
 282              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 283              		.section	.text.CySysGetResetReason,"ax",%progbits
 284              		.align	2
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 43


 285              		.global	CySysGetResetReason
 286              		.code	16
 287              		.thumb_func
 288              		.type	CySysGetResetReason, %function
 289              	CySysGetResetReason:
 290              	.LFB10:
2109:.\Generated_Source\PSoC4/CyLib.c **** 
2110:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2111:.\Generated_Source\PSoC4/CyLib.c **** 
2112:.\Generated_Source\PSoC4/CyLib.c **** 
2113:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2114:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2115:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2116:.\Generated_Source\PSoC4/CyLib.c **** *
2117:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2118:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2119:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2120:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2121:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2122:.\Generated_Source\PSoC4/CyLib.c **** *
2123:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2124:.\Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
2125:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2126:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2127:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2128:.\Generated_Source\PSoC4/CyLib.c **** *
2129:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2130:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2131:.\Generated_Source\PSoC4/CyLib.c **** *
2132:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2133:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2134:.\Generated_Source\PSoC4/CyLib.c **** {
 291              		.loc 1 2134 0
 292              		.cfi_startproc
 293              	.LVL14:
 294 0000 021C     		mov	r2, r0
2135:.\Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2136:.\Generated_Source\PSoC4/CyLib.c **** 
2137:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 295              		.loc 1 2137 0
 296 0002 1920     		mov	r0, #25
 297              	.LVL15:
 298 0004 0240     		and	r2, r0
 299              	.LVL16:
2138:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 300              		.loc 1 2138 0
 301 0006 0249     		ldr	r1, .L26
 302 0008 0B68     		ldr	r3, [r1]
 303 000a 1840     		and	r0, r3
 304              	.LVL17:
2139:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2140:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 305              		.loc 1 2140 0
 306 000c 0A60     		str	r2, [r1]
2141:.\Generated_Source\PSoC4/CyLib.c **** 
2142:.\Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2143:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 44


 307              		.loc 1 2143 0
 308              		@ sp needed
 309 000e 7047     		bx	lr
 310              	.L27:
 311              		.align	2
 312              	.L26:
 313 0010 00030B40 		.word	1074463488
 314              		.cfi_endproc
 315              	.LFE10:
 316              		.size	CySysGetResetReason, .-CySysGetResetReason
 317              		.section	.text.CyDisableInts,"ax",%progbits
 318              		.align	2
 319              		.global	CyDisableInts
 320              		.code	16
 321              		.thumb_func
 322              		.type	CyDisableInts, %function
 323              	CyDisableInts:
 324              	.LFB11:
2144:.\Generated_Source\PSoC4/CyLib.c **** 
2145:.\Generated_Source\PSoC4/CyLib.c **** 
2146:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2147:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2148:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2149:.\Generated_Source\PSoC4/CyLib.c **** *
2150:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2151:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2152:.\Generated_Source\PSoC4/CyLib.c **** *
2153:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2154:.\Generated_Source\PSoC4/CyLib.c **** *  None
2155:.\Generated_Source\PSoC4/CyLib.c **** *
2156:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2157:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2158:.\Generated_Source\PSoC4/CyLib.c **** *
2159:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2160:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2161:.\Generated_Source\PSoC4/CyLib.c **** {
 325              		.loc 1 2161 0
 326              		.cfi_startproc
2162:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2163:.\Generated_Source\PSoC4/CyLib.c **** 
2164:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2165:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 327              		.loc 1 2165 0
 328 0000 024B     		ldr	r3, .L29
 329 0002 1868     		ldr	r0, [r3]
 330              	.LVL18:
2166:.\Generated_Source\PSoC4/CyLib.c **** 
2167:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2168:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 331              		.loc 1 2168 0
 332 0004 0122     		mov	r2, #1
 333 0006 5242     		neg	r2, r2
 334 0008 1A60     		str	r2, [r3]
2169:.\Generated_Source\PSoC4/CyLib.c **** 
2170:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
2171:.\Generated_Source\PSoC4/CyLib.c **** }
 335              		.loc 1 2171 0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 45


 336              		@ sp needed
 337 000a 7047     		bx	lr
 338              	.L30:
 339              		.align	2
 340              	.L29:
 341 000c 80E100E0 		.word	-536813184
 342              		.cfi_endproc
 343              	.LFE11:
 344              		.size	CyDisableInts, .-CyDisableInts
 345              		.section	.text.CyEnableInts,"ax",%progbits
 346              		.align	2
 347              		.global	CyEnableInts
 348              		.code	16
 349              		.thumb_func
 350              		.type	CyEnableInts, %function
 351              	CyEnableInts:
 352              	.LFB12:
2172:.\Generated_Source\PSoC4/CyLib.c **** 
2173:.\Generated_Source\PSoC4/CyLib.c **** 
2174:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2176:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2177:.\Generated_Source\PSoC4/CyLib.c **** *
2178:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2179:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2180:.\Generated_Source\PSoC4/CyLib.c **** *
2181:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2182:.\Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
2183:.\Generated_Source\PSoC4/CyLib.c **** *
2184:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2185:.\Generated_Source\PSoC4/CyLib.c **** *  None
2186:.\Generated_Source\PSoC4/CyLib.c **** *
2187:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2188:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2189:.\Generated_Source\PSoC4/CyLib.c **** {
 353              		.loc 1 2189 0
 354              		.cfi_startproc
 355              	.LVL19:
2190:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 356              		.loc 1 2190 0
 357 0000 014B     		ldr	r3, .L32
 358 0002 1860     		str	r0, [r3]
2191:.\Generated_Source\PSoC4/CyLib.c **** }
 359              		.loc 1 2191 0
 360              		@ sp needed
 361 0004 7047     		bx	lr
 362              	.L33:
 363 0006 C046     		.align	2
 364              	.L32:
 365 0008 00E100E0 		.word	-536813312
 366              		.cfi_endproc
 367              	.LFE12:
 368              		.size	CyEnableInts, .-CyEnableInts
 369              		.section	.text.CyIntEnable,"ax",%progbits
 370              		.align	2
 371              		.global	CyIntEnable
 372              		.code	16
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 46


 373              		.thumb_func
 374              		.type	CyIntEnable, %function
 375              	CyIntEnable:
 376              	.LFB19:
2192:.\Generated_Source\PSoC4/CyLib.c **** 
2193:.\Generated_Source\PSoC4/CyLib.c **** 
2194:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2195:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2196:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2197:.\Generated_Source\PSoC4/CyLib.c **** *
2198:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2199:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2200:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2201:.\Generated_Source\PSoC4/CyLib.c **** *
2202:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2203:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2204:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2205:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2206:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2207:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2208:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2209:.\Generated_Source\PSoC4/CyLib.c **** *
2210:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
2211:.\Generated_Source\PSoC4/CyLib.c **** *
2212:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2213:.\Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
2214:.\Generated_Source\PSoC4/CyLib.c **** *
2215:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2216:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2217:.\Generated_Source\PSoC4/CyLib.c **** {
2218:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2219:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2220:.\Generated_Source\PSoC4/CyLib.c **** 
2221:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2222:.\Generated_Source\PSoC4/CyLib.c **** 
2223:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2224:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2225:.\Generated_Source\PSoC4/CyLib.c **** 
2226:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2227:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2228:.\Generated_Source\PSoC4/CyLib.c **** 
2229:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2230:.\Generated_Source\PSoC4/CyLib.c **** }
2231:.\Generated_Source\PSoC4/CyLib.c **** 
2232:.\Generated_Source\PSoC4/CyLib.c **** 
2233:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2234:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2235:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2236:.\Generated_Source\PSoC4/CyLib.c **** *
2237:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2238:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2239:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2240:.\Generated_Source\PSoC4/CyLib.c **** *
2241:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2242:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2243:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2244:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 47


2245:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2246:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2247:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2248:.\Generated_Source\PSoC4/CyLib.c **** *
2249:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2250:.\Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
2251:.\Generated_Source\PSoC4/CyLib.c **** *
2252:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2253:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2254:.\Generated_Source\PSoC4/CyLib.c **** {
2255:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2256:.\Generated_Source\PSoC4/CyLib.c **** 
2257:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2258:.\Generated_Source\PSoC4/CyLib.c **** 
2259:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2260:.\Generated_Source\PSoC4/CyLib.c **** }
2261:.\Generated_Source\PSoC4/CyLib.c **** 
2262:.\Generated_Source\PSoC4/CyLib.c **** 
2263:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2264:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2265:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2266:.\Generated_Source\PSoC4/CyLib.c **** *
2267:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2268:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2269:.\Generated_Source\PSoC4/CyLib.c **** *
2270:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2271:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2272:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
2273:.\Generated_Source\PSoC4/CyLib.c **** *
2274:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2275:.\Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
2276:.\Generated_Source\PSoC4/CyLib.c **** *
2277:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2278:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2279:.\Generated_Source\PSoC4/CyLib.c **** {
2280:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2281:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2282:.\Generated_Source\PSoC4/CyLib.c **** 
2283:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2284:.\Generated_Source\PSoC4/CyLib.c **** 
2285:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2286:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2287:.\Generated_Source\PSoC4/CyLib.c **** 
2288:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2289:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2290:.\Generated_Source\PSoC4/CyLib.c **** 
2291:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2292:.\Generated_Source\PSoC4/CyLib.c **** }
2293:.\Generated_Source\PSoC4/CyLib.c **** 
2294:.\Generated_Source\PSoC4/CyLib.c **** 
2295:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2296:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2297:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2298:.\Generated_Source\PSoC4/CyLib.c **** *
2299:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2300:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2301:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 48


2302:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2303:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2304:.\Generated_Source\PSoC4/CyLib.c **** *
2305:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2306:.\Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
2307:.\Generated_Source\PSoC4/CyLib.c **** *
2308:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2309:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2310:.\Generated_Source\PSoC4/CyLib.c **** {
2311:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2312:.\Generated_Source\PSoC4/CyLib.c **** 
2313:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2314:.\Generated_Source\PSoC4/CyLib.c **** 
2315:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2316:.\Generated_Source\PSoC4/CyLib.c **** }
2317:.\Generated_Source\PSoC4/CyLib.c **** 
2318:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2319:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2320:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2321:.\Generated_Source\PSoC4/CyLib.c **** *
2322:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2323:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2324:.\Generated_Source\PSoC4/CyLib.c **** *
2325:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2326:.\Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2327:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2328:.\Generated_Source\PSoC4/CyLib.c **** *
2329:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2330:.\Generated_Source\PSoC4/CyLib.c **** *  None
2331:.\Generated_Source\PSoC4/CyLib.c **** *
2332:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2333:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2334:.\Generated_Source\PSoC4/CyLib.c **** {
2335:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2336:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2337:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2338:.\Generated_Source\PSoC4/CyLib.c **** 
2339:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2340:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:.\Generated_Source\PSoC4/CyLib.c **** 
2342:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2343:.\Generated_Source\PSoC4/CyLib.c **** 
2344:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2345:.\Generated_Source\PSoC4/CyLib.c **** 
2346:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2347:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2348:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2349:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2350:.\Generated_Source\PSoC4/CyLib.c **** 
2351:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2352:.\Generated_Source\PSoC4/CyLib.c **** }
2353:.\Generated_Source\PSoC4/CyLib.c **** 
2354:.\Generated_Source\PSoC4/CyLib.c **** 
2355:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2356:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2357:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2358:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 49


2359:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2360:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2361:.\Generated_Source\PSoC4/CyLib.c **** *
2362:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2363:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2364:.\Generated_Source\PSoC4/CyLib.c **** *
2365:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2366:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2367:.\Generated_Source\PSoC4/CyLib.c **** *
2368:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2369:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2370:.\Generated_Source\PSoC4/CyLib.c **** {
2371:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2372:.\Generated_Source\PSoC4/CyLib.c **** 
2373:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2374:.\Generated_Source\PSoC4/CyLib.c **** 
2375:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2376:.\Generated_Source\PSoC4/CyLib.c **** 
2377:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2378:.\Generated_Source\PSoC4/CyLib.c **** }
2379:.\Generated_Source\PSoC4/CyLib.c **** 
2380:.\Generated_Source\PSoC4/CyLib.c **** 
2381:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2382:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2383:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2384:.\Generated_Source\PSoC4/CyLib.c **** *
2385:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2386:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2387:.\Generated_Source\PSoC4/CyLib.c **** *
2388:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2389:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2390:.\Generated_Source\PSoC4/CyLib.c **** *
2391:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2392:.\Generated_Source\PSoC4/CyLib.c **** *  None
2393:.\Generated_Source\PSoC4/CyLib.c **** *
2394:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2395:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2396:.\Generated_Source\PSoC4/CyLib.c **** {
 377              		.loc 1 2396 0
 378              		.cfi_startproc
 379              	.LVL20:
2397:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 380              		.loc 1 2397 0
 381 0000 1F23     		mov	r3, #31
 382 0002 1840     		and	r0, r3
 383              	.LVL21:
 384 0004 1E3B     		sub	r3, r3, #30
 385 0006 8340     		lsl	r3, r3, r0
 386 0008 181C     		mov	r0, r3
 387 000a 014B     		ldr	r3, .L35
 388 000c 1860     		str	r0, [r3]
2398:.\Generated_Source\PSoC4/CyLib.c **** }
 389              		.loc 1 2398 0
 390              		@ sp needed
 391 000e 7047     		bx	lr
 392              	.L36:
 393              		.align	2
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 50


 394              	.L35:
 395 0010 00E100E0 		.word	-536813312
 396              		.cfi_endproc
 397              	.LFE19:
 398              		.size	CyIntEnable, .-CyIntEnable
 399              		.section	.text.CyIntGetState,"ax",%progbits
 400              		.align	2
 401              		.global	CyIntGetState
 402              		.code	16
 403              		.thumb_func
 404              		.type	CyIntGetState, %function
 405              	CyIntGetState:
 406              	.LFB20:
2399:.\Generated_Source\PSoC4/CyLib.c **** 
2400:.\Generated_Source\PSoC4/CyLib.c **** 
2401:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2403:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2404:.\Generated_Source\PSoC4/CyLib.c **** *
2405:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2406:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2407:.\Generated_Source\PSoC4/CyLib.c **** *
2408:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2409:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2410:.\Generated_Source\PSoC4/CyLib.c **** *
2411:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2412:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2413:.\Generated_Source\PSoC4/CyLib.c **** *
2414:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2415:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2416:.\Generated_Source\PSoC4/CyLib.c **** {
 407              		.loc 1 2416 0
 408              		.cfi_startproc
 409              	.LVL22:
2417:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2418:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 410              		.loc 1 2418 0
 411 0000 044B     		ldr	r3, .L38
 412 0002 1B68     		ldr	r3, [r3]
 413 0004 1F22     		mov	r2, #31
 414 0006 1040     		and	r0, r2
 415              	.LVL23:
 416 0008 C340     		lsr	r3, r3, r0
 417 000a 181C     		mov	r0, r3
 418 000c 0123     		mov	r3, #1
 419 000e 1840     		and	r0, r3
2419:.\Generated_Source\PSoC4/CyLib.c **** }
 420              		.loc 1 2419 0
 421              		@ sp needed
 422 0010 7047     		bx	lr
 423              	.L39:
 424 0012 C046     		.align	2
 425              	.L38:
 426 0014 00E100E0 		.word	-536813312
 427              		.cfi_endproc
 428              	.LFE20:
 429              		.size	CyIntGetState, .-CyIntGetState
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 51


 430              		.section	.text.CyIntDisable,"ax",%progbits
 431              		.align	2
 432              		.global	CyIntDisable
 433              		.code	16
 434              		.thumb_func
 435              		.type	CyIntDisable, %function
 436              	CyIntDisable:
 437              	.LFB21:
2420:.\Generated_Source\PSoC4/CyLib.c **** 
2421:.\Generated_Source\PSoC4/CyLib.c **** 
2422:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2423:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2424:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2425:.\Generated_Source\PSoC4/CyLib.c **** *
2426:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2427:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2428:.\Generated_Source\PSoC4/CyLib.c **** *
2429:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2430:.\Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
2431:.\Generated_Source\PSoC4/CyLib.c **** *
2432:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2433:.\Generated_Source\PSoC4/CyLib.c **** *  None
2434:.\Generated_Source\PSoC4/CyLib.c **** *
2435:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2436:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2437:.\Generated_Source\PSoC4/CyLib.c **** {
 438              		.loc 1 2437 0
 439              		.cfi_startproc
 440              	.LVL24:
2438:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 441              		.loc 1 2438 0
 442 0000 1F23     		mov	r3, #31
 443 0002 1840     		and	r0, r3
 444              	.LVL25:
 445 0004 1E3B     		sub	r3, r3, #30
 446 0006 8340     		lsl	r3, r3, r0
 447 0008 181C     		mov	r0, r3
 448 000a 014B     		ldr	r3, .L41
 449 000c 1860     		str	r0, [r3]
2439:.\Generated_Source\PSoC4/CyLib.c **** }
 450              		.loc 1 2439 0
 451              		@ sp needed
 452 000e 7047     		bx	lr
 453              	.L42:
 454              		.align	2
 455              	.L41:
 456 0010 80E100E0 		.word	-536813184
 457              		.cfi_endproc
 458              	.LFE21:
 459              		.size	CyIntDisable, .-CyIntDisable
 460              		.section	.text.CyIntSetPending,"ax",%progbits
 461              		.align	2
 462              		.global	CyIntSetPending
 463              		.code	16
 464              		.thumb_func
 465              		.type	CyIntSetPending, %function
 466              	CyIntSetPending:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 52


 467              	.LFB22:
2440:.\Generated_Source\PSoC4/CyLib.c **** 
2441:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2442:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2443:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2444:.\Generated_Source\PSoC4/CyLib.c **** *
2445:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2446:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2447:.\Generated_Source\PSoC4/CyLib.c **** *
2448:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2449:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2450:.\Generated_Source\PSoC4/CyLib.c **** *
2451:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2452:.\Generated_Source\PSoC4/CyLib.c **** *  None
2453:.\Generated_Source\PSoC4/CyLib.c **** *
2454:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2456:.\Generated_Source\PSoC4/CyLib.c **** {
 468              		.loc 1 2456 0
 469              		.cfi_startproc
 470              	.LVL26:
2457:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 471              		.loc 1 2457 0
 472 0000 1F23     		mov	r3, #31
 473 0002 1840     		and	r0, r3
 474              	.LVL27:
 475 0004 1E3B     		sub	r3, r3, #30
 476 0006 8340     		lsl	r3, r3, r0
 477 0008 181C     		mov	r0, r3
 478 000a 014B     		ldr	r3, .L44
 479 000c 1860     		str	r0, [r3]
2458:.\Generated_Source\PSoC4/CyLib.c **** }
 480              		.loc 1 2458 0
 481              		@ sp needed
 482 000e 7047     		bx	lr
 483              	.L45:
 484              		.align	2
 485              	.L44:
 486 0010 00E200E0 		.word	-536813056
 487              		.cfi_endproc
 488              	.LFE22:
 489              		.size	CyIntSetPending, .-CyIntSetPending
 490              		.section	.text.CyIntClearPending,"ax",%progbits
 491              		.align	2
 492              		.global	CyIntClearPending
 493              		.code	16
 494              		.thumb_func
 495              		.type	CyIntClearPending, %function
 496              	CyIntClearPending:
 497              	.LFB23:
2459:.\Generated_Source\PSoC4/CyLib.c **** 
2460:.\Generated_Source\PSoC4/CyLib.c **** 
2461:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2462:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2463:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2464:.\Generated_Source\PSoC4/CyLib.c **** *
2465:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 53


2466:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2467:.\Generated_Source\PSoC4/CyLib.c **** *
2468:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2469:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2470:.\Generated_Source\PSoC4/CyLib.c **** *
2471:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2472:.\Generated_Source\PSoC4/CyLib.c **** *  None
2473:.\Generated_Source\PSoC4/CyLib.c **** *
2474:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2475:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2476:.\Generated_Source\PSoC4/CyLib.c **** {
 498              		.loc 1 2476 0
 499              		.cfi_startproc
 500              	.LVL28:
2477:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 501              		.loc 1 2477 0
 502 0000 1F23     		mov	r3, #31
 503 0002 1840     		and	r0, r3
 504              	.LVL29:
 505 0004 1E3B     		sub	r3, r3, #30
 506 0006 8340     		lsl	r3, r3, r0
 507 0008 181C     		mov	r0, r3
 508 000a 014B     		ldr	r3, .L47
 509 000c 1860     		str	r0, [r3]
2478:.\Generated_Source\PSoC4/CyLib.c **** }
 510              		.loc 1 2478 0
 511              		@ sp needed
 512 000e 7047     		bx	lr
 513              	.L48:
 514              		.align	2
 515              	.L47:
 516 0010 80E200E0 		.word	-536812928
 517              		.cfi_endproc
 518              	.LFE23:
 519              		.size	CyIntClearPending, .-CyIntClearPending
 520              		.section	.text.CyHalt,"ax",%progbits
 521              		.align	2
 522              		.global	CyHalt
 523              		.code	16
 524              		.thumb_func
 525              		.type	CyHalt, %function
 526              	CyHalt:
 527              	.LFB24:
2479:.\Generated_Source\PSoC4/CyLib.c **** 
2480:.\Generated_Source\PSoC4/CyLib.c **** 
2481:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2482:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2483:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2484:.\Generated_Source\PSoC4/CyLib.c **** *
2485:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2486:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2487:.\Generated_Source\PSoC4/CyLib.c **** *
2488:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2489:.\Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
2490:.\Generated_Source\PSoC4/CyLib.c **** *
2491:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2492:.\Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 54


2493:.\Generated_Source\PSoC4/CyLib.c **** *
2494:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2495:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2496:.\Generated_Source\PSoC4/CyLib.c **** {
 528              		.loc 1 2496 0
 529              		.cfi_startproc
 530              	.LVL30:
2497:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2498:.\Generated_Source\PSoC4/CyLib.c ****     {
2499:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2500:.\Generated_Source\PSoC4/CyLib.c ****     }
2501:.\Generated_Source\PSoC4/CyLib.c **** 
2502:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2503:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2504:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2505:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 531              		.loc 1 2505 0
 532              	@ 2505 ".\Generated_Source\PSoC4\CyLib.c" 1
 533 0000 01BE     		    bkpt    1
 534              	@ 0 "" 2
2506:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2507:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2508:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2509:.\Generated_Source\PSoC4/CyLib.c **** }
 535              		.loc 1 2509 0
 536              		.code	16
 537              		@ sp needed
 538 0002 7047     		bx	lr
 539              		.cfi_endproc
 540              	.LFE24:
 541              		.size	CyHalt, .-CyHalt
 542              		.section	.text.CyIntSetSysVector,"ax",%progbits
 543              		.align	2
 544              		.global	CyIntSetSysVector
 545              		.code	16
 546              		.thumb_func
 547              		.type	CyIntSetSysVector, %function
 548              	CyIntSetSysVector:
 549              	.LFB13:
2217:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 550              		.loc 1 2217 0
 551              		.cfi_startproc
 552              	.LVL31:
 553 0000 38B5     		push	{r3, r4, r5, lr}
 554              		.cfi_def_cfa_offset 16
 555              		.cfi_offset 3, -16
 556              		.cfi_offset 4, -12
 557              		.cfi_offset 5, -8
 558              		.cfi_offset 14, -4
 559 0002 041C     		mov	r4, r0
 560 0004 0D1C     		mov	r5, r1
 561              	.LVL32:
2221:.\Generated_Source\PSoC4/CyLib.c **** 
 562              		.loc 1 2221 0
 563 0006 0F28     		cmp	r0, #15
 564 0008 02D9     		bls	.L51
2221:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 55


 565              		.loc 1 2221 0 is_stmt 0 discriminator 1
 566 000a 0020     		mov	r0, #0
 567              	.LVL33:
 568 000c FFF7FEFF 		bl	CyHalt
 569              	.LVL34:
 570              	.L51:
2224:.\Generated_Source\PSoC4/CyLib.c **** 
 571              		.loc 1 2224 0 is_stmt 1
 572 0010 A400     		lsl	r4, r4, #2
 573 0012 8023     		mov	r3, #128
 574 0014 9B05     		lsl	r3, r3, #22
 575 0016 9C46     		mov	ip, r3
 576 0018 6444     		add	r4, r4, ip
 577 001a 2068     		ldr	r0, [r4]
 578              	.LVL35:
2227:.\Generated_Source\PSoC4/CyLib.c **** 
 579              		.loc 1 2227 0
 580 001c 2560     		str	r5, [r4]
2230:.\Generated_Source\PSoC4/CyLib.c **** 
 581              		.loc 1 2230 0
 582              		@ sp needed
 583              	.LVL36:
 584 001e 38BD     		pop	{r3, r4, r5, pc}
 585              		.cfi_endproc
 586              	.LFE13:
 587              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 588              		.section	.text.CyIntGetSysVector,"ax",%progbits
 589              		.align	2
 590              		.global	CyIntGetSysVector
 591              		.code	16
 592              		.thumb_func
 593              		.type	CyIntGetSysVector, %function
 594              	CyIntGetSysVector:
 595              	.LFB14:
2254:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 596              		.loc 1 2254 0
 597              		.cfi_startproc
 598              	.LVL37:
 599 0000 10B5     		push	{r4, lr}
 600              		.cfi_def_cfa_offset 8
 601              		.cfi_offset 4, -8
 602              		.cfi_offset 14, -4
 603 0002 041E     		sub	r4, r0, #0
 604              	.LVL38:
2257:.\Generated_Source\PSoC4/CyLib.c **** 
 605              		.loc 1 2257 0
 606 0004 0F2C     		cmp	r4, #15
 607 0006 02D9     		bls	.L53
2257:.\Generated_Source\PSoC4/CyLib.c **** 
 608              		.loc 1 2257 0 is_stmt 0 discriminator 1
 609 0008 0020     		mov	r0, #0
 610              	.LVL39:
 611 000a FFF7FEFF 		bl	CyHalt
 612              	.LVL40:
 613              	.L53:
2259:.\Generated_Source\PSoC4/CyLib.c **** }
 614              		.loc 1 2259 0 is_stmt 1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 56


 615 000e A400     		lsl	r4, r4, #2
 616 0010 8023     		mov	r3, #128
 617 0012 9B05     		lsl	r3, r3, #22
 618 0014 9C46     		mov	ip, r3
 619 0016 6444     		add	r4, r4, ip
 620 0018 2068     		ldr	r0, [r4]
2260:.\Generated_Source\PSoC4/CyLib.c **** 
 621              		.loc 1 2260 0
 622              		@ sp needed
 623 001a 10BD     		pop	{r4, pc}
 624              		.cfi_endproc
 625              	.LFE14:
 626              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 627              		.section	.text.CyIntSetVector,"ax",%progbits
 628              		.align	2
 629              		.global	CyIntSetVector
 630              		.code	16
 631              		.thumb_func
 632              		.type	CyIntSetVector, %function
 633              	CyIntSetVector:
 634              	.LFB15:
2279:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 635              		.loc 1 2279 0
 636              		.cfi_startproc
 637              	.LVL41:
 638 0000 38B5     		push	{r3, r4, r5, lr}
 639              		.cfi_def_cfa_offset 16
 640              		.cfi_offset 3, -16
 641              		.cfi_offset 4, -12
 642              		.cfi_offset 5, -8
 643              		.cfi_offset 14, -4
 644 0002 041C     		mov	r4, r0
 645 0004 0D1C     		mov	r5, r1
 646              	.LVL42:
2283:.\Generated_Source\PSoC4/CyLib.c **** 
 647              		.loc 1 2283 0
 648 0006 1F28     		cmp	r0, #31
 649 0008 02D9     		bls	.L55
2283:.\Generated_Source\PSoC4/CyLib.c **** 
 650              		.loc 1 2283 0 is_stmt 0 discriminator 1
 651 000a 0020     		mov	r0, #0
 652              	.LVL43:
 653 000c FFF7FEFF 		bl	CyHalt
 654              	.LVL44:
 655              	.L55:
2286:.\Generated_Source\PSoC4/CyLib.c **** 
 656              		.loc 1 2286 0 is_stmt 1
 657 0010 A400     		lsl	r4, r4, #2
 658 0012 034B     		ldr	r3, .L56
 659 0014 9C46     		mov	ip, r3
 660 0016 6444     		add	r4, r4, ip
 661 0018 2068     		ldr	r0, [r4]
 662              	.LVL45:
2289:.\Generated_Source\PSoC4/CyLib.c **** 
 663              		.loc 1 2289 0
 664 001a 2560     		str	r5, [r4]
2292:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 57


 665              		.loc 1 2292 0
 666              		@ sp needed
 667              	.LVL46:
 668 001c 38BD     		pop	{r3, r4, r5, pc}
 669              	.L57:
 670 001e C046     		.align	2
 671              	.L56:
 672 0020 40000020 		.word	536870976
 673              		.cfi_endproc
 674              	.LFE15:
 675              		.size	CyIntSetVector, .-CyIntSetVector
 676              		.section	.text.CyIntGetVector,"ax",%progbits
 677              		.align	2
 678              		.global	CyIntGetVector
 679              		.code	16
 680              		.thumb_func
 681              		.type	CyIntGetVector, %function
 682              	CyIntGetVector:
 683              	.LFB16:
2310:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 684              		.loc 1 2310 0
 685              		.cfi_startproc
 686              	.LVL47:
 687 0000 10B5     		push	{r4, lr}
 688              		.cfi_def_cfa_offset 8
 689              		.cfi_offset 4, -8
 690              		.cfi_offset 14, -4
 691 0002 041E     		sub	r4, r0, #0
 692              	.LVL48:
2313:.\Generated_Source\PSoC4/CyLib.c **** 
 693              		.loc 1 2313 0
 694 0004 1F2C     		cmp	r4, #31
 695 0006 02D9     		bls	.L59
2313:.\Generated_Source\PSoC4/CyLib.c **** 
 696              		.loc 1 2313 0 is_stmt 0 discriminator 1
 697 0008 0020     		mov	r0, #0
 698              	.LVL49:
 699 000a FFF7FEFF 		bl	CyHalt
 700              	.LVL50:
 701              	.L59:
2315:.\Generated_Source\PSoC4/CyLib.c **** }
 702              		.loc 1 2315 0 is_stmt 1
 703 000e A400     		lsl	r4, r4, #2
 704 0010 024B     		ldr	r3, .L60
 705 0012 9C46     		mov	ip, r3
 706 0014 6444     		add	r4, r4, ip
 707 0016 2068     		ldr	r0, [r4]
2316:.\Generated_Source\PSoC4/CyLib.c **** 
 708              		.loc 1 2316 0
 709              		@ sp needed
 710 0018 10BD     		pop	{r4, pc}
 711              	.L61:
 712 001a C046     		.align	2
 713              	.L60:
 714 001c 40000020 		.word	536870976
 715              		.cfi_endproc
 716              	.LFE16:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 58


 717              		.size	CyIntGetVector, .-CyIntGetVector
 718              		.section	.text.CyIntSetPriority,"ax",%progbits
 719              		.align	2
 720              		.global	CyIntSetPriority
 721              		.code	16
 722              		.thumb_func
 723              		.type	CyIntSetPriority, %function
 724              	CyIntSetPriority:
 725              	.LFB17:
2334:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 726              		.loc 1 2334 0
 727              		.cfi_startproc
 728              	.LVL51:
 729 0000 70B5     		push	{r4, r5, r6, lr}
 730              		.cfi_def_cfa_offset 16
 731              		.cfi_offset 4, -16
 732              		.cfi_offset 5, -12
 733              		.cfi_offset 6, -8
 734              		.cfi_offset 14, -4
 735 0002 041C     		mov	r4, r0
 736 0004 0E1E     		sub	r6, r1, #0
2339:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 737              		.loc 1 2339 0
 738 0006 032E     		cmp	r6, #3
 739 0008 02D9     		bls	.L63
2339:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 740              		.loc 1 2339 0 is_stmt 0 discriminator 1
 741 000a 0020     		mov	r0, #0
 742              	.LVL52:
 743 000c FFF7FEFF 		bl	CyHalt
 744              	.LVL53:
 745              	.L63:
2340:.\Generated_Source\PSoC4/CyLib.c **** 
 746              		.loc 1 2340 0 is_stmt 1
 747 0010 1F2C     		cmp	r4, #31
 748 0012 02D9     		bls	.L64
2340:.\Generated_Source\PSoC4/CyLib.c **** 
 749              		.loc 1 2340 0 is_stmt 0 discriminator 1
 750 0014 0020     		mov	r0, #0
 751 0016 FFF7FEFF 		bl	CyHalt
 752              	.LVL54:
 753              	.L64:
2342:.\Generated_Source\PSoC4/CyLib.c **** 
 754              		.loc 1 2342 0 is_stmt 1
 755 001a 0325     		mov	r5, #3
 756 001c 2540     		and	r5, r4
 757 001e ED00     		lsl	r5, r5, #3
 758 0020 0635     		add	r5, r5, #6
 759              	.LVL55:
2344:.\Generated_Source\PSoC4/CyLib.c **** 
 760              		.loc 1 2344 0
 761 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 762              	.LVL56:
2346:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 763              		.loc 1 2346 0
 764 0026 A408     		lsr	r4, r4, #2
 765 0028 A400     		lsl	r4, r4, #2
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 59


 766 002a 074B     		ldr	r3, .L65
 767 002c 9C46     		mov	ip, r3
 768 002e 6444     		add	r4, r4, ip
 769 0030 2368     		ldr	r3, [r4]
 770              	.LVL57:
2347:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 771              		.loc 1 2347 0
 772 0032 0322     		mov	r2, #3
 773 0034 AA40     		lsl	r2, r2, r5
 774 0036 9343     		bic	r3, r2
 775              	.LVL58:
2348:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 776              		.loc 1 2348 0
 777 0038 AE40     		lsl	r6, r6, r5
 778 003a 351C     		mov	r5, r6
 779              	.LVL59:
 780 003c 1D43     		orr	r5, r3
 781              	.LVL60:
2349:.\Generated_Source\PSoC4/CyLib.c **** 
 782              		.loc 1 2349 0
 783 003e 2560     		str	r5, [r4]
2351:.\Generated_Source\PSoC4/CyLib.c **** }
 784              		.loc 1 2351 0
 785 0040 FFF7FEFF 		bl	CyExitCriticalSection
 786              	.LVL61:
2352:.\Generated_Source\PSoC4/CyLib.c **** 
 787              		.loc 1 2352 0
 788              		@ sp needed
 789              	.LVL62:
 790 0044 70BD     		pop	{r4, r5, r6, pc}
 791              	.L66:
 792 0046 C046     		.align	2
 793              	.L65:
 794 0048 00E400E0 		.word	-536812544
 795              		.cfi_endproc
 796              	.LFE17:
 797              		.size	CyIntSetPriority, .-CyIntSetPriority
 798              		.section	.text.CyIntGetPriority,"ax",%progbits
 799              		.align	2
 800              		.global	CyIntGetPriority
 801              		.code	16
 802              		.thumb_func
 803              		.type	CyIntGetPriority, %function
 804              	CyIntGetPriority:
 805              	.LFB18:
2370:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 806              		.loc 1 2370 0
 807              		.cfi_startproc
 808              	.LVL63:
 809 0000 10B5     		push	{r4, lr}
 810              		.cfi_def_cfa_offset 8
 811              		.cfi_offset 4, -8
 812              		.cfi_offset 14, -4
 813 0002 041E     		sub	r4, r0, #0
2373:.\Generated_Source\PSoC4/CyLib.c **** 
 814              		.loc 1 2373 0
 815 0004 1F2C     		cmp	r4, #31
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 60


 816 0006 02D9     		bls	.L68
2373:.\Generated_Source\PSoC4/CyLib.c **** 
 817              		.loc 1 2373 0 is_stmt 0 discriminator 1
 818 0008 0020     		mov	r0, #0
 819              	.LVL64:
 820 000a FFF7FEFF 		bl	CyHalt
 821              	.LVL65:
 822              	.L68:
2375:.\Generated_Source\PSoC4/CyLib.c **** 
 823              		.loc 1 2375 0 is_stmt 1
 824 000e A308     		lsr	r3, r4, #2
 825 0010 9B00     		lsl	r3, r3, #2
 826 0012 054A     		ldr	r2, .L69
 827 0014 9446     		mov	ip, r2
 828 0016 6344     		add	r3, r3, ip
 829 0018 1868     		ldr	r0, [r3]
 830 001a 0323     		mov	r3, #3
 831 001c 1C40     		and	r4, r3
 832 001e E400     		lsl	r4, r4, #3
 833 0020 0634     		add	r4, r4, #6
 834 0022 E040     		lsr	r0, r0, r4
 835              	.LVL66:
2377:.\Generated_Source\PSoC4/CyLib.c **** }
 836              		.loc 1 2377 0
 837 0024 1840     		and	r0, r3
 838              	.LVL67:
2378:.\Generated_Source\PSoC4/CyLib.c **** 
 839              		.loc 1 2378 0
 840              		@ sp needed
 841 0026 10BD     		pop	{r4, pc}
 842              	.L70:
 843              		.align	2
 844              	.L69:
 845 0028 00E400E0 		.word	-536812544
 846              		.cfi_endproc
 847              	.LFE18:
 848              		.size	CyIntGetPriority, .-CyIntGetPriority
 849              		.section	.text.CySoftwareReset,"ax",%progbits
 850              		.align	2
 851              		.global	CySoftwareReset
 852              		.code	16
 853              		.thumb_func
 854              		.type	CySoftwareReset, %function
 855              	CySoftwareReset:
 856              	.LFB25:
2510:.\Generated_Source\PSoC4/CyLib.c **** 
2511:.\Generated_Source\PSoC4/CyLib.c **** 
2512:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2513:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2514:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2515:.\Generated_Source\PSoC4/CyLib.c **** *
2516:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2517:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2518:.\Generated_Source\PSoC4/CyLib.c **** *
2519:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2520:.\Generated_Source\PSoC4/CyLib.c **** *  None
2521:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 61


2522:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2523:.\Generated_Source\PSoC4/CyLib.c **** *  None
2524:.\Generated_Source\PSoC4/CyLib.c **** *
2525:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2526:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2527:.\Generated_Source\PSoC4/CyLib.c **** {
 857              		.loc 1 2527 0
 858              		.cfi_startproc
2528:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2529:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2530:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2531:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2532:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 859              		.loc 1 2532 0
 860 0000 034A     		ldr	r2, .L72
 861 0002 1368     		ldr	r3, [r2]
 862 0004 1B04     		lsl	r3, r3, #16
 863 0006 1B0C     		lsr	r3, r3, #16
2533:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 864              		.loc 1 2533 0
 865 0008 0249     		ldr	r1, .L72+4
 866 000a 0B43     		orr	r3, r1
2532:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 867              		.loc 1 2532 0
 868 000c 1360     		str	r3, [r2]
2534:.\Generated_Source\PSoC4/CyLib.c **** }
 869              		.loc 1 2534 0
 870              		@ sp needed
 871 000e 7047     		bx	lr
 872              	.L73:
 873              		.align	2
 874              	.L72:
 875 0010 0CED00E0 		.word	-536810228
 876 0014 0400FA05 		.word	100270084
 877              		.cfi_endproc
 878              	.LFE25:
 879              		.size	CySoftwareReset, .-CySoftwareReset
 880              		.section	.text.CyDelay,"ax",%progbits
 881              		.align	2
 882              		.global	CyDelay
 883              		.code	16
 884              		.thumb_func
 885              		.type	CyDelay, %function
 886              	CyDelay:
 887              	.LFB26:
2535:.\Generated_Source\PSoC4/CyLib.c **** 
2536:.\Generated_Source\PSoC4/CyLib.c **** 
2537:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2538:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2539:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2540:.\Generated_Source\PSoC4/CyLib.c **** *
2541:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2542:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2543:.\Generated_Source\PSoC4/CyLib.c **** *
2544:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2545:.\Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
2546:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 62


2547:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2548:.\Generated_Source\PSoC4/CyLib.c **** *  None
2549:.\Generated_Source\PSoC4/CyLib.c **** *
2550:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2551:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2552:.\Generated_Source\PSoC4/CyLib.c **** {
 888              		.loc 1 2552 0
 889              		.cfi_startproc
 890              	.LVL68:
 891 0000 10B5     		push	{r4, lr}
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 4, -8
 894              		.cfi_offset 14, -4
 895 0002 041C     		mov	r4, r0
2553:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 896              		.loc 1 2553 0
 897 0004 06E0     		b	.L75
 898              	.LVL69:
 899              	.L76:
2554:.\Generated_Source\PSoC4/CyLib.c ****     {
2555:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2556:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2557:.\Generated_Source\PSoC4/CyLib.c ****          */
2558:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 900              		.loc 1 2558 0
 901 0006 084B     		ldr	r3, .L77
 902 0008 1868     		ldr	r0, [r3]
 903 000a FFF7FEFF 		bl	CyDelayCycles
 904              	.LVL70:
2559:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 905              		.loc 1 2559 0
 906 000e 074B     		ldr	r3, .L77+4
 907 0010 9C46     		mov	ip, r3
 908 0012 6444     		add	r4, r4, ip
 909              	.LVL71:
 910              	.L75:
2553:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 911              		.loc 1 2553 0
 912 0014 8023     		mov	r3, #128
 913 0016 1B02     		lsl	r3, r3, #8
 914 0018 9C42     		cmp	r4, r3
 915 001a F4D8     		bhi	.L76
2560:.\Generated_Source\PSoC4/CyLib.c ****     }
2561:.\Generated_Source\PSoC4/CyLib.c **** 
2562:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 916              		.loc 1 2562 0
 917 001c 024B     		ldr	r3, .L77
 918 001e 5868     		ldr	r0, [r3, #4]
 919 0020 6043     		mul	r0, r4
 920 0022 FFF7FEFF 		bl	CyDelayCycles
 921              	.LVL72:
2563:.\Generated_Source\PSoC4/CyLib.c **** }
 922              		.loc 1 2563 0
 923              		@ sp needed
 924              	.LVL73:
 925 0026 10BD     		pop	{r4, pc}
 926              	.L78:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 63


 927              		.align	2
 928              	.L77:
 929 0028 00000000 		.word	.LANCHOR0
 930 002c 0080FFFF 		.word	-32768
 931              		.cfi_endproc
 932              	.LFE26:
 933              		.size	CyDelay, .-CyDelay
 934              		.section	.text.CyDelayUs,"ax",%progbits
 935              		.align	2
 936              		.global	CyDelayUs
 937              		.code	16
 938              		.thumb_func
 939              		.type	CyDelayUs, %function
 940              	CyDelayUs:
 941              	.LFB27:
2564:.\Generated_Source\PSoC4/CyLib.c **** 
2565:.\Generated_Source\PSoC4/CyLib.c **** 
2566:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2567:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2568:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2569:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2570:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2571:.\Generated_Source\PSoC4/CyLib.c **** *
2572:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2573:.\Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
2574:.\Generated_Source\PSoC4/CyLib.c **** *
2575:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2576:.\Generated_Source\PSoC4/CyLib.c **** *  None
2577:.\Generated_Source\PSoC4/CyLib.c **** *
2578:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2579:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2580:.\Generated_Source\PSoC4/CyLib.c **** {
 942              		.loc 1 2580 0
 943              		.cfi_startproc
 944              	.LVL74:
 945 0000 08B5     		push	{r3, lr}
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 3, -8
 948              		.cfi_offset 14, -4
2581:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 949              		.loc 1 2581 0
 950 0002 034B     		ldr	r3, .L80
 951 0004 1B7A     		ldrb	r3, [r3, #8]
 952 0006 5843     		mul	r0, r3
 953              	.LVL75:
 954 0008 FFF7FEFF 		bl	CyDelayCycles
 955              	.LVL76:
2582:.\Generated_Source\PSoC4/CyLib.c **** }
 956              		.loc 1 2582 0
 957              		@ sp needed
 958 000c 08BD     		pop	{r3, pc}
 959              	.L81:
 960 000e C046     		.align	2
 961              	.L80:
 962 0010 00000000 		.word	.LANCHOR0
 963              		.cfi_endproc
 964              	.LFE27:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 64


 965              		.size	CyDelayUs, .-CyDelayUs
 966              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 967              		.align	2
 968              		.global	CySysClkWriteImoFreq
 969              		.code	16
 970              		.thumb_func
 971              		.type	CySysClkWriteImoFreq, %function
 972              	CySysClkWriteImoFreq:
 973              	.LFB5:
 623:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 974              		.loc 1 623 0
 975              		.cfi_startproc
 976              	.LVL77:
 977 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 978              		.cfi_def_cfa_offset 20
 979              		.cfi_offset 4, -20
 980              		.cfi_offset 5, -16
 981              		.cfi_offset 6, -12
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 5746     		mov	r7, r10
 985 0004 4E46     		mov	r6, r9
 986 0006 C0B4     		push	{r6, r7}
 987              		.cfi_def_cfa_offset 28
 988              		.cfi_offset 9, -28
 989              		.cfi_offset 10, -24
 990 0008 83B0     		sub	sp, sp, #12
 991              		.cfi_def_cfa_offset 40
 992 000a 041C     		mov	r4, r0
 646:.\Generated_Source\PSoC4/CyLib.c **** 
 993              		.loc 1 646 0
 994 000c FFF7FEFF 		bl	CyEnterCriticalSection
 995              	.LVL78:
 996 0010 0190     		str	r0, [sp, #4]
 997              	.LVL79:
 696:.\Generated_Source\PSoC4/CyLib.c ****         {
 998              		.loc 1 696 0
 999 0012 E71E     		sub	r7, r4, #3
 1000 0014 2D2F     		cmp	r7, #45
 1001 0016 74D8     		bhi	.L83
 698:.\Generated_Source\PSoC4/CyLib.c ****             {
 1002              		.loc 1 698 0
 1003 0018 3F4B     		ldr	r3, .L93
 1004 001a 1B78     		ldrb	r3, [r3]
 1005 001c DBB2     		uxtb	r3, r3
 1006 001e A342     		cmp	r3, r4
 1007 0020 08D3     		bcc	.L84
 700:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1008              		.loc 1 700 0
 1009 0022 3E4B     		ldr	r3, .L93+4
 1010 0024 1B78     		ldrb	r3, [r3]
 1011 0026 DBB2     		uxtb	r3, r3
 1012 0028 9A46     		mov	r10, r3
 1013              	.LVL80:
 701:.\Generated_Source\PSoC4/CyLib.c ****             }
 1014              		.loc 1 701 0
 1015 002a 3D4B     		ldr	r3, .L93+8
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 65


 1016 002c 1B78     		ldrb	r3, [r3]
 1017 002e DBB2     		uxtb	r3, r3
 1018 0030 9946     		mov	r9, r3
 1019              	.LVL81:
 1020 0032 31E0     		b	.L85
 1021              	.LVL82:
 1022              	.L84:
 703:.\Generated_Source\PSoC4/CyLib.c ****             {
 1023              		.loc 1 703 0
 1024 0034 3B4B     		ldr	r3, .L93+12
 1025 0036 1B78     		ldrb	r3, [r3]
 1026 0038 DBB2     		uxtb	r3, r3
 1027 003a A342     		cmp	r3, r4
 1028 003c 08D3     		bcc	.L86
 705:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1029              		.loc 1 705 0
 1030 003e 3A4B     		ldr	r3, .L93+16
 1031 0040 1B78     		ldrb	r3, [r3]
 1032 0042 DBB2     		uxtb	r3, r3
 1033 0044 9A46     		mov	r10, r3
 1034              	.LVL83:
 706:.\Generated_Source\PSoC4/CyLib.c ****             }
 1035              		.loc 1 706 0
 1036 0046 394B     		ldr	r3, .L93+20
 1037 0048 1B78     		ldrb	r3, [r3]
 1038 004a DBB2     		uxtb	r3, r3
 1039 004c 9946     		mov	r9, r3
 1040              	.LVL84:
 1041 004e 23E0     		b	.L85
 1042              	.LVL85:
 1043              	.L86:
 708:.\Generated_Source\PSoC4/CyLib.c ****             {
 1044              		.loc 1 708 0
 1045 0050 374B     		ldr	r3, .L93+24
 1046 0052 1B78     		ldrb	r3, [r3]
 1047 0054 DBB2     		uxtb	r3, r3
 1048 0056 A342     		cmp	r3, r4
 1049 0058 08D3     		bcc	.L87
 710:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1050              		.loc 1 710 0
 1051 005a 364B     		ldr	r3, .L93+28
 1052 005c 1B78     		ldrb	r3, [r3]
 1053 005e DBB2     		uxtb	r3, r3
 1054 0060 9A46     		mov	r10, r3
 1055              	.LVL86:
 711:.\Generated_Source\PSoC4/CyLib.c ****             }
 1056              		.loc 1 711 0
 1057 0062 354B     		ldr	r3, .L93+32
 1058 0064 1B78     		ldrb	r3, [r3]
 1059 0066 DBB2     		uxtb	r3, r3
 1060 0068 9946     		mov	r9, r3
 1061              	.LVL87:
 1062 006a 15E0     		b	.L85
 1063              	.LVL88:
 1064              	.L87:
 713:.\Generated_Source\PSoC4/CyLib.c ****             {
 1065              		.loc 1 713 0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 66


 1066 006c 334B     		ldr	r3, .L93+36
 1067 006e 1B78     		ldrb	r3, [r3]
 1068 0070 DBB2     		uxtb	r3, r3
 1069 0072 A342     		cmp	r3, r4
 1070 0074 08D3     		bcc	.L88
 715:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1071              		.loc 1 715 0
 1072 0076 324B     		ldr	r3, .L93+40
 1073 0078 1B78     		ldrb	r3, [r3]
 1074 007a DBB2     		uxtb	r3, r3
 1075 007c 9A46     		mov	r10, r3
 1076              	.LVL89:
 716:.\Generated_Source\PSoC4/CyLib.c ****             }
 1077              		.loc 1 716 0
 1078 007e 314B     		ldr	r3, .L93+44
 1079 0080 1B78     		ldrb	r3, [r3]
 1080 0082 DBB2     		uxtb	r3, r3
 1081 0084 9946     		mov	r9, r3
 1082              	.LVL90:
 1083 0086 07E0     		b	.L85
 1084              	.LVL91:
 1085              	.L88:
 720:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1086              		.loc 1 720 0
 1087 0088 2F4B     		ldr	r3, .L93+48
 1088 008a 1B78     		ldrb	r3, [r3]
 1089 008c DBB2     		uxtb	r3, r3
 1090 008e 9A46     		mov	r10, r3
 1091              	.LVL92:
 721:.\Generated_Source\PSoC4/CyLib.c ****             }
 1092              		.loc 1 721 0
 1093 0090 2E4B     		ldr	r3, .L93+52
 1094 0092 1B78     		ldrb	r3, [r3]
 1095 0094 DBB2     		uxtb	r3, r3
 1096 0096 9946     		mov	r9, r3
 1097              	.LVL93:
 1098              	.L85:
 725:.\Generated_Source\PSoC4/CyLib.c **** 
 1099              		.loc 1 725 0
 1100 0098 2D4B     		ldr	r3, .L93+56
 1101 009a DE5D     		ldrb	r6, [r3, r7]
 1102              	.LVL94:
 737:.\Generated_Source\PSoC4/CyLib.c ****             {
 1103              		.loc 1 737 0
 1104 009c 2F2E     		cmp	r6, #47
 1105 009e 09D9     		bls	.L89
 737:.\Generated_Source\PSoC4/CyLib.c ****             {
 1106              		.loc 1 737 0 is_stmt 0 discriminator 1
 1107 00a0 2A2C     		cmp	r4, #42
 1108 00a2 07D9     		bls	.L89
 740:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1109              		.loc 1 740 0 is_stmt 1
 1110 00a4 1922     		mov	r2, #25
 1111 00a6 2B4B     		ldr	r3, .L93+60
 1112 00a8 1A60     		str	r2, [r3]
 1113              	.LVL95:
 743:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 67


 1114              		.loc 1 743 0
 1115 00aa 0520     		mov	r0, #5
 1116 00ac FFF7FEFF 		bl	CyDelayCycles
 1117              	.LVL96:
 745:.\Generated_Source\PSoC4/CyLib.c ****             }
 1118              		.loc 1 745 0
 1119 00b0 1925     		mov	r5, #25
 1120 00b2 03E0     		b	.L90
 1121              	.LVL97:
 1122              	.L89:
 749:.\Generated_Source\PSoC4/CyLib.c ****             }
 1123              		.loc 1 749 0
 1124 00b4 274B     		ldr	r3, .L93+60
 1125 00b6 1D68     		ldr	r5, [r3]
 1126 00b8 3F23     		mov	r3, #63
 1127 00ba 1D40     		and	r5, r3
 1128              	.LVL98:
 1129              	.L90:
 761:.\Generated_Source\PSoC4/CyLib.c ****             {
 1130              		.loc 1 761 0
 1131 00bc AE42     		cmp	r6, r5
 1132 00be 06D2     		bcs	.L91
 764:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1133              		.loc 1 764 0
 1134 00c0 234B     		ldr	r3, .L93+56
 1135 00c2 DA5D     		ldrb	r2, [r3, r7]
 1136 00c4 234B     		ldr	r3, .L93+60
 1137 00c6 1A60     		str	r2, [r3]
 765:.\Generated_Source\PSoC4/CyLib.c ****             }
 1138              		.loc 1 765 0
 1139 00c8 0520     		mov	r0, #5
 1140 00ca FFF7FEFF 		bl	CyDelayCycles
 1141              	.LVL99:
 1142              	.L91:
 784:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1143              		.loc 1 784 0
 1144 00ce 1F4B     		ldr	r3, .L93+52
 1145 00d0 9C46     		mov	ip, r3
 1146 00d2 6444     		add	r4, r4, ip
 1147              	.LVL100:
 1148 00d4 2378     		ldrb	r3, [r4]
 1149 00d6 DBB2     		uxtb	r3, r3
 1150              	.LVL101:
 788:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1151              		.loc 1 788 0
 1152 00d8 1F4A     		ldr	r2, .L93+64
 1153 00da 1360     		str	r3, [r2]
 789:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1154              		.loc 1 789 0
 1155 00dc 1F4B     		ldr	r3, .L93+68
 1156              	.LVL102:
 1157 00de 5246     		mov	r2, r10
 1158              	.LVL103:
 1159 00e0 1A60     		str	r2, [r3]
 1160              	.LVL104:
 790:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1161              		.loc 1 790 0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 68


 1162 00e2 1F4B     		ldr	r3, .L93+72
 1163 00e4 4A46     		mov	r2, r9
 1164 00e6 1A60     		str	r2, [r3]
 791:.\Generated_Source\PSoC4/CyLib.c **** 
 1165              		.loc 1 791 0
 1166 00e8 0520     		mov	r0, #5
 1167 00ea FFF7FEFF 		bl	CyDelayUs
 1168              	.LVL105:
 793:.\Generated_Source\PSoC4/CyLib.c ****             {
 1169              		.loc 1 793 0
 1170 00ee AE42     		cmp	r6, r5
 1171 00f0 0AD9     		bls	.L92
 796:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1172              		.loc 1 796 0
 1173 00f2 174B     		ldr	r3, .L93+56
 1174 00f4 DA5D     		ldrb	r2, [r3, r7]
 1175 00f6 174B     		ldr	r3, .L93+60
 1176 00f8 1A60     		str	r2, [r3]
 797:.\Generated_Source\PSoC4/CyLib.c ****             }
 1177              		.loc 1 797 0
 1178 00fa 0520     		mov	r0, #5
 1179 00fc FFF7FEFF 		bl	CyDelayCycles
 1180              	.LVL106:
 1181 0100 02E0     		b	.L92
 1182              	.LVL107:
 1183              	.L83:
 803:.\Generated_Source\PSoC4/CyLib.c ****         }
 1184              		.loc 1 803 0 discriminator 1
 1185 0102 0020     		mov	r0, #0
 1186 0104 FFF7FEFF 		bl	CyHalt
 1187              	.LVL108:
 1188              	.L92:
 822:.\Generated_Source\PSoC4/CyLib.c ****     }
 1189              		.loc 1 822 0
 1190 0108 0198     		ldr	r0, [sp, #4]
 1191 010a FFF7FEFF 		bl	CyExitCriticalSection
 1192              	.LVL109:
 823:.\Generated_Source\PSoC4/CyLib.c **** 
 1193              		.loc 1 823 0
 1194 010e 03B0     		add	sp, sp, #12
 1195              		@ sp needed
 1196              	.LVL110:
 1197 0110 0CBC     		pop	{r2, r3}
 1198 0112 9146     		mov	r9, r2
 1199 0114 9A46     		mov	r10, r3
 1200 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1201              	.L94:
 1202              		.align	2
 1203              	.L93:
 1204 0118 C0F1FF0F 		.word	268431808
 1205 011c C1F1FF0F 		.word	268431809
 1206 0120 C2F1FF0F 		.word	268431810
 1207 0124 C3F1FF0F 		.word	268431811
 1208 0128 C4F1FF0F 		.word	268431812
 1209 012c C5F1FF0F 		.word	268431813
 1210 0130 C6F1FF0F 		.word	268431814
 1211 0134 C7F1FF0F 		.word	268431815
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 69


 1212 0138 C8F1FF0F 		.word	268431816
 1213 013c C9F1FF0F 		.word	268431817
 1214 0140 CAF1FF0F 		.word	268431818
 1215 0144 CBF1FF0F 		.word	268431819
 1216 0148 CCF1FF0F 		.word	268431820
 1217 014c CDF1FF0F 		.word	268431821
 1218 0150 00000000 		.word	.LANCHOR1
 1219 0154 2CFF0B40 		.word	1074528044
 1220 0158 28FF0B40 		.word	1074528040
 1221 015c 1CFF0B40 		.word	1074528028
 1222 0160 20FF0B40 		.word	1074528032
 1223              		.cfi_endproc
 1224              	.LFE5:
 1225              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1226              		.section	.text.CySysLvdEnable,"ax",%progbits
 1227              		.align	2
 1228              		.global	CySysLvdEnable
 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	CySysLvdEnable, %function
 1232              	CySysLvdEnable:
 1233              	.LFB6:
2027:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1234              		.loc 1 2027 0
 1235              		.cfi_startproc
 1236              	.LVL111:
 1237 0000 38B5     		push	{r3, r4, r5, lr}
 1238              		.cfi_def_cfa_offset 16
 1239              		.cfi_offset 3, -16
 1240              		.cfi_offset 4, -12
 1241              		.cfi_offset 5, -8
 1242              		.cfi_offset 14, -4
 1243 0002 031C     		mov	r3, r0
2029:.\Generated_Source\PSoC4/CyLib.c **** 
 1244              		.loc 1 2029 0
 1245 0004 0D4C     		ldr	r4, .L96
 1246 0006 2268     		ldr	r2, [r4]
 1247 0008 0225     		mov	r5, #2
 1248 000a AA43     		bic	r2, r5
 1249 000c 2260     		str	r2, [r4]
2032:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1250              		.loc 1 2032 0
 1251 000e 0C4A     		ldr	r2, .L96+4
 1252 0010 1168     		ldr	r1, [r2]
 1253 0012 1E20     		mov	r0, #30
 1254              	.LVL112:
 1255 0014 8143     		bic	r1, r0
2033:.\Generated_Source\PSoC4/CyLib.c **** 
 1256              		.loc 1 2033 0
 1257 0016 5B00     		lsl	r3, r3, #1
 1258              	.LVL113:
 1259 0018 1840     		and	r0, r3
2032:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1260              		.loc 1 2032 0
 1261 001a 0843     		orr	r0, r1
 1262 001c 1060     		str	r0, [r2]
2036:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 70


 1263              		.loc 1 2036 0
 1264 001e 1168     		ldr	r1, [r2]
 1265 0020 0123     		mov	r3, #1
 1266 0022 0B43     		orr	r3, r1
 1267 0024 1360     		str	r3, [r2]
2039:.\Generated_Source\PSoC4/CyLib.c **** 
 1268              		.loc 1 2039 0
 1269 0026 FA20     		mov	r0, #250
 1270 0028 8000     		lsl	r0, r0, #2
 1271 002a FFF7FEFF 		bl	CyDelayUs
 1272              	.LVL114:
2042:.\Generated_Source\PSoC4/CyLib.c **** 
 1273              		.loc 1 2042 0
 1274 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1275              	.LVL115:
2045:.\Generated_Source\PSoC4/CyLib.c ****     }
 1276              		.loc 1 2045 0
 1277 0032 2368     		ldr	r3, [r4]
 1278 0034 1D43     		orr	r5, r3
 1279 0036 2560     		str	r5, [r4]
2046:.\Generated_Source\PSoC4/CyLib.c **** 
 1280              		.loc 1 2046 0
 1281              		@ sp needed
 1282 0038 38BD     		pop	{r3, r4, r5, pc}
 1283              	.L97:
 1284 003a C046     		.align	2
 1285              	.L96:
 1286 003c 08000B40 		.word	1074462728
 1287 0040 18000B40 		.word	1074462744
 1288              		.cfi_endproc
 1289              	.LFE6:
 1290              		.size	CySysLvdEnable, .-CySysLvdEnable
 1291              		.global	__aeabi_uidiv
 1292              		.section	.text.CyDelayFreq,"ax",%progbits
 1293              		.align	2
 1294              		.global	CyDelayFreq
 1295              		.code	16
 1296              		.thumb_func
 1297              		.type	CyDelayFreq, %function
 1298              	CyDelayFreq:
 1299              	.LFB28:
2583:.\Generated_Source\PSoC4/CyLib.c **** 
2584:.\Generated_Source\PSoC4/CyLib.c **** 
2585:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2586:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2587:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2588:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2589:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2590:.\Generated_Source\PSoC4/CyLib.c **** *
2591:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2592:.\Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
2593:.\Generated_Source\PSoC4/CyLib.c **** *
2594:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2595:.\Generated_Source\PSoC4/CyLib.c **** *  None
2596:.\Generated_Source\PSoC4/CyLib.c **** *
2597:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2598:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 71


2599:.\Generated_Source\PSoC4/CyLib.c **** {
 1300              		.loc 1 2599 0
 1301              		.cfi_startproc
 1302              	.LVL116:
 1303 0000 38B5     		push	{r3, r4, r5, lr}
 1304              		.cfi_def_cfa_offset 16
 1305              		.cfi_offset 3, -16
 1306              		.cfi_offset 4, -12
 1307              		.cfi_offset 5, -8
 1308              		.cfi_offset 14, -4
2600:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1309              		.loc 1 2600 0
 1310 0002 0028     		cmp	r0, #0
 1311 0004 02D0     		beq	.L99
2601:.\Generated_Source\PSoC4/CyLib.c ****     {
2602:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1312              		.loc 1 2602 0
 1313 0006 0C4B     		ldr	r3, .L101
 1314 0008 D860     		str	r0, [r3, #12]
 1315 000a 02E0     		b	.L100
 1316              	.L99:
2603:.\Generated_Source\PSoC4/CyLib.c ****     }
2604:.\Generated_Source\PSoC4/CyLib.c ****     else
2605:.\Generated_Source\PSoC4/CyLib.c ****     {
2606:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1317              		.loc 1 2606 0
 1318 000c 0B4A     		ldr	r2, .L101+4
 1319 000e 0A4B     		ldr	r3, .L101
 1320 0010 DA60     		str	r2, [r3, #12]
 1321              	.L100:
2607:.\Generated_Source\PSoC4/CyLib.c ****     }
2608:.\Generated_Source\PSoC4/CyLib.c **** 
2609:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1322              		.loc 1 2609 0
 1323 0012 094C     		ldr	r4, .L101
 1324 0014 E568     		ldr	r5, [r4, #12]
 1325 0016 0A4B     		ldr	r3, .L101+8
 1326 0018 E818     		add	r0, r5, r3
 1327              	.LVL117:
 1328 001a 0A49     		ldr	r1, .L101+12
 1329 001c FFF7FEFF 		bl	__aeabi_uidiv
 1330              	.LVL118:
 1331 0020 2072     		strb	r0, [r4, #8]
2610:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1332              		.loc 1 2610 0
 1333 0022 094B     		ldr	r3, .L101+16
 1334 0024 E818     		add	r0, r5, r3
 1335 0026 FA21     		mov	r1, #250
 1336 0028 8900     		lsl	r1, r1, #2
 1337 002a FFF7FEFF 		bl	__aeabi_uidiv
 1338              	.LVL119:
 1339 002e 6060     		str	r0, [r4, #4]
2611:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1340              		.loc 1 2611 0
 1341 0030 C003     		lsl	r0, r0, #15
 1342 0032 2060     		str	r0, [r4]
2612:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 72


 1343              		.loc 1 2612 0
 1344              		@ sp needed
 1345 0034 38BD     		pop	{r3, r4, r5, pc}
 1346              	.L102:
 1347 0036 C046     		.align	2
 1348              	.L101:
 1349 0038 00000000 		.word	.LANCHOR0
 1350 003c 00366E01 		.word	24000000
 1351 0040 3F420F00 		.word	999999
 1352 0044 40420F00 		.word	1000000
 1353 0048 E7030000 		.word	999
 1354              		.cfi_endproc
 1355              	.LFE28:
 1356              		.size	CyDelayFreq, .-CyDelayFreq
 1357              		.section	.text.CySysTickStop,"ax",%progbits
 1358              		.align	2
 1359              		.global	CySysTickStop
 1360              		.code	16
 1361              		.thumb_func
 1362              		.type	CySysTickStop, %function
 1363              	CySysTickStop:
 1364              	.LFB32:
2613:.\Generated_Source\PSoC4/CyLib.c **** 
2614:.\Generated_Source\PSoC4/CyLib.c **** 
2615:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2616:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStart
2617:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2618:.\Generated_Source\PSoC4/CyLib.c **** *
2619:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2620:.\Generated_Source\PSoC4/CyLib.c **** *  Configures the SysTick timer to generate an interrupt every 1 ms and enables
2621:.\Generated_Source\PSoC4/CyLib.c **** *  the interrupt. Refer to the corresponding function description for details.
2622:.\Generated_Source\PSoC4/CyLib.c **** *
2623:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2624:.\Generated_Source\PSoC4/CyLib.c **** *  None
2625:.\Generated_Source\PSoC4/CyLib.c **** *
2626:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2627:.\Generated_Source\PSoC4/CyLib.c **** *  None
2628:.\Generated_Source\PSoC4/CyLib.c **** *
2629:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2630:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2631:.\Generated_Source\PSoC4/CyLib.c **** *
2632:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2634:.\Generated_Source\PSoC4/CyLib.c **** {
2635:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2636:.\Generated_Source\PSoC4/CyLib.c ****     {
2637:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2638:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2639:.\Generated_Source\PSoC4/CyLib.c ****     }
2640:.\Generated_Source\PSoC4/CyLib.c **** 
2641:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2642:.\Generated_Source\PSoC4/CyLib.c **** }
2643:.\Generated_Source\PSoC4/CyLib.c **** 
2644:.\Generated_Source\PSoC4/CyLib.c **** 
2645:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2646:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2647:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 73


2648:.\Generated_Source\PSoC4/CyLib.c **** *
2649:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2650:.\Generated_Source\PSoC4/CyLib.c ****     *  Initializes the callback addresses with pointers to NULL, associates the
2651:.\Generated_Source\PSoC4/CyLib.c ****     *  SysTick system vector with the function that is responsible for calling
2652:.\Generated_Source\PSoC4/CyLib.c ****     *  registered callback functions, configures SysTick timer to generate interrupt
2653:.\Generated_Source\PSoC4/CyLib.c ****     *  every 1 ms.
2654:.\Generated_Source\PSoC4/CyLib.c ****     *
2655:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2656:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2657:.\Generated_Source\PSoC4/CyLib.c ****     *
2658:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2659:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2660:.\Generated_Source\PSoC4/CyLib.c ****     *
2661:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
2662:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set.
2663:.\Generated_Source\PSoC4/CyLib.c ****     *
2664:.\Generated_Source\PSoC4/CyLib.c ****     *  The 1 ms interrupt interval is configured based on the frequency determined
2665:.\Generated_Source\PSoC4/CyLib.c ****     *  by PSoC Creator at build time. If System clock frequency is changed in
2666:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2667:.\Generated_Source\PSoC4/CyLib.c ****     *
2668:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickInit(void)
2670:.\Generated_Source\PSoC4/CyLib.c ****     {
2671:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
2672:.\Generated_Source\PSoC4/CyLib.c **** 
2673:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2674:.\Generated_Source\PSoC4/CyLib.c ****     {
2675:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2676:.\Generated_Source\PSoC4/CyLib.c ****     }
2677:.\Generated_Source\PSoC4/CyLib.c **** 
2678:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2679:.\Generated_Source\PSoC4/CyLib.c **** 
2680:.\Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2681:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2682:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2683:.\Generated_Source\PSoC4/CyLib.c **** 
2684:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2685:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2686:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2687:.\Generated_Source\PSoC4/CyLib.c **** }
2688:.\Generated_Source\PSoC4/CyLib.c **** 
2689:.\Generated_Source\PSoC4/CyLib.c **** 
2690:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2691:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2692:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2693:.\Generated_Source\PSoC4/CyLib.c **** *
2694:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2695:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2696:.\Generated_Source\PSoC4/CyLib.c **** *
2697:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2698:.\Generated_Source\PSoC4/CyLib.c **** *  None
2699:.\Generated_Source\PSoC4/CyLib.c **** *
2700:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2701:.\Generated_Source\PSoC4/CyLib.c **** *  None
2702:.\Generated_Source\PSoC4/CyLib.c **** *
2703:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2704:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 74


2705:.\Generated_Source\PSoC4/CyLib.c **** *
2706:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2708:.\Generated_Source\PSoC4/CyLib.c **** {
2709:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2710:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2711:.\Generated_Source\PSoC4/CyLib.c **** }
2712:.\Generated_Source\PSoC4/CyLib.c **** 
2713:.\Generated_Source\PSoC4/CyLib.c **** 
2714:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2715:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2716:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2717:.\Generated_Source\PSoC4/CyLib.c **** *
2718:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2719:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2720:.\Generated_Source\PSoC4/CyLib.c **** *
2721:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2722:.\Generated_Source\PSoC4/CyLib.c **** *  None
2723:.\Generated_Source\PSoC4/CyLib.c **** *
2724:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2725:.\Generated_Source\PSoC4/CyLib.c **** *  None
2726:.\Generated_Source\PSoC4/CyLib.c **** *
2727:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2728:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2729:.\Generated_Source\PSoC4/CyLib.c **** *
2730:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2731:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2732:.\Generated_Source\PSoC4/CyLib.c **** {
 1365              		.loc 1 2732 0
 1366              		.cfi_startproc
2733:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1367              		.loc 1 2733 0
 1368 0000 024A     		ldr	r2, .L104
 1369 0002 1368     		ldr	r3, [r2]
 1370 0004 0121     		mov	r1, #1
 1371 0006 8B43     		bic	r3, r1
 1372 0008 1360     		str	r3, [r2]
2734:.\Generated_Source\PSoC4/CyLib.c **** }
 1373              		.loc 1 2734 0
 1374              		@ sp needed
 1375 000a 7047     		bx	lr
 1376              	.L105:
 1377              		.align	2
 1378              	.L104:
 1379 000c 10E000E0 		.word	-536813552
 1380              		.cfi_endproc
 1381              	.LFE32:
 1382              		.size	CySysTickStop, .-CySysTickStop
 1383              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1384              		.align	2
 1385              		.global	CySysTickEnableInterrupt
 1386              		.code	16
 1387              		.thumb_func
 1388              		.type	CySysTickEnableInterrupt, %function
 1389              	CySysTickEnableInterrupt:
 1390              	.LFB33:
2735:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 75


2736:.\Generated_Source\PSoC4/CyLib.c **** 
2737:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2738:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2739:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2740:.\Generated_Source\PSoC4/CyLib.c **** *
2741:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2742:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2743:.\Generated_Source\PSoC4/CyLib.c **** *
2744:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2745:.\Generated_Source\PSoC4/CyLib.c **** *  None
2746:.\Generated_Source\PSoC4/CyLib.c **** *
2747:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2748:.\Generated_Source\PSoC4/CyLib.c **** *  None
2749:.\Generated_Source\PSoC4/CyLib.c **** *
2750:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2751:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2752:.\Generated_Source\PSoC4/CyLib.c **** *
2753:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2755:.\Generated_Source\PSoC4/CyLib.c **** {
 1391              		.loc 1 2755 0
 1392              		.cfi_startproc
2756:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1393              		.loc 1 2756 0
 1394 0000 024A     		ldr	r2, .L107
 1395 0002 1168     		ldr	r1, [r2]
 1396 0004 0223     		mov	r3, #2
 1397 0006 0B43     		orr	r3, r1
 1398 0008 1360     		str	r3, [r2]
2757:.\Generated_Source\PSoC4/CyLib.c **** }
 1399              		.loc 1 2757 0
 1400              		@ sp needed
 1401 000a 7047     		bx	lr
 1402              	.L108:
 1403              		.align	2
 1404              	.L107:
 1405 000c 10E000E0 		.word	-536813552
 1406              		.cfi_endproc
 1407              	.LFE33:
 1408              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1409              		.section	.text.CySysTickEnable,"ax",%progbits
 1410              		.align	2
 1411              		.global	CySysTickEnable
 1412              		.code	16
 1413              		.thumb_func
 1414              		.type	CySysTickEnable, %function
 1415              	CySysTickEnable:
 1416              	.LFB31:
2708:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1417              		.loc 1 2708 0
 1418              		.cfi_startproc
 1419 0000 08B5     		push	{r3, lr}
 1420              		.cfi_def_cfa_offset 8
 1421              		.cfi_offset 3, -8
 1422              		.cfi_offset 14, -4
2709:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1423              		.loc 1 2709 0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 76


 1424 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1425              	.LVL120:
2710:.\Generated_Source\PSoC4/CyLib.c **** }
 1426              		.loc 1 2710 0
 1427 0006 034A     		ldr	r2, .L110
 1428 0008 1168     		ldr	r1, [r2]
 1429 000a 0123     		mov	r3, #1
 1430 000c 0B43     		orr	r3, r1
 1431 000e 1360     		str	r3, [r2]
2711:.\Generated_Source\PSoC4/CyLib.c **** 
 1432              		.loc 1 2711 0
 1433              		@ sp needed
 1434 0010 08BD     		pop	{r3, pc}
 1435              	.L111:
 1436 0012 C046     		.align	2
 1437              	.L110:
 1438 0014 10E000E0 		.word	-536813552
 1439              		.cfi_endproc
 1440              	.LFE31:
 1441              		.size	CySysTickEnable, .-CySysTickEnable
 1442              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1443              		.align	2
 1444              		.global	CySysTickDisableInterrupt
 1445              		.code	16
 1446              		.thumb_func
 1447              		.type	CySysTickDisableInterrupt, %function
 1448              	CySysTickDisableInterrupt:
 1449              	.LFB34:
2758:.\Generated_Source\PSoC4/CyLib.c **** 
2759:.\Generated_Source\PSoC4/CyLib.c **** 
2760:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2762:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2763:.\Generated_Source\PSoC4/CyLib.c **** *
2764:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2765:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2766:.\Generated_Source\PSoC4/CyLib.c **** *
2767:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2768:.\Generated_Source\PSoC4/CyLib.c **** *  None
2769:.\Generated_Source\PSoC4/CyLib.c **** *
2770:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2771:.\Generated_Source\PSoC4/CyLib.c **** *  None
2772:.\Generated_Source\PSoC4/CyLib.c **** *
2773:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2774:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2775:.\Generated_Source\PSoC4/CyLib.c **** *
2776:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2777:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2778:.\Generated_Source\PSoC4/CyLib.c **** {
 1450              		.loc 1 2778 0
 1451              		.cfi_startproc
2779:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1452              		.loc 1 2779 0
 1453 0000 024A     		ldr	r2, .L113
 1454 0002 1368     		ldr	r3, [r2]
 1455 0004 0221     		mov	r1, #2
 1456 0006 8B43     		bic	r3, r1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 77


 1457 0008 1360     		str	r3, [r2]
2780:.\Generated_Source\PSoC4/CyLib.c **** }
 1458              		.loc 1 2780 0
 1459              		@ sp needed
 1460 000a 7047     		bx	lr
 1461              	.L114:
 1462              		.align	2
 1463              	.L113:
 1464 000c 10E000E0 		.word	-536813552
 1465              		.cfi_endproc
 1466              	.LFE34:
 1467              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1468              		.section	.text.CySysTickSetReload,"ax",%progbits
 1469              		.align	2
 1470              		.global	CySysTickSetReload
 1471              		.code	16
 1472              		.thumb_func
 1473              		.type	CySysTickSetReload, %function
 1474              	CySysTickSetReload:
 1475              	.LFB35:
2781:.\Generated_Source\PSoC4/CyLib.c **** 
2782:.\Generated_Source\PSoC4/CyLib.c **** 
2783:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2784:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2785:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2786:.\Generated_Source\PSoC4/CyLib.c **** *
2787:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2788:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2789:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2790:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2791:.\Generated_Source\PSoC4/CyLib.c **** *
2792:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2793:.\Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2794:.\Generated_Source\PSoC4/CyLib.c **** *
2795:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2796:.\Generated_Source\PSoC4/CyLib.c **** *  None
2797:.\Generated_Source\PSoC4/CyLib.c **** *
2798:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2799:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2800:.\Generated_Source\PSoC4/CyLib.c **** {
 1476              		.loc 1 2800 0
 1477              		.cfi_startproc
 1478              	.LVL121:
2801:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1479              		.loc 1 2801 0
 1480 0000 0002     		lsl	r0, r0, #8
 1481              	.LVL122:
 1482 0002 000A     		lsr	r0, r0, #8
 1483 0004 014B     		ldr	r3, .L116
 1484 0006 1860     		str	r0, [r3]
2802:.\Generated_Source\PSoC4/CyLib.c **** }
 1485              		.loc 1 2802 0
 1486              		@ sp needed
 1487 0008 7047     		bx	lr
 1488              	.L117:
 1489 000a C046     		.align	2
 1490              	.L116:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 78


 1491 000c 14E000E0 		.word	-536813548
 1492              		.cfi_endproc
 1493              	.LFE35:
 1494              		.size	CySysTickSetReload, .-CySysTickSetReload
 1495              		.section	.text.CySysTickGetReload,"ax",%progbits
 1496              		.align	2
 1497              		.global	CySysTickGetReload
 1498              		.code	16
 1499              		.thumb_func
 1500              		.type	CySysTickGetReload, %function
 1501              	CySysTickGetReload:
 1502              	.LFB36:
2803:.\Generated_Source\PSoC4/CyLib.c **** 
2804:.\Generated_Source\PSoC4/CyLib.c **** 
2805:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2806:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2807:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2808:.\Generated_Source\PSoC4/CyLib.c **** *
2809:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2810:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
2811:.\Generated_Source\PSoC4/CyLib.c **** *
2812:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2813:.\Generated_Source\PSoC4/CyLib.c **** *  None
2814:.\Generated_Source\PSoC4/CyLib.c **** *
2815:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2816:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2817:.\Generated_Source\PSoC4/CyLib.c **** *
2818:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2819:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2820:.\Generated_Source\PSoC4/CyLib.c **** {
 1503              		.loc 1 2820 0
 1504              		.cfi_startproc
2821:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1505              		.loc 1 2821 0
 1506 0000 024B     		ldr	r3, .L119
 1507 0002 1868     		ldr	r0, [r3]
 1508 0004 0002     		lsl	r0, r0, #8
 1509 0006 000A     		lsr	r0, r0, #8
2822:.\Generated_Source\PSoC4/CyLib.c **** }
 1510              		.loc 1 2822 0
 1511              		@ sp needed
 1512 0008 7047     		bx	lr
 1513              	.L120:
 1514 000a C046     		.align	2
 1515              	.L119:
 1516 000c 14E000E0 		.word	-536813548
 1517              		.cfi_endproc
 1518              	.LFE36:
 1519              		.size	CySysTickGetReload, .-CySysTickGetReload
 1520              		.section	.text.CySysTickGetValue,"ax",%progbits
 1521              		.align	2
 1522              		.global	CySysTickGetValue
 1523              		.code	16
 1524              		.thumb_func
 1525              		.type	CySysTickGetValue, %function
 1526              	CySysTickGetValue:
 1527              	.LFB37:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 79


2823:.\Generated_Source\PSoC4/CyLib.c **** 
2824:.\Generated_Source\PSoC4/CyLib.c **** 
2825:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2827:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2828:.\Generated_Source\PSoC4/CyLib.c **** *
2829:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2830:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2831:.\Generated_Source\PSoC4/CyLib.c **** *
2832:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2833:.\Generated_Source\PSoC4/CyLib.c **** *  None
2834:.\Generated_Source\PSoC4/CyLib.c **** *
2835:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2836:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2837:.\Generated_Source\PSoC4/CyLib.c **** *
2838:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2839:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2840:.\Generated_Source\PSoC4/CyLib.c **** {
 1528              		.loc 1 2840 0
 1529              		.cfi_startproc
2841:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1530              		.loc 1 2841 0
 1531 0000 024B     		ldr	r3, .L122
 1532 0002 1868     		ldr	r0, [r3]
 1533 0004 0002     		lsl	r0, r0, #8
 1534 0006 000A     		lsr	r0, r0, #8
2842:.\Generated_Source\PSoC4/CyLib.c **** }
 1535              		.loc 1 2842 0
 1536              		@ sp needed
 1537 0008 7047     		bx	lr
 1538              	.L123:
 1539 000a C046     		.align	2
 1540              	.L122:
 1541 000c 18E000E0 		.word	-536813544
 1542              		.cfi_endproc
 1543              	.LFE37:
 1544              		.size	CySysTickGetValue, .-CySysTickGetValue
 1545              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1546              		.align	2
 1547              		.global	CySysTickGetCountFlag
 1548              		.code	16
 1549              		.thumb_func
 1550              		.type	CySysTickGetCountFlag, %function
 1551              	CySysTickGetCountFlag:
 1552              	.LFB38:
2843:.\Generated_Source\PSoC4/CyLib.c **** 
2844:.\Generated_Source\PSoC4/CyLib.c **** 
2845:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2846:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2847:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2848:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2849:.\Generated_Source\PSoC4/CyLib.c ****     *
2850:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2851:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2852:.\Generated_Source\PSoC4/CyLib.c ****     *
2853:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2854:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 80


2855:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2856:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2857:.\Generated_Source\PSoC4/CyLib.c ****     *
2858:.\Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2859:.\Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2860:.\Generated_Source\PSoC4/CyLib.c ****     *
2861:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2862:.\Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
2863:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2864:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2865:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2866:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2867:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2868:.\Generated_Source\PSoC4/CyLib.c ****     *
2869:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2870:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2871:.\Generated_Source\PSoC4/CyLib.c ****     *
2872:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2873:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2874:.\Generated_Source\PSoC4/CyLib.c ****     {
2875:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2876:.\Generated_Source\PSoC4/CyLib.c ****         {
2877:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2878:.\Generated_Source\PSoC4/CyLib.c ****         }
2879:.\Generated_Source\PSoC4/CyLib.c ****         else
2880:.\Generated_Source\PSoC4/CyLib.c ****         {
2881:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2882:.\Generated_Source\PSoC4/CyLib.c ****         }
2883:.\Generated_Source\PSoC4/CyLib.c ****     }
2884:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2885:.\Generated_Source\PSoC4/CyLib.c **** 
2886:.\Generated_Source\PSoC4/CyLib.c **** 
2887:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2888:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2889:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2890:.\Generated_Source\PSoC4/CyLib.c **** *
2891:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2892:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2893:.\Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
2894:.\Generated_Source\PSoC4/CyLib.c **** *
2895:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2896:.\Generated_Source\PSoC4/CyLib.c **** *  None
2897:.\Generated_Source\PSoC4/CyLib.c **** *
2898:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2899:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2900:.\Generated_Source\PSoC4/CyLib.c **** *
2901:.\Generated_Source\PSoC4/CyLib.c **** *
2902:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2903:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2904:.\Generated_Source\PSoC4/CyLib.c **** *
2905:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2907:.\Generated_Source\PSoC4/CyLib.c **** {
 1553              		.loc 1 2907 0
 1554              		.cfi_startproc
2908:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1555              		.loc 1 2908 0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 81


 1556 0000 024B     		ldr	r3, .L125
 1557 0002 1868     		ldr	r0, [r3]
 1558 0004 C003     		lsl	r0, r0, #15
 1559 0006 C00F     		lsr	r0, r0, #31
2909:.\Generated_Source\PSoC4/CyLib.c **** }
 1560              		.loc 1 2909 0
 1561              		@ sp needed
 1562 0008 7047     		bx	lr
 1563              	.L126:
 1564 000a C046     		.align	2
 1565              	.L125:
 1566 000c 10E000E0 		.word	-536813552
 1567              		.cfi_endproc
 1568              	.LFE38:
 1569              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1570              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1571              		.align	2
 1572              		.code	16
 1573              		.thumb_func
 1574              		.type	CySysTickServiceCallbacks, %function
 1575              	CySysTickServiceCallbacks:
 1576              	.LFB42:
2910:.\Generated_Source\PSoC4/CyLib.c **** 
2911:.\Generated_Source\PSoC4/CyLib.c **** 
2912:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2913:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2914:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2915:.\Generated_Source\PSoC4/CyLib.c **** *
2916:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2917:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2918:.\Generated_Source\PSoC4/CyLib.c **** *
2919:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2920:.\Generated_Source\PSoC4/CyLib.c **** *  None
2921:.\Generated_Source\PSoC4/CyLib.c **** *
2922:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2923:.\Generated_Source\PSoC4/CyLib.c **** *  None
2924:.\Generated_Source\PSoC4/CyLib.c **** *
2925:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2927:.\Generated_Source\PSoC4/CyLib.c **** {
2928:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2929:.\Generated_Source\PSoC4/CyLib.c **** }
2930:.\Generated_Source\PSoC4/CyLib.c **** 
2931:.\Generated_Source\PSoC4/CyLib.c **** 
2932:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2933:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2934:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2935:.\Generated_Source\PSoC4/CyLib.c **** *
2936:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2937:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2938:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2939:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2940:.\Generated_Source\PSoC4/CyLib.c **** *
2941:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2942:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2943:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2944:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 82


2945:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
2946:.\Generated_Source\PSoC4/CyLib.c **** *
2947:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2948:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
2949:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2950:.\Generated_Source\PSoC4/CyLib.c **** *
2951:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2952:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2953:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2954:.\Generated_Source\PSoC4/CyLib.c **** *
2955:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2956:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2957:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2958:.\Generated_Source\PSoC4/CyLib.c **** *
2959:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2960:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2961:.\Generated_Source\PSoC4/CyLib.c **** *
2962:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2963:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2964:.\Generated_Source\PSoC4/CyLib.c **** {
2965:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2966:.\Generated_Source\PSoC4/CyLib.c **** 
2967:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2968:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2969:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2970:.\Generated_Source\PSoC4/CyLib.c **** }
2971:.\Generated_Source\PSoC4/CyLib.c **** 
2972:.\Generated_Source\PSoC4/CyLib.c **** 
2973:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2974:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2975:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2976:.\Generated_Source\PSoC4/CyLib.c **** *
2977:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2978:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2979:.\Generated_Source\PSoC4/CyLib.c **** *
2980:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2981:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
2982:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2983:.\Generated_Source\PSoC4/CyLib.c **** *
2984:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2985:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2986:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2987:.\Generated_Source\PSoC4/CyLib.c **** *
2988:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2989:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2990:.\Generated_Source\PSoC4/CyLib.c **** {
2991:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2992:.\Generated_Source\PSoC4/CyLib.c **** }
2993:.\Generated_Source\PSoC4/CyLib.c **** 
2994:.\Generated_Source\PSoC4/CyLib.c **** 
2995:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2996:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2997:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2998:.\Generated_Source\PSoC4/CyLib.c **** *
2999:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
3000:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3001:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 83


3002:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
3003:.\Generated_Source\PSoC4/CyLib.c **** *  None
3004:.\Generated_Source\PSoC4/CyLib.c **** *
3005:.\Generated_Source\PSoC4/CyLib.c **** * Return:
3006:.\Generated_Source\PSoC4/CyLib.c **** *  None
3007:.\Generated_Source\PSoC4/CyLib.c **** *
3008:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3009:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3010:.\Generated_Source\PSoC4/CyLib.c **** {
 1577              		.loc 1 3010 0
 1578              		.cfi_startproc
 1579 0000 10B5     		push	{r4, lr}
 1580              		.cfi_def_cfa_offset 8
 1581              		.cfi_offset 4, -8
 1582              		.cfi_offset 14, -4
3011:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3012:.\Generated_Source\PSoC4/CyLib.c **** 
3013:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3014:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1583              		.loc 1 3014 0
 1584 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1585              	.LVL123:
 1586 0006 0128     		cmp	r0, #1
 1587 0008 0BD1     		bne	.L127
 1588 000a 07E0     		b	.L132
 1589              	.LVL124:
 1590              	.L131:
3015:.\Generated_Source\PSoC4/CyLib.c ****     {
3016:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3017:.\Generated_Source\PSoC4/CyLib.c ****         {
3018:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1591              		.loc 1 3018 0
 1592 000c A300     		lsl	r3, r4, #2
 1593 000e 054A     		ldr	r2, .L133
 1594 0010 9B58     		ldr	r3, [r3, r2]
 1595 0012 002B     		cmp	r3, #0
 1596 0014 00D0     		beq	.L130
3019:.\Generated_Source\PSoC4/CyLib.c ****             {
3020:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1597              		.loc 1 3020 0
 1598 0016 9847     		blx	r3
 1599              	.LVL125:
 1600              	.L130:
3016:.\Generated_Source\PSoC4/CyLib.c ****         {
 1601              		.loc 1 3016 0 discriminator 2
 1602 0018 0134     		add	r4, r4, #1
 1603              	.LVL126:
 1604 001a 00E0     		b	.L128
 1605              	.LVL127:
 1606              	.L132:
 1607 001c 0024     		mov	r4, #0
 1608              	.L128:
 1609              	.LVL128:
3016:.\Generated_Source\PSoC4/CyLib.c ****         {
 1610              		.loc 1 3016 0 is_stmt 0 discriminator 1
 1611 001e 042C     		cmp	r4, #4
 1612 0020 F4D9     		bls	.L131
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 84


 1613              	.LVL129:
 1614              	.L127:
3021:.\Generated_Source\PSoC4/CyLib.c ****             }
3022:.\Generated_Source\PSoC4/CyLib.c ****         }
3023:.\Generated_Source\PSoC4/CyLib.c ****     }
3024:.\Generated_Source\PSoC4/CyLib.c **** }
 1615              		.loc 1 3024 0 is_stmt 1
 1616              		@ sp needed
 1617 0022 10BD     		pop	{r4, pc}
 1618              	.L134:
 1619              		.align	2
 1620              	.L133:
 1621 0024 00000000 		.word	.LANCHOR2
 1622              		.cfi_endproc
 1623              	.LFE42:
 1624              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1625              		.section	.text.CySysTickClear,"ax",%progbits
 1626              		.align	2
 1627              		.global	CySysTickClear
 1628              		.code	16
 1629              		.thumb_func
 1630              		.type	CySysTickClear, %function
 1631              	CySysTickClear:
 1632              	.LFB39:
2927:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1633              		.loc 1 2927 0
 1634              		.cfi_startproc
2928:.\Generated_Source\PSoC4/CyLib.c **** }
 1635              		.loc 1 2928 0
 1636 0000 0022     		mov	r2, #0
 1637 0002 014B     		ldr	r3, .L136
 1638 0004 1A60     		str	r2, [r3]
2929:.\Generated_Source\PSoC4/CyLib.c **** 
 1639              		.loc 1 2929 0
 1640              		@ sp needed
 1641 0006 7047     		bx	lr
 1642              	.L137:
 1643              		.align	2
 1644              	.L136:
 1645 0008 18E000E0 		.word	-536813544
 1646              		.cfi_endproc
 1647              	.LFE39:
 1648              		.size	CySysTickClear, .-CySysTickClear
 1649              		.section	.text.CySysTickInit,"ax",%progbits
 1650              		.align	2
 1651              		.global	CySysTickInit
 1652              		.code	16
 1653              		.thumb_func
 1654              		.type	CySysTickInit, %function
 1655              	CySysTickInit:
 1656              	.LFB30:
2670:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 1657              		.loc 1 2670 0
 1658              		.cfi_startproc
 1659 0000 08B5     		push	{r3, lr}
 1660              		.cfi_def_cfa_offset 8
 1661              		.cfi_offset 3, -8
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 85


 1662              		.cfi_offset 14, -4
 1663              	.LVL130:
2673:.\Generated_Source\PSoC4/CyLib.c ****     {
 1664              		.loc 1 2673 0
 1665 0002 0023     		mov	r3, #0
 1666 0004 04E0     		b	.L139
 1667              	.LVL131:
 1668              	.L140:
2675:.\Generated_Source\PSoC4/CyLib.c ****     }
 1669              		.loc 1 2675 0 discriminator 3
 1670 0006 9900     		lsl	r1, r3, #2
 1671 0008 0020     		mov	r0, #0
 1672 000a 0B4A     		ldr	r2, .L141
 1673 000c 8850     		str	r0, [r1, r2]
2673:.\Generated_Source\PSoC4/CyLib.c ****     {
 1674              		.loc 1 2673 0 discriminator 3
 1675 000e 0133     		add	r3, r3, #1
 1676              	.LVL132:
 1677              	.L139:
2673:.\Generated_Source\PSoC4/CyLib.c ****     {
 1678              		.loc 1 2673 0 is_stmt 0 discriminator 1
 1679 0010 042B     		cmp	r3, #4
 1680 0012 F8D9     		bls	.L140
2678:.\Generated_Source\PSoC4/CyLib.c **** 
 1681              		.loc 1 2678 0 is_stmt 1
 1682 0014 0F20     		mov	r0, #15
 1683 0016 0949     		ldr	r1, .L141+4
 1684 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1685              	.LVL133:
2684:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1686              		.loc 1 2684 0
 1687 001c 084B     		ldr	r3, .L141+8
 1688 001e D868     		ldr	r0, [r3, #12]
 1689 0020 FA21     		mov	r1, #250
 1690 0022 8900     		lsl	r1, r1, #2
 1691 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1692              	.LVL134:
 1693 0028 FFF7FEFF 		bl	CySysTickSetReload
 1694              	.LVL135:
2685:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1695              		.loc 1 2685 0
 1696 002c FFF7FEFF 		bl	CySysTickClear
 1697              	.LVL136:
2686:.\Generated_Source\PSoC4/CyLib.c **** }
 1698              		.loc 1 2686 0
 1699 0030 0F20     		mov	r0, #15
 1700 0032 FFF7FEFF 		bl	CyIntEnable
 1701              	.LVL137:
2687:.\Generated_Source\PSoC4/CyLib.c **** 
 1702              		.loc 1 2687 0
 1703              		@ sp needed
 1704 0036 08BD     		pop	{r3, pc}
 1705              	.L142:
 1706              		.align	2
 1707              	.L141:
 1708 0038 00000000 		.word	.LANCHOR2
 1709 003c 00000000 		.word	CySysTickServiceCallbacks
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 86


 1710 0040 00000000 		.word	.LANCHOR0
 1711              		.cfi_endproc
 1712              	.LFE30:
 1713              		.size	CySysTickInit, .-CySysTickInit
 1714              		.section	.text.CySysTickStart,"ax",%progbits
 1715              		.align	2
 1716              		.global	CySysTickStart
 1717              		.code	16
 1718              		.thumb_func
 1719              		.type	CySysTickStart, %function
 1720              	CySysTickStart:
 1721              	.LFB29:
2634:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1722              		.loc 1 2634 0
 1723              		.cfi_startproc
 1724 0000 08B5     		push	{r3, lr}
 1725              		.cfi_def_cfa_offset 8
 1726              		.cfi_offset 3, -8
 1727              		.cfi_offset 14, -4
2635:.\Generated_Source\PSoC4/CyLib.c ****     {
 1728              		.loc 1 2635 0
 1729 0002 064B     		ldr	r3, .L145
 1730 0004 5B69     		ldr	r3, [r3, #20]
 1731 0006 002B     		cmp	r3, #0
 1732 0008 04D1     		bne	.L144
2637:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1733              		.loc 1 2637 0
 1734 000a FFF7FEFF 		bl	CySysTickInit
 1735              	.LVL138:
2638:.\Generated_Source\PSoC4/CyLib.c ****     }
 1736              		.loc 1 2638 0
 1737 000e 0122     		mov	r2, #1
 1738 0010 024B     		ldr	r3, .L145
 1739 0012 5A61     		str	r2, [r3, #20]
 1740              	.L144:
2641:.\Generated_Source\PSoC4/CyLib.c **** }
 1741              		.loc 1 2641 0
 1742 0014 FFF7FEFF 		bl	CySysTickEnable
 1743              	.LVL139:
2642:.\Generated_Source\PSoC4/CyLib.c **** 
 1744              		.loc 1 2642 0
 1745              		@ sp needed
 1746 0018 08BD     		pop	{r3, pc}
 1747              	.L146:
 1748 001a C046     		.align	2
 1749              	.L145:
 1750 001c 00000000 		.word	.LANCHOR2
 1751              		.cfi_endproc
 1752              	.LFE29:
 1753              		.size	CySysTickStart, .-CySysTickStart
 1754              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1755              		.align	2
 1756              		.global	CySysTickSetCallback
 1757              		.code	16
 1758              		.thumb_func
 1759              		.type	CySysTickSetCallback, %function
 1760              	CySysTickSetCallback:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 87


 1761              	.LFB40:
2964:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1762              		.loc 1 2964 0
 1763              		.cfi_startproc
 1764              	.LVL140:
2967:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1765              		.loc 1 2967 0
 1766 0000 024A     		ldr	r2, .L148
 1767 0002 8300     		lsl	r3, r0, #2
 1768 0004 9858     		ldr	r0, [r3, r2]
 1769              	.LVL141:
2968:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1770              		.loc 1 2968 0
 1771 0006 9950     		str	r1, [r3, r2]
2970:.\Generated_Source\PSoC4/CyLib.c **** 
 1772              		.loc 1 2970 0
 1773              		@ sp needed
 1774 0008 7047     		bx	lr
 1775              	.L149:
 1776 000a C046     		.align	2
 1777              	.L148:
 1778 000c 00000000 		.word	.LANCHOR2
 1779              		.cfi_endproc
 1780              	.LFE40:
 1781              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1782              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1783              		.align	2
 1784              		.global	CySysTickGetCallback
 1785              		.code	16
 1786              		.thumb_func
 1787              		.type	CySysTickGetCallback, %function
 1788              	CySysTickGetCallback:
 1789              	.LFB41:
2990:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1790              		.loc 1 2990 0
 1791              		.cfi_startproc
 1792              	.LVL142:
2991:.\Generated_Source\PSoC4/CyLib.c **** }
 1793              		.loc 1 2991 0
 1794 0000 8000     		lsl	r0, r0, #2
 1795              	.LVL143:
 1796 0002 014B     		ldr	r3, .L151
 1797 0004 C058     		ldr	r0, [r0, r3]
2992:.\Generated_Source\PSoC4/CyLib.c **** 
 1798              		.loc 1 2992 0
 1799              		@ sp needed
 1800 0006 7047     		bx	lr
 1801              	.L152:
 1802              		.align	2
 1803              	.L151:
 1804 0008 00000000 		.word	.LANCHOR2
 1805              		.cfi_endproc
 1806              	.LFE41:
 1807              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1808              		.section	.text.CyGetUniqueId,"ax",%progbits
 1809              		.align	2
 1810              		.global	CyGetUniqueId
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 88


 1811              		.code	16
 1812              		.thumb_func
 1813              		.type	CyGetUniqueId, %function
 1814              	CyGetUniqueId:
 1815              	.LFB43:
3025:.\Generated_Source\PSoC4/CyLib.c **** 
3026:.\Generated_Source\PSoC4/CyLib.c **** 
3027:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3028:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3029:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
3030:.\Generated_Source\PSoC4/CyLib.c **** *
3031:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
3032:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3033:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3034:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3035:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3036:.\Generated_Source\PSoC4/CyLib.c **** *
3037:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
3038:.\Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3039:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3040:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3041:.\Generated_Source\PSoC4/CyLib.c **** *
3042:.\Generated_Source\PSoC4/CyLib.c **** * Return:
3043:.\Generated_Source\PSoC4/CyLib.c **** *  None
3044:.\Generated_Source\PSoC4/CyLib.c **** *
3045:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3046:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3047:.\Generated_Source\PSoC4/CyLib.c **** {
 1816              		.loc 1 3047 0
 1817              		.cfi_startproc
 1818              	.LVL144:
3048:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3049:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1819              		.loc 1 3049 0
 1820 0000 134B     		ldr	r3, .L154
 1821 0002 1B78     		ldrb	r3, [r3]
 1822 0004 DAB2     		uxtb	r2, r3
 1823 0006 0260     		str	r2, [r0]
3050:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1824              		.loc 1 3050 0
 1825 0008 124B     		ldr	r3, .L154+4
 1826 000a 1B78     		ldrb	r3, [r3]
 1827 000c 1B02     		lsl	r3, r3, #8
 1828 000e 1343     		orr	r3, r2
 1829 0010 0360     		str	r3, [r0]
3051:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1830              		.loc 1 3051 0
 1831 0012 114A     		ldr	r2, .L154+8
 1832 0014 1278     		ldrb	r2, [r2]
 1833 0016 1204     		lsl	r2, r2, #16
 1834 0018 1343     		orr	r3, r2
 1835 001a 0360     		str	r3, [r0]
3052:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1836              		.loc 1 3052 0
 1837 001c 0F4A     		ldr	r2, .L154+12
 1838 001e 1278     		ldrb	r2, [r2]
 1839 0020 1206     		lsl	r2, r2, #24
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 89


 1840 0022 1343     		orr	r3, r2
 1841 0024 0360     		str	r3, [r0]
3053:.\Generated_Source\PSoC4/CyLib.c **** 
3054:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1842              		.loc 1 3054 0
 1843 0026 0E4B     		ldr	r3, .L154+16
 1844 0028 1B78     		ldrb	r3, [r3]
 1845 002a DAB2     		uxtb	r2, r3
 1846 002c 4260     		str	r2, [r0, #4]
3055:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1847              		.loc 1 3055 0
 1848 002e 0D4B     		ldr	r3, .L154+20
 1849 0030 1B78     		ldrb	r3, [r3]
 1850 0032 1B02     		lsl	r3, r3, #8
 1851 0034 1343     		orr	r3, r2
 1852 0036 4360     		str	r3, [r0, #4]
3056:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1853              		.loc 1 3056 0
 1854 0038 0B4A     		ldr	r2, .L154+24
 1855 003a 1278     		ldrb	r2, [r2]
 1856 003c 1204     		lsl	r2, r2, #16
 1857 003e 1343     		orr	r3, r2
 1858 0040 4360     		str	r3, [r0, #4]
3057:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1859              		.loc 1 3057 0
 1860 0042 0A4A     		ldr	r2, .L154+28
 1861 0044 1278     		ldrb	r2, [r2]
 1862 0046 1206     		lsl	r2, r2, #24
 1863 0048 1343     		orr	r3, r2
 1864 004a 4360     		str	r3, [r0, #4]
3058:.\Generated_Source\PSoC4/CyLib.c **** #else
3059:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3060:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3061:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3062:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3063:.\Generated_Source\PSoC4/CyLib.c **** 
3064:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3065:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3066:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3067:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3068:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3069:.\Generated_Source\PSoC4/CyLib.c **** }
 1865              		.loc 1 3069 0
 1866              		@ sp needed
 1867 004c 7047     		bx	lr
 1868              	.L155:
 1869 004e C046     		.align	2
 1870              	.L154:
 1871 0050 78F1FF0F 		.word	268431736
 1872 0054 79F1FF0F 		.word	268431737
 1873 0058 7AF1FF0F 		.word	268431738
 1874 005c 7BF1FF0F 		.word	268431739
 1875 0060 7CF1FF0F 		.word	268431740
 1876 0064 7DF1FF0F 		.word	268431741
 1877 0068 7EF1FF0F 		.word	268431742
 1878 006c 7FF1FF0F 		.word	268431743
 1879              		.cfi_endproc
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 90


 1880              	.LFE43:
 1881              		.size	CyGetUniqueId, .-CyGetUniqueId
 1882              		.global	cyImoFreqMhz2Reg
 1883              		.global	CySysTickInitVar
 1884              		.global	cydelay32kMs
 1885              		.global	cydelayFreqMhz
 1886              		.global	cydelayFreqKhz
 1887              		.global	cydelayFreqHz
 1888              		.section	.rodata
 1889              		.align	2
 1890              		.set	.LANCHOR1,. + 0
 1891              		.type	cyImoFreqMhz2Reg, %object
 1892              		.size	cyImoFreqMhz2Reg, 46
 1893              	cyImoFreqMhz2Reg:
 1894 0000 03       		.byte	3
 1895 0001 04       		.byte	4
 1896 0002 05       		.byte	5
 1897 0003 06       		.byte	6
 1898 0004 07       		.byte	7
 1899 0005 08       		.byte	8
 1900 0006 09       		.byte	9
 1901 0007 0A       		.byte	10
 1902 0008 0B       		.byte	11
 1903 0009 0C       		.byte	12
 1904 000a 0E       		.byte	14
 1905 000b 0F       		.byte	15
 1906 000c 10       		.byte	16
 1907 000d 11       		.byte	17
 1908 000e 12       		.byte	18
 1909 000f 13       		.byte	19
 1910 0010 14       		.byte	20
 1911 0011 15       		.byte	21
 1912 0012 16       		.byte	22
 1913 0013 17       		.byte	23
 1914 0014 18       		.byte	24
 1915 0015 19       		.byte	25
 1916 0016 1B       		.byte	27
 1917 0017 1C       		.byte	28
 1918 0018 1D       		.byte	29
 1919 0019 1E       		.byte	30
 1920 001a 1F       		.byte	31
 1921 001b 20       		.byte	32
 1922 001c 21       		.byte	33
 1923 001d 22       		.byte	34
 1924 001e 23       		.byte	35
 1925 001f 25       		.byte	37
 1926 0020 26       		.byte	38
 1927 0021 27       		.byte	39
 1928 0022 28       		.byte	40
 1929 0023 29       		.byte	41
 1930 0024 2A       		.byte	42
 1931 0025 2B       		.byte	43
 1932 0026 2E       		.byte	46
 1933 0027 2F       		.byte	47
 1934 0028 30       		.byte	48
 1935 0029 31       		.byte	49
 1936 002a 32       		.byte	50
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 91


 1937 002b 33       		.byte	51
 1938 002c 34       		.byte	52
 1939 002d 35       		.byte	53
 1940 002e 0000     		.data
 1941              		.align	2
 1942              		.set	.LANCHOR0,. + 0
 1943              		.type	cydelay32kMs, %object
 1944              		.size	cydelay32kMs, 4
 1945              	cydelay32kMs:
 1946 0000 0000E02E 		.word	786432000
 1947              		.type	cydelayFreqKhz, %object
 1948              		.size	cydelayFreqKhz, 4
 1949              	cydelayFreqKhz:
 1950 0004 C05D0000 		.word	24000
 1951              		.type	cydelayFreqMhz, %object
 1952              		.size	cydelayFreqMhz, 1
 1953              	cydelayFreqMhz:
 1954 0008 18       		.byte	24
 1955 0009 000000   		.space	3
 1956              		.type	cydelayFreqHz, %object
 1957              		.size	cydelayFreqHz, 4
 1958              	cydelayFreqHz:
 1959 000c 00366E01 		.word	24000000
 1960              		.bss
 1961              		.align	2
 1962              		.set	.LANCHOR2,. + 0
 1963              		.type	CySysTickCallbacks, %object
 1964              		.size	CySysTickCallbacks, 20
 1965              	CySysTickCallbacks:
 1966 0000 00000000 		.space	20
 1966      00000000 
 1966      00000000 
 1966      00000000 
 1966      00000000 
 1967              		.type	CySysTickInitVar, %object
 1968              		.size	CySysTickInitVar, 4
 1969              	CySysTickInitVar:
 1970 0014 00000000 		.space	4
 1971              		.text
 1972              	.Letext0:
 1973              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1974              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1975              		.section	.debug_info,"",%progbits
 1976              	.Ldebug_info0:
 1977 0000 CD0A0000 		.4byte	0xacd
 1978 0004 0400     		.2byte	0x4
 1979 0006 00000000 		.4byte	.Ldebug_abbrev0
 1980 000a 04       		.byte	0x4
 1981 000b 01       		.uleb128 0x1
 1982 000c A6030000 		.4byte	.LASF98
 1983 0010 01       		.byte	0x1
 1984 0011 CF020000 		.4byte	.LASF99
 1985 0015 29050000 		.4byte	.LASF100
 1986 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1987 001d 00000000 		.4byte	0
 1988 0021 00000000 		.4byte	.Ldebug_line0
 1989 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 92


 1990 0026 01       		.byte	0x1
 1991 0027 06       		.byte	0x6
 1992 0028 EB000000 		.4byte	.LASF0
 1993 002c 02       		.uleb128 0x2
 1994 002d 01       		.byte	0x1
 1995 002e 08       		.byte	0x8
 1996 002f D0040000 		.4byte	.LASF1
 1997 0033 02       		.uleb128 0x2
 1998 0034 02       		.byte	0x2
 1999 0035 05       		.byte	0x5
 2000 0036 DE040000 		.4byte	.LASF2
 2001 003a 02       		.uleb128 0x2
 2002 003b 02       		.byte	0x2
 2003 003c 07       		.byte	0x7
 2004 003d AD020000 		.4byte	.LASF3
 2005 0041 02       		.uleb128 0x2
 2006 0042 04       		.byte	0x4
 2007 0043 05       		.byte	0x5
 2008 0044 2A010000 		.4byte	.LASF4
 2009 0048 02       		.uleb128 0x2
 2010 0049 04       		.byte	0x4
 2011 004a 07       		.byte	0x7
 2012 004b 35020000 		.4byte	.LASF5
 2013 004f 02       		.uleb128 0x2
 2014 0050 08       		.byte	0x8
 2015 0051 05       		.byte	0x5
 2016 0052 DD000000 		.4byte	.LASF6
 2017 0056 02       		.uleb128 0x2
 2018 0057 08       		.byte	0x8
 2019 0058 07       		.byte	0x7
 2020 0059 71000000 		.4byte	.LASF7
 2021 005d 03       		.uleb128 0x3
 2022 005e 04       		.byte	0x4
 2023 005f 05       		.byte	0x5
 2024 0060 696E7400 		.ascii	"int\000"
 2025 0064 02       		.uleb128 0x2
 2026 0065 04       		.byte	0x4
 2027 0066 07       		.byte	0x7
 2028 0067 19020000 		.4byte	.LASF8
 2029 006b 04       		.uleb128 0x4
 2030 006c 55010000 		.4byte	.LASF9
 2031 0070 02       		.byte	0x2
 2032 0071 3801     		.2byte	0x138
 2033 0073 2C000000 		.4byte	0x2c
 2034 0077 04       		.uleb128 0x4
 2035 0078 17000000 		.4byte	.LASF10
 2036 007c 02       		.byte	0x2
 2037 007d 3901     		.2byte	0x139
 2038 007f 3A000000 		.4byte	0x3a
 2039 0083 04       		.uleb128 0x4
 2040 0084 98010000 		.4byte	.LASF11
 2041 0088 02       		.byte	0x2
 2042 0089 3A01     		.2byte	0x13a
 2043 008b 48000000 		.4byte	0x48
 2044 008f 02       		.uleb128 0x2
 2045 0090 04       		.byte	0x4
 2046 0091 04       		.byte	0x4
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 93


 2047 0092 53040000 		.4byte	.LASF12
 2048 0096 02       		.uleb128 0x2
 2049 0097 08       		.byte	0x8
 2050 0098 04       		.byte	0x4
 2051 0099 74010000 		.4byte	.LASF13
 2052 009d 02       		.uleb128 0x2
 2053 009e 01       		.byte	0x1
 2054 009f 08       		.byte	0x8
 2055 00a0 17050000 		.4byte	.LASF14
 2056 00a4 04       		.uleb128 0x4
 2057 00a5 BA040000 		.4byte	.LASF15
 2058 00a9 02       		.byte	0x2
 2059 00aa E201     		.2byte	0x1e2
 2060 00ac B0000000 		.4byte	0xb0
 2061 00b0 05       		.uleb128 0x5
 2062 00b1 6B000000 		.4byte	0x6b
 2063 00b5 04       		.uleb128 0x4
 2064 00b6 20030000 		.4byte	.LASF16
 2065 00ba 02       		.byte	0x2
 2066 00bb E401     		.2byte	0x1e4
 2067 00bd C1000000 		.4byte	0xc1
 2068 00c1 05       		.uleb128 0x5
 2069 00c2 83000000 		.4byte	0x83
 2070 00c6 04       		.uleb128 0x4
 2071 00c7 1C050000 		.4byte	.LASF17
 2072 00cb 02       		.byte	0x2
 2073 00cc F401     		.2byte	0x1f4
 2074 00ce D2000000 		.4byte	0xd2
 2075 00d2 06       		.uleb128 0x6
 2076 00d3 04       		.byte	0x4
 2077 00d4 D8000000 		.4byte	0xd8
 2078 00d8 07       		.uleb128 0x7
 2079 00d9 02       		.uleb128 0x2
 2080 00da 04       		.byte	0x4
 2081 00db 07       		.byte	0x7
 2082 00dc 42030000 		.4byte	.LASF18
 2083 00e0 08       		.uleb128 0x8
 2084 00e1 7E040000 		.4byte	.LASF19
 2085 00e5 03       		.byte	0x3
 2086 00e6 6A       		.byte	0x6a
 2087 00e7 D2000000 		.4byte	0xd2
 2088 00eb 09       		.uleb128 0x9
 2089 00ec 24060000 		.4byte	.LASF20
 2090 00f0 01       		.byte	0x1
 2091 00f1 6F       		.byte	0x6f
 2092 00f2 00000000 		.4byte	.LFB0
 2093 00f6 14000000 		.4byte	.LFE0-.LFB0
 2094 00fa 01       		.uleb128 0x1
 2095 00fb 9C       		.byte	0x9c
 2096 00fc 09       		.uleb128 0x9
 2097 00fd 62020000 		.4byte	.LASF21
 2098 0101 01       		.byte	0x1
 2099 0102 95       		.byte	0x95
 2100 0103 00000000 		.4byte	.LFB1
 2101 0107 10000000 		.4byte	.LFE1-.LFB1
 2102 010b 01       		.uleb128 0x1
 2103 010c 9C       		.byte	0x9c
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 94


 2104 010d 0A       		.uleb128 0xa
 2105 010e 27000000 		.4byte	.LASF25
 2106 0112 01       		.byte	0x1
 2107 0113 C401     		.2byte	0x1c4
 2108 0115 00000000 		.4byte	.LFB2
 2109 0119 20000000 		.4byte	.LFE2-.LFB2
 2110 011d 01       		.uleb128 0x1
 2111 011e 9C       		.byte	0x9c
 2112 011f 66010000 		.4byte	0x166
 2113 0123 0B       		.uleb128 0xb
 2114 0124 06050000 		.4byte	.LASF27
 2115 0128 01       		.byte	0x1
 2116 0129 C401     		.2byte	0x1c4
 2117 012b 83000000 		.4byte	0x83
 2118 012f 00000000 		.4byte	.LLST0
 2119 0133 0C       		.uleb128 0xc
 2120 0134 08010000 		.4byte	.LASF22
 2121 0138 01       		.byte	0x1
 2122 0139 C601     		.2byte	0x1c6
 2123 013b 6B000000 		.4byte	0x6b
 2124 013f 2C000000 		.4byte	.LLST1
 2125 0143 0C       		.uleb128 0xc
 2126 0144 53060000 		.4byte	.LASF23
 2127 0148 01       		.byte	0x1
 2128 0149 C701     		.2byte	0x1c7
 2129 014b 83000000 		.4byte	0x83
 2130 014f 3F000000 		.4byte	.LLST2
 2131 0153 0D       		.uleb128 0xd
 2132 0154 08000000 		.4byte	.LVL1
 2133 0158 A70A0000 		.4byte	0xaa7
 2134 015c 0D       		.uleb128 0xd
 2135 015d 1A000000 		.4byte	.LVL4
 2136 0161 B20A0000 		.4byte	0xab2
 2137 0165 00       		.byte	0
 2138 0166 0E       		.uleb128 0xe
 2139 0167 AB010000 		.4byte	.LASF31
 2140 016b 01       		.byte	0x1
 2141 016c EE01     		.2byte	0x1ee
 2142 016e 83000000 		.4byte	0x83
 2143 0172 00000000 		.4byte	.LFB3
 2144 0176 1C000000 		.4byte	.LFE3-.LFB3
 2145 017a 01       		.uleb128 0x1
 2146 017b 9C       		.byte	0x9c
 2147 017c B3010000 		.4byte	0x1b3
 2148 0180 0C       		.uleb128 0xc
 2149 0181 08010000 		.4byte	.LASF22
 2150 0185 01       		.byte	0x1
 2151 0186 F001     		.2byte	0x1f0
 2152 0188 6B000000 		.4byte	0x6b
 2153 018c 5D000000 		.4byte	.LLST3
 2154 0190 0C       		.uleb128 0xc
 2155 0191 6D030000 		.4byte	.LASF24
 2156 0195 01       		.byte	0x1
 2157 0196 F101     		.2byte	0x1f1
 2158 0198 83000000 		.4byte	0x83
 2159 019c 70000000 		.4byte	.LLST4
 2160 01a0 0D       		.uleb128 0xd
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 95


 2161 01a1 06000000 		.4byte	.LVL6
 2162 01a5 A70A0000 		.4byte	0xaa7
 2163 01a9 0D       		.uleb128 0xd
 2164 01aa 12000000 		.4byte	.LVL8
 2165 01ae B20A0000 		.4byte	0xab2
 2166 01b2 00       		.byte	0
 2167 01b3 0A       		.uleb128 0xa
 2168 01b4 67050000 		.4byte	.LASF26
 2169 01b8 01       		.byte	0x1
 2170 01b9 2A02     		.2byte	0x22a
 2171 01bb 00000000 		.4byte	.LFB4
 2172 01bf 28000000 		.4byte	.LFE4-.LFB4
 2173 01c3 01       		.uleb128 0x1
 2174 01c4 9C       		.byte	0x9c
 2175 01c5 FC010000 		.4byte	0x1fc
 2176 01c9 0B       		.uleb128 0xb
 2177 01ca 1C060000 		.4byte	.LASF28
 2178 01ce 01       		.byte	0x1
 2179 01cf 2A02     		.2byte	0x22a
 2180 01d1 83000000 		.4byte	0x83
 2181 01d5 8E000000 		.4byte	.LLST5
 2182 01d9 0C       		.uleb128 0xc
 2183 01da 08010000 		.4byte	.LASF22
 2184 01de 01       		.byte	0x1
 2185 01df 2C02     		.2byte	0x22c
 2186 01e1 6B000000 		.4byte	0x6b
 2187 01e5 BA000000 		.4byte	.LLST6
 2188 01e9 0D       		.uleb128 0xd
 2189 01ea 08000000 		.4byte	.LVL11
 2190 01ee A70A0000 		.4byte	0xaa7
 2191 01f2 0D       		.uleb128 0xd
 2192 01f3 1E000000 		.4byte	.LVL13
 2193 01f7 B20A0000 		.4byte	0xab2
 2194 01fb 00       		.byte	0
 2195 01fc 0F       		.uleb128 0xf
 2196 01fd EF050000 		.4byte	.LASF29
 2197 0201 01       		.byte	0x1
 2198 0202 0F08     		.2byte	0x80f
 2199 0204 00000000 		.4byte	.LFB7
 2200 0208 20000000 		.4byte	.LFE7-.LFB7
 2201 020c 01       		.uleb128 0x1
 2202 020d 9C       		.byte	0x9c
 2203 020e 10       		.uleb128 0x10
 2204 020f 47020000 		.4byte	.LASF78
 2205 0213 01       		.byte	0x1
 2206 0214 2508     		.2byte	0x825
 2207 0216 83000000 		.4byte	0x83
 2208 021a 00000000 		.4byte	.LFB8
 2209 021e 10000000 		.4byte	.LFE8-.LFB8
 2210 0222 01       		.uleb128 0x1
 2211 0223 9C       		.byte	0x9c
 2212 0224 0F       		.uleb128 0xf
 2213 0225 81010000 		.4byte	.LASF30
 2214 0229 01       		.byte	0x1
 2215 022a 3908     		.2byte	0x839
 2216 022c 00000000 		.4byte	.LFB9
 2217 0230 0C000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 96


 2218 0234 01       		.uleb128 0x1
 2219 0235 9C       		.byte	0x9c
 2220 0236 0E       		.uleb128 0xe
 2221 0237 99020000 		.4byte	.LASF32
 2222 023b 01       		.byte	0x1
 2223 023c 5508     		.2byte	0x855
 2224 023e 83000000 		.4byte	0x83
 2225 0242 00000000 		.4byte	.LFB10
 2226 0246 14000000 		.4byte	.LFE10-.LFB10
 2227 024a 01       		.uleb128 0x1
 2228 024b 9C       		.byte	0x9c
 2229 024c 6F020000 		.4byte	0x26f
 2230 0250 0B       		.uleb128 0xb
 2231 0251 10050000 		.4byte	.LASF33
 2232 0255 01       		.byte	0x1
 2233 0256 5508     		.2byte	0x855
 2234 0258 83000000 		.4byte	0x83
 2235 025c CD000000 		.4byte	.LLST7
 2236 0260 11       		.uleb128 0x11
 2237 0261 35030000 		.4byte	.LASF34
 2238 0265 01       		.byte	0x1
 2239 0266 5708     		.2byte	0x857
 2240 0268 83000000 		.4byte	0x83
 2241 026c 01       		.uleb128 0x1
 2242 026d 50       		.byte	0x50
 2243 026e 00       		.byte	0
 2244 026f 0E       		.uleb128 0xe
 2245 0270 4E000000 		.4byte	.LASF35
 2246 0274 01       		.byte	0x1
 2247 0275 7008     		.2byte	0x870
 2248 0277 83000000 		.4byte	0x83
 2249 027b 00000000 		.4byte	.LFB11
 2250 027f 10000000 		.4byte	.LFE11-.LFB11
 2251 0283 01       		.uleb128 0x1
 2252 0284 9C       		.byte	0x9c
 2253 0285 98020000 		.4byte	0x298
 2254 0289 11       		.uleb128 0x11
 2255 028a 1E000000 		.4byte	.LASF36
 2256 028e 01       		.byte	0x1
 2257 028f 7208     		.2byte	0x872
 2258 0291 83000000 		.4byte	0x83
 2259 0295 01       		.uleb128 0x1
 2260 0296 50       		.byte	0x50
 2261 0297 00       		.byte	0
 2262 0298 0A       		.uleb128 0xa
 2263 0299 99000000 		.4byte	.LASF37
 2264 029d 01       		.byte	0x1
 2265 029e 8C08     		.2byte	0x88c
 2266 02a0 00000000 		.4byte	.LFB12
 2267 02a4 0C000000 		.4byte	.LFE12-.LFB12
 2268 02a8 01       		.uleb128 0x1
 2269 02a9 9C       		.byte	0x9c
 2270 02aa BD020000 		.4byte	0x2bd
 2271 02ae 12       		.uleb128 0x12
 2272 02af A6010000 		.4byte	.LASF38
 2273 02b3 01       		.byte	0x1
 2274 02b4 8C08     		.2byte	0x88c
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 97


 2275 02b6 83000000 		.4byte	0x83
 2276 02ba 01       		.uleb128 0x1
 2277 02bb 50       		.byte	0x50
 2278 02bc 00       		.byte	0
 2279 02bd 0A       		.uleb128 0xa
 2280 02be E8040000 		.4byte	.LASF39
 2281 02c2 01       		.byte	0x1
 2282 02c3 5B09     		.2byte	0x95b
 2283 02c5 00000000 		.4byte	.LFB19
 2284 02c9 14000000 		.4byte	.LFE19-.LFB19
 2285 02cd 01       		.uleb128 0x1
 2286 02ce 9C       		.byte	0x9c
 2287 02cf E4020000 		.4byte	0x2e4
 2288 02d3 0B       		.uleb128 0xb
 2289 02d4 9F010000 		.4byte	.LASF40
 2290 02d8 01       		.byte	0x1
 2291 02d9 5B09     		.2byte	0x95b
 2292 02db 6B000000 		.4byte	0x6b
 2293 02df EB000000 		.4byte	.LLST8
 2294 02e3 00       		.byte	0
 2295 02e4 0E       		.uleb128 0xe
 2296 02e5 CF000000 		.4byte	.LASF41
 2297 02e9 01       		.byte	0x1
 2298 02ea 6F09     		.2byte	0x96f
 2299 02ec 6B000000 		.4byte	0x6b
 2300 02f0 00000000 		.4byte	.LFB20
 2301 02f4 18000000 		.4byte	.LFE20-.LFB20
 2302 02f8 01       		.uleb128 0x1
 2303 02f9 9C       		.byte	0x9c
 2304 02fa 0F030000 		.4byte	0x30f
 2305 02fe 0B       		.uleb128 0xb
 2306 02ff 9F010000 		.4byte	.LASF40
 2307 0303 01       		.byte	0x1
 2308 0304 6F09     		.2byte	0x96f
 2309 0306 6B000000 		.4byte	0x6b
 2310 030a 0C010000 		.4byte	.LLST9
 2311 030e 00       		.byte	0
 2312 030f 0A       		.uleb128 0xa
 2313 0310 33010000 		.4byte	.LASF42
 2314 0314 01       		.byte	0x1
 2315 0315 8409     		.2byte	0x984
 2316 0317 00000000 		.4byte	.LFB21
 2317 031b 14000000 		.4byte	.LFE21-.LFB21
 2318 031f 01       		.uleb128 0x1
 2319 0320 9C       		.byte	0x9c
 2320 0321 36030000 		.4byte	0x336
 2321 0325 0B       		.uleb128 0xb
 2322 0326 9F010000 		.4byte	.LASF40
 2323 032a 01       		.byte	0x1
 2324 032b 8409     		.2byte	0x984
 2325 032d 6B000000 		.4byte	0x6b
 2326 0331 2D010000 		.4byte	.LLST10
 2327 0335 00       		.byte	0
 2328 0336 0A       		.uleb128 0xa
 2329 0337 89020000 		.4byte	.LASF43
 2330 033b 01       		.byte	0x1
 2331 033c 9709     		.2byte	0x997
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 98


 2332 033e 00000000 		.4byte	.LFB22
 2333 0342 14000000 		.4byte	.LFE22-.LFB22
 2334 0346 01       		.uleb128 0x1
 2335 0347 9C       		.byte	0x9c
 2336 0348 5D030000 		.4byte	0x35d
 2337 034c 0B       		.uleb128 0xb
 2338 034d 9F010000 		.4byte	.LASF40
 2339 0351 01       		.byte	0x1
 2340 0352 9709     		.2byte	0x997
 2341 0354 6B000000 		.4byte	0x6b
 2342 0358 4E010000 		.4byte	.LLST11
 2343 035c 00       		.byte	0
 2344 035d 0A       		.uleb128 0xa
 2345 035e 4B030000 		.4byte	.LASF44
 2346 0362 01       		.byte	0x1
 2347 0363 AB09     		.2byte	0x9ab
 2348 0365 00000000 		.4byte	.LFB23
 2349 0369 14000000 		.4byte	.LFE23-.LFB23
 2350 036d 01       		.uleb128 0x1
 2351 036e 9C       		.byte	0x9c
 2352 036f 84030000 		.4byte	0x384
 2353 0373 0B       		.uleb128 0xb
 2354 0374 9F010000 		.4byte	.LASF40
 2355 0378 01       		.byte	0x1
 2356 0379 AB09     		.2byte	0x9ab
 2357 037b 6B000000 		.4byte	0x6b
 2358 037f 6F010000 		.4byte	.LLST12
 2359 0383 00       		.byte	0
 2360 0384 0A       		.uleb128 0xa
 2361 0385 C9040000 		.4byte	.LASF45
 2362 0389 01       		.byte	0x1
 2363 038a BF09     		.2byte	0x9bf
 2364 038c 00000000 		.4byte	.LFB24
 2365 0390 04000000 		.4byte	.LFE24-.LFB24
 2366 0394 01       		.uleb128 0x1
 2367 0395 9C       		.byte	0x9c
 2368 0396 A9030000 		.4byte	0x3a9
 2369 039a 12       		.uleb128 0x12
 2370 039b 10050000 		.4byte	.LASF33
 2371 039f 01       		.byte	0x1
 2372 03a0 BF09     		.2byte	0x9bf
 2373 03a2 6B000000 		.4byte	0x6b
 2374 03a6 01       		.uleb128 0x1
 2375 03a7 50       		.byte	0x50
 2376 03a8 00       		.byte	0
 2377 03a9 0E       		.uleb128 0xe
 2378 03aa 0E030000 		.4byte	.LASF46
 2379 03ae 01       		.byte	0x1
 2380 03af A808     		.2byte	0x8a8
 2381 03b1 C6000000 		.4byte	0xc6
 2382 03b5 00000000 		.4byte	.LFB13
 2383 03b9 20000000 		.4byte	.LFE13-.LFB13
 2384 03bd 01       		.uleb128 0x1
 2385 03be 9C       		.byte	0x9c
 2386 03bf 11040000 		.4byte	0x411
 2387 03c3 0B       		.uleb128 0xb
 2388 03c4 9F010000 		.4byte	.LASF40
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 99


 2389 03c8 01       		.byte	0x1
 2390 03c9 A808     		.2byte	0x8a8
 2391 03cb 6B000000 		.4byte	0x6b
 2392 03cf 90010000 		.4byte	.LLST13
 2393 03d3 0B       		.uleb128 0xb
 2394 03d4 5D030000 		.4byte	.LASF47
 2395 03d8 01       		.byte	0x1
 2396 03d9 A808     		.2byte	0x8a8
 2397 03db C6000000 		.4byte	0xc6
 2398 03df B1010000 		.4byte	.LLST14
 2399 03e3 11       		.uleb128 0x11
 2400 03e4 40000000 		.4byte	.LASF48
 2401 03e8 01       		.byte	0x1
 2402 03e9 AA08     		.2byte	0x8aa
 2403 03eb C6000000 		.4byte	0xc6
 2404 03ef 01       		.uleb128 0x1
 2405 03f0 50       		.byte	0x50
 2406 03f1 13       		.uleb128 0x13
 2407 03f2 00000000 		.4byte	.LASF49
 2408 03f6 01       		.byte	0x1
 2409 03f7 AB08     		.2byte	0x8ab
 2410 03f9 11040000 		.4byte	0x411
 2411 03fd 00000020 		.4byte	0x20000000
 2412 0401 14       		.uleb128 0x14
 2413 0402 10000000 		.4byte	.LVL34
 2414 0406 84030000 		.4byte	0x384
 2415 040a 15       		.uleb128 0x15
 2416 040b 01       		.uleb128 0x1
 2417 040c 50       		.byte	0x50
 2418 040d 01       		.uleb128 0x1
 2419 040e 30       		.byte	0x30
 2420 040f 00       		.byte	0
 2421 0410 00       		.byte	0
 2422 0411 06       		.uleb128 0x6
 2423 0412 04       		.byte	0x4
 2424 0413 C6000000 		.4byte	0xc6
 2425 0417 0E       		.uleb128 0xe
 2426 0418 F4040000 		.4byte	.LASF50
 2427 041c 01       		.byte	0x1
 2428 041d CD08     		.2byte	0x8cd
 2429 041f C6000000 		.4byte	0xc6
 2430 0423 00000000 		.4byte	.LFB14
 2431 0427 1C000000 		.4byte	.LFE14-.LFB14
 2432 042b 01       		.uleb128 0x1
 2433 042c 9C       		.byte	0x9c
 2434 042d 61040000 		.4byte	0x461
 2435 0431 0B       		.uleb128 0xb
 2436 0432 9F010000 		.4byte	.LASF40
 2437 0436 01       		.byte	0x1
 2438 0437 CD08     		.2byte	0x8cd
 2439 0439 6B000000 		.4byte	0x6b
 2440 043d DD010000 		.4byte	.LLST15
 2441 0441 13       		.uleb128 0x13
 2442 0442 00000000 		.4byte	.LASF49
 2443 0446 01       		.byte	0x1
 2444 0447 CF08     		.2byte	0x8cf
 2445 0449 11040000 		.4byte	0x411
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 100


 2446 044d 00000020 		.4byte	0x20000000
 2447 0451 14       		.uleb128 0x14
 2448 0452 0E000000 		.4byte	.LVL40
 2449 0456 84030000 		.4byte	0x384
 2450 045a 15       		.uleb128 0x15
 2451 045b 01       		.uleb128 0x1
 2452 045c 50       		.byte	0x50
 2453 045d 01       		.uleb128 0x1
 2454 045e 30       		.byte	0x30
 2455 045f 00       		.byte	0
 2456 0460 00       		.byte	0
 2457 0461 0E       		.uleb128 0xe
 2458 0462 C0020000 		.4byte	.LASF51
 2459 0466 01       		.byte	0x1
 2460 0467 E608     		.2byte	0x8e6
 2461 0469 C6000000 		.4byte	0xc6
 2462 046d 00000000 		.4byte	.LFB15
 2463 0471 24000000 		.4byte	.LFE15-.LFB15
 2464 0475 01       		.uleb128 0x1
 2465 0476 9C       		.byte	0x9c
 2466 0477 C9040000 		.4byte	0x4c9
 2467 047b 0B       		.uleb128 0xb
 2468 047c 9F010000 		.4byte	.LASF40
 2469 0480 01       		.byte	0x1
 2470 0481 E608     		.2byte	0x8e6
 2471 0483 6B000000 		.4byte	0x6b
 2472 0487 FE010000 		.4byte	.LLST16
 2473 048b 0B       		.uleb128 0xb
 2474 048c 5D030000 		.4byte	.LASF47
 2475 0490 01       		.byte	0x1
 2476 0491 E608     		.2byte	0x8e6
 2477 0493 C6000000 		.4byte	0xc6
 2478 0497 1F020000 		.4byte	.LLST17
 2479 049b 11       		.uleb128 0x11
 2480 049c 40000000 		.4byte	.LASF48
 2481 04a0 01       		.byte	0x1
 2482 04a1 E808     		.2byte	0x8e8
 2483 04a3 C6000000 		.4byte	0xc6
 2484 04a7 01       		.uleb128 0x1
 2485 04a8 50       		.byte	0x50
 2486 04a9 13       		.uleb128 0x13
 2487 04aa 00000000 		.4byte	.LASF49
 2488 04ae 01       		.byte	0x1
 2489 04af E908     		.2byte	0x8e9
 2490 04b1 11040000 		.4byte	0x411
 2491 04b5 00000020 		.4byte	0x20000000
 2492 04b9 14       		.uleb128 0x14
 2493 04ba 10000000 		.4byte	.LVL44
 2494 04be 84030000 		.4byte	0x384
 2495 04c2 15       		.uleb128 0x15
 2496 04c3 01       		.uleb128 0x1
 2497 04c4 50       		.byte	0x50
 2498 04c5 01       		.uleb128 0x1
 2499 04c6 30       		.byte	0x30
 2500 04c7 00       		.byte	0
 2501 04c8 00       		.byte	0
 2502 04c9 0E       		.uleb128 0xe
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 101


 2503 04ca 90040000 		.4byte	.LASF52
 2504 04ce 01       		.byte	0x1
 2505 04cf 0509     		.2byte	0x905
 2506 04d1 C6000000 		.4byte	0xc6
 2507 04d5 00000000 		.4byte	.LFB16
 2508 04d9 20000000 		.4byte	.LFE16-.LFB16
 2509 04dd 01       		.uleb128 0x1
 2510 04de 9C       		.byte	0x9c
 2511 04df 13050000 		.4byte	0x513
 2512 04e3 0B       		.uleb128 0xb
 2513 04e4 9F010000 		.4byte	.LASF40
 2514 04e8 01       		.byte	0x1
 2515 04e9 0509     		.2byte	0x905
 2516 04eb 6B000000 		.4byte	0x6b
 2517 04ef 4B020000 		.4byte	.LLST18
 2518 04f3 13       		.uleb128 0x13
 2519 04f4 00000000 		.4byte	.LASF49
 2520 04f8 01       		.byte	0x1
 2521 04f9 0709     		.2byte	0x907
 2522 04fb 11040000 		.4byte	0x411
 2523 04ff 00000020 		.4byte	0x20000000
 2524 0503 14       		.uleb128 0x14
 2525 0504 0E000000 		.4byte	.LVL50
 2526 0508 84030000 		.4byte	0x384
 2527 050c 15       		.uleb128 0x15
 2528 050d 01       		.uleb128 0x1
 2529 050e 50       		.byte	0x50
 2530 050f 01       		.uleb128 0x1
 2531 0510 30       		.byte	0x30
 2532 0511 00       		.byte	0
 2533 0512 00       		.byte	0
 2534 0513 0A       		.uleb128 0xa
 2535 0514 42040000 		.4byte	.LASF53
 2536 0518 01       		.byte	0x1
 2537 0519 1D09     		.2byte	0x91d
 2538 051b 00000000 		.4byte	.LFB17
 2539 051f 4C000000 		.4byte	.LFE17-.LFB17
 2540 0523 01       		.uleb128 0x1
 2541 0524 9C       		.byte	0x9c
 2542 0525 B2050000 		.4byte	0x5b2
 2543 0529 0B       		.uleb128 0xb
 2544 052a 9F010000 		.4byte	.LASF40
 2545 052e 01       		.byte	0x1
 2546 052f 1D09     		.2byte	0x91d
 2547 0531 6B000000 		.4byte	0x6b
 2548 0535 6C020000 		.4byte	.LLST19
 2549 0539 0B       		.uleb128 0xb
 2550 053a F0020000 		.4byte	.LASF54
 2551 053e 01       		.byte	0x1
 2552 053f 1D09     		.2byte	0x91d
 2553 0541 6B000000 		.4byte	0x6b
 2554 0545 8D020000 		.4byte	.LLST20
 2555 0549 0C       		.uleb128 0xc
 2556 054a 08010000 		.4byte	.LASF22
 2557 054e 01       		.byte	0x1
 2558 054f 1F09     		.2byte	0x91f
 2559 0551 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 102


 2560 0555 AE020000 		.4byte	.LLST21
 2561 0559 0C       		.uleb128 0xc
 2562 055a 7B010000 		.4byte	.LASF55
 2563 055e 01       		.byte	0x1
 2564 055f 2009     		.2byte	0x920
 2565 0561 83000000 		.4byte	0x83
 2566 0565 C1020000 		.4byte	.LLST22
 2567 0569 0C       		.uleb128 0xc
 2568 056a EF010000 		.4byte	.LASF56
 2569 056e 01       		.byte	0x1
 2570 056f 2109     		.2byte	0x921
 2571 0571 83000000 		.4byte	0x83
 2572 0575 D4020000 		.4byte	.LLST23
 2573 0579 16       		.uleb128 0x16
 2574 057a 10000000 		.4byte	.LVL53
 2575 057e 84030000 		.4byte	0x384
 2576 0582 8C050000 		.4byte	0x58c
 2577 0586 15       		.uleb128 0x15
 2578 0587 01       		.uleb128 0x1
 2579 0588 50       		.byte	0x50
 2580 0589 01       		.uleb128 0x1
 2581 058a 30       		.byte	0x30
 2582 058b 00       		.byte	0
 2583 058c 16       		.uleb128 0x16
 2584 058d 1A000000 		.4byte	.LVL54
 2585 0591 84030000 		.4byte	0x384
 2586 0595 9F050000 		.4byte	0x59f
 2587 0599 15       		.uleb128 0x15
 2588 059a 01       		.uleb128 0x1
 2589 059b 50       		.byte	0x50
 2590 059c 01       		.uleb128 0x1
 2591 059d 30       		.byte	0x30
 2592 059e 00       		.byte	0
 2593 059f 0D       		.uleb128 0xd
 2594 05a0 26000000 		.4byte	.LVL56
 2595 05a4 A70A0000 		.4byte	0xaa7
 2596 05a8 0D       		.uleb128 0xd
 2597 05a9 44000000 		.4byte	.LVL61
 2598 05ad B20A0000 		.4byte	0xab2
 2599 05b1 00       		.byte	0
 2600 05b2 0E       		.uleb128 0xe
 2601 05b3 C3010000 		.4byte	.LASF57
 2602 05b7 01       		.byte	0x1
 2603 05b8 4109     		.2byte	0x941
 2604 05ba 6B000000 		.4byte	0x6b
 2605 05be 00000000 		.4byte	.LFB18
 2606 05c2 2C000000 		.4byte	.LFE18-.LFB18
 2607 05c6 01       		.uleb128 0x1
 2608 05c7 9C       		.byte	0x9c
 2609 05c8 FC050000 		.4byte	0x5fc
 2610 05cc 0B       		.uleb128 0xb
 2611 05cd 9F010000 		.4byte	.LASF40
 2612 05d1 01       		.byte	0x1
 2613 05d2 4109     		.2byte	0x941
 2614 05d4 6B000000 		.4byte	0x6b
 2615 05d8 F2020000 		.4byte	.LLST24
 2616 05dc 0C       		.uleb128 0xc
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 103


 2617 05dd F0020000 		.4byte	.LASF54
 2618 05e1 01       		.byte	0x1
 2619 05e2 4309     		.2byte	0x943
 2620 05e4 6B000000 		.4byte	0x6b
 2621 05e8 13030000 		.4byte	.LLST25
 2622 05ec 14       		.uleb128 0x14
 2623 05ed 0E000000 		.4byte	.LVL65
 2624 05f1 84030000 		.4byte	0x384
 2625 05f5 15       		.uleb128 0x15
 2626 05f6 01       		.uleb128 0x1
 2627 05f7 50       		.byte	0x50
 2628 05f8 01       		.uleb128 0x1
 2629 05f9 30       		.byte	0x30
 2630 05fa 00       		.byte	0
 2631 05fb 00       		.byte	0
 2632 05fc 0F       		.uleb128 0xf
 2633 05fd A6000000 		.4byte	.LASF58
 2634 0601 01       		.byte	0x1
 2635 0602 DE09     		.2byte	0x9de
 2636 0604 00000000 		.4byte	.LFB25
 2637 0608 18000000 		.4byte	.LFE25-.LFB25
 2638 060c 01       		.uleb128 0x1
 2639 060d 9C       		.byte	0x9c
 2640 060e 0A       		.uleb128 0xa
 2641 060f CD050000 		.4byte	.LASF59
 2642 0613 01       		.byte	0x1
 2643 0614 F709     		.2byte	0x9f7
 2644 0616 00000000 		.4byte	.LFB26
 2645 061a 30000000 		.4byte	.LFE26-.LFB26
 2646 061e 01       		.uleb128 0x1
 2647 061f 9C       		.byte	0x9c
 2648 0620 47060000 		.4byte	0x647
 2649 0624 0B       		.uleb128 0xb
 2650 0625 9F040000 		.4byte	.LASF60
 2651 0629 01       		.byte	0x1
 2652 062a F709     		.2byte	0x9f7
 2653 062c 83000000 		.4byte	0x83
 2654 0630 26030000 		.4byte	.LLST26
 2655 0634 0D       		.uleb128 0xd
 2656 0635 0E000000 		.4byte	.LVL70
 2657 0639 C30A0000 		.4byte	0xac3
 2658 063d 0D       		.uleb128 0xd
 2659 063e 26000000 		.4byte	.LVL72
 2660 0642 C30A0000 		.4byte	0xac3
 2661 0646 00       		.byte	0
 2662 0647 0A       		.uleb128 0xa
 2663 0648 6A010000 		.4byte	.LASF61
 2664 064c 01       		.byte	0x1
 2665 064d 130A     		.2byte	0xa13
 2666 064f 00000000 		.4byte	.LFB27
 2667 0653 14000000 		.4byte	.LFE27-.LFB27
 2668 0657 01       		.uleb128 0x1
 2669 0658 9C       		.byte	0x9c
 2670 0659 77060000 		.4byte	0x677
 2671 065d 0B       		.uleb128 0xb
 2672 065e 46060000 		.4byte	.LASF62
 2673 0662 01       		.byte	0x1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 104


 2674 0663 130A     		.2byte	0xa13
 2675 0665 77000000 		.4byte	0x77
 2676 0669 44030000 		.4byte	.LLST27
 2677 066d 0D       		.uleb128 0xd
 2678 066e 0C000000 		.4byte	.LVL76
 2679 0672 C30A0000 		.4byte	0xac3
 2680 0676 00       		.byte	0
 2681 0677 0A       		.uleb128 0xa
 2682 0678 F9020000 		.4byte	.LASF63
 2683 067c 01       		.byte	0x1
 2684 067d 6E02     		.2byte	0x26e
 2685 067f 00000000 		.4byte	.LFB5
 2686 0683 64010000 		.4byte	.LFE5-.LFB5
 2687 0687 01       		.uleb128 0x1
 2688 0688 9C       		.byte	0x9c
 2689 0689 78070000 		.4byte	0x778
 2690 068d 0B       		.uleb128 0xb
 2691 068e F7000000 		.4byte	.LASF64
 2692 0692 01       		.byte	0x1
 2693 0693 6E02     		.2byte	0x26e
 2694 0695 83000000 		.4byte	0x83
 2695 0699 65030000 		.4byte	.LLST28
 2696 069d 0C       		.uleb128 0xc
 2697 069e 0F000000 		.4byte	.LASF65
 2698 06a2 01       		.byte	0x1
 2699 06a3 7402     		.2byte	0x274
 2700 06a5 6B000000 		.4byte	0x6b
 2701 06a9 BA030000 		.4byte	.LLST29
 2702 06ad 0C       		.uleb128 0xc
 2703 06ae 65030000 		.4byte	.LASF66
 2704 06b2 01       		.byte	0x1
 2705 06b3 7502     		.2byte	0x275
 2706 06b5 6B000000 		.4byte	0x6b
 2707 06b9 F9030000 		.4byte	.LLST30
 2708 06bd 0C       		.uleb128 0xc
 2709 06be 35060000 		.4byte	.LASF67
 2710 06c2 01       		.byte	0x1
 2711 06c3 7602     		.2byte	0x276
 2712 06c5 6B000000 		.4byte	0x6b
 2713 06c9 38040000 		.4byte	.LLST31
 2714 06cd 0C       		.uleb128 0xc
 2715 06ce 5C000000 		.4byte	.LASF68
 2716 06d2 01       		.byte	0x1
 2717 06d3 7702     		.2byte	0x277
 2718 06d5 6B000000 		.4byte	0x6b
 2719 06d9 4B040000 		.4byte	.LLST32
 2720 06dd 0C       		.uleb128 0xc
 2721 06de A6050000 		.4byte	.LASF69
 2722 06e2 01       		.byte	0x1
 2723 06e3 7802     		.2byte	0x278
 2724 06e5 6B000000 		.4byte	0x6b
 2725 06e9 6A040000 		.4byte	.LLST33
 2726 06ed 0C       		.uleb128 0xc
 2727 06ee 08010000 		.4byte	.LASF22
 2728 06f2 01       		.byte	0x1
 2729 06f3 8302     		.2byte	0x283
 2730 06f5 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 105


 2731 06f9 9C040000 		.4byte	.LLST34
 2732 06fd 0D       		.uleb128 0xd
 2733 06fe 10000000 		.4byte	.LVL78
 2734 0702 A70A0000 		.4byte	0xaa7
 2735 0706 16       		.uleb128 0x16
 2736 0707 B0000000 		.4byte	.LVL96
 2737 070b C30A0000 		.4byte	0xac3
 2738 070f 19070000 		.4byte	0x719
 2739 0713 15       		.uleb128 0x15
 2740 0714 01       		.uleb128 0x1
 2741 0715 50       		.byte	0x50
 2742 0716 01       		.uleb128 0x1
 2743 0717 35       		.byte	0x35
 2744 0718 00       		.byte	0
 2745 0719 16       		.uleb128 0x16
 2746 071a CE000000 		.4byte	.LVL99
 2747 071e C30A0000 		.4byte	0xac3
 2748 0722 2C070000 		.4byte	0x72c
 2749 0726 15       		.uleb128 0x15
 2750 0727 01       		.uleb128 0x1
 2751 0728 50       		.byte	0x50
 2752 0729 01       		.uleb128 0x1
 2753 072a 35       		.byte	0x35
 2754 072b 00       		.byte	0
 2755 072c 16       		.uleb128 0x16
 2756 072d EE000000 		.4byte	.LVL105
 2757 0731 47060000 		.4byte	0x647
 2758 0735 3F070000 		.4byte	0x73f
 2759 0739 15       		.uleb128 0x15
 2760 073a 01       		.uleb128 0x1
 2761 073b 50       		.byte	0x50
 2762 073c 01       		.uleb128 0x1
 2763 073d 35       		.byte	0x35
 2764 073e 00       		.byte	0
 2765 073f 16       		.uleb128 0x16
 2766 0740 00010000 		.4byte	.LVL106
 2767 0744 C30A0000 		.4byte	0xac3
 2768 0748 52070000 		.4byte	0x752
 2769 074c 15       		.uleb128 0x15
 2770 074d 01       		.uleb128 0x1
 2771 074e 50       		.byte	0x50
 2772 074f 01       		.uleb128 0x1
 2773 0750 35       		.byte	0x35
 2774 0751 00       		.byte	0
 2775 0752 16       		.uleb128 0x16
 2776 0753 08010000 		.4byte	.LVL108
 2777 0757 84030000 		.4byte	0x384
 2778 075b 65070000 		.4byte	0x765
 2779 075f 15       		.uleb128 0x15
 2780 0760 01       		.uleb128 0x1
 2781 0761 50       		.byte	0x50
 2782 0762 01       		.uleb128 0x1
 2783 0763 30       		.byte	0x30
 2784 0764 00       		.byte	0
 2785 0765 14       		.uleb128 0x14
 2786 0766 0E010000 		.4byte	.LVL109
 2787 076a B20A0000 		.4byte	0xab2
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 106


 2788 076e 15       		.uleb128 0x15
 2789 076f 01       		.uleb128 0x1
 2790 0770 50       		.byte	0x50
 2791 0771 04       		.uleb128 0x4
 2792 0772 91       		.byte	0x91
 2793 0773 5C       		.sleb128 -36
 2794 0774 94       		.byte	0x94
 2795 0775 01       		.byte	0x1
 2796 0776 00       		.byte	0
 2797 0777 00       		.byte	0
 2798 0778 0A       		.uleb128 0xa
 2799 0779 6F040000 		.4byte	.LASF70
 2800 077d 01       		.byte	0x1
 2801 077e EA07     		.2byte	0x7ea
 2802 0780 00000000 		.4byte	.LFB6
 2803 0784 44000000 		.4byte	.LFE6-.LFB6
 2804 0788 01       		.uleb128 0x1
 2805 0789 9C       		.byte	0x9c
 2806 078a BD070000 		.4byte	0x7bd
 2807 078e 0B       		.uleb128 0xb
 2808 078f BF040000 		.4byte	.LASF71
 2809 0793 01       		.byte	0x1
 2810 0794 EA07     		.2byte	0x7ea
 2811 0796 83000000 		.4byte	0x83
 2812 079a C8040000 		.4byte	.LLST35
 2813 079e 16       		.uleb128 0x16
 2814 079f 2E000000 		.4byte	.LVL114
 2815 07a3 47060000 		.4byte	0x647
 2816 07a7 B3070000 		.4byte	0x7b3
 2817 07ab 15       		.uleb128 0x15
 2818 07ac 01       		.uleb128 0x1
 2819 07ad 50       		.byte	0x50
 2820 07ae 03       		.uleb128 0x3
 2821 07af 0A       		.byte	0xa
 2822 07b0 E803     		.2byte	0x3e8
 2823 07b2 00       		.byte	0
 2824 07b3 0D       		.uleb128 0xd
 2825 07b4 32000000 		.4byte	.LVL115
 2826 07b8 24020000 		.4byte	0x224
 2827 07bc 00       		.byte	0
 2828 07bd 17       		.uleb128 0x17
 2829 07be FC000000 		.4byte	.LASF72
 2830 07c2 01       		.byte	0x1
 2831 07c3 260A     		.2byte	0xa26
 2832 07c5 00000000 		.4byte	.LFB28
 2833 07c9 4C000000 		.4byte	.LFE28-.LFB28
 2834 07cd 01       		.uleb128 0x1
 2835 07ce 9C       		.byte	0x9c
 2836 07cf E4070000 		.4byte	0x7e4
 2837 07d3 0B       		.uleb128 0xb
 2838 07d4 F7000000 		.4byte	.LASF64
 2839 07d8 01       		.byte	0x1
 2840 07d9 260A     		.2byte	0xa26
 2841 07db 83000000 		.4byte	0x83
 2842 07df F4040000 		.4byte	.LLST36
 2843 07e3 00       		.byte	0
 2844 07e4 0F       		.uleb128 0xf
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 107


 2845 07e5 0E060000 		.4byte	.LASF73
 2846 07e9 01       		.byte	0x1
 2847 07ea AB0A     		.2byte	0xaab
 2848 07ec 00000000 		.4byte	.LFB32
 2849 07f0 10000000 		.4byte	.LFE32-.LFB32
 2850 07f4 01       		.uleb128 0x1
 2851 07f5 9C       		.byte	0x9c
 2852 07f6 0F       		.uleb128 0xf
 2853 07f7 B6000000 		.4byte	.LASF74
 2854 07fb 01       		.byte	0x1
 2855 07fc C20A     		.2byte	0xac2
 2856 07fe 00000000 		.4byte	.LFB33
 2857 0802 10000000 		.4byte	.LFE33-.LFB33
 2858 0806 01       		.uleb128 0x1
 2859 0807 9C       		.byte	0x9c
 2860 0808 0A       		.uleb128 0xa
 2861 0809 BD050000 		.4byte	.LASF75
 2862 080d 01       		.byte	0x1
 2863 080e 930A     		.2byte	0xa93
 2864 0810 00000000 		.4byte	.LFB31
 2865 0814 18000000 		.4byte	.LFE31-.LFB31
 2866 0818 01       		.uleb128 0x1
 2867 0819 9C       		.byte	0x9c
 2868 081a 28080000 		.4byte	0x828
 2869 081e 0D       		.uleb128 0xd
 2870 081f 06000000 		.4byte	.LVL120
 2871 0823 F6070000 		.4byte	0x7f6
 2872 0827 00       		.byte	0
 2873 0828 0F       		.uleb128 0xf
 2874 0829 D5050000 		.4byte	.LASF76
 2875 082d 01       		.byte	0x1
 2876 082e D90A     		.2byte	0xad9
 2877 0830 00000000 		.4byte	.LFB34
 2878 0834 10000000 		.4byte	.LFE34-.LFB34
 2879 0838 01       		.uleb128 0x1
 2880 0839 9C       		.byte	0x9c
 2881 083a 0A       		.uleb128 0xa
 2882 083b 5A060000 		.4byte	.LASF77
 2883 083f 01       		.byte	0x1
 2884 0840 EF0A     		.2byte	0xaef
 2885 0842 00000000 		.4byte	.LFB35
 2886 0846 10000000 		.4byte	.LFE35-.LFB35
 2887 084a 01       		.uleb128 0x1
 2888 084b 9C       		.byte	0x9c
 2889 084c 61080000 		.4byte	0x861
 2890 0850 0B       		.uleb128 0xb
 2891 0851 EF010000 		.4byte	.LASF56
 2892 0855 01       		.byte	0x1
 2893 0856 EF0A     		.2byte	0xaef
 2894 0858 83000000 		.4byte	0x83
 2895 085c 15050000 		.4byte	.LLST37
 2896 0860 00       		.byte	0
 2897 0861 10       		.uleb128 0x10
 2898 0862 17010000 		.4byte	.LASF79
 2899 0866 01       		.byte	0x1
 2900 0867 030B     		.2byte	0xb03
 2901 0869 83000000 		.4byte	0x83
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 108


 2902 086d 00000000 		.4byte	.LFB36
 2903 0871 10000000 		.4byte	.LFE36-.LFB36
 2904 0875 01       		.uleb128 0x1
 2905 0876 9C       		.byte	0x9c
 2906 0877 10       		.uleb128 0x10
 2907 0878 94030000 		.4byte	.LASF80
 2908 087c 01       		.byte	0x1
 2909 087d 170B     		.2byte	0xb17
 2910 087f 83000000 		.4byte	0x83
 2911 0883 00000000 		.4byte	.LFB37
 2912 0887 10000000 		.4byte	.LFE37-.LFB37
 2913 088b 01       		.uleb128 0x1
 2914 088c 9C       		.byte	0x9c
 2915 088d 10       		.uleb128 0x10
 2916 088e 03020000 		.4byte	.LASF81
 2917 0892 01       		.byte	0x1
 2918 0893 5A0B     		.2byte	0xb5a
 2919 0895 83000000 		.4byte	0x83
 2920 0899 00000000 		.4byte	.LFB38
 2921 089d 10000000 		.4byte	.LFE38-.LFB38
 2922 08a1 01       		.uleb128 0x1
 2923 08a2 9C       		.byte	0x9c
 2924 08a3 18       		.uleb128 0x18
 2925 08a4 6D060000 		.4byte	.LASF101
 2926 08a8 01       		.byte	0x1
 2927 08a9 C10B     		.2byte	0xbc1
 2928 08ab 00000000 		.4byte	.LFB42
 2929 08af 28000000 		.4byte	.LFE42-.LFB42
 2930 08b3 01       		.uleb128 0x1
 2931 08b4 9C       		.byte	0x9c
 2932 08b5 D1080000 		.4byte	0x8d1
 2933 08b9 19       		.uleb128 0x19
 2934 08ba 6900     		.ascii	"i\000"
 2935 08bc 01       		.byte	0x1
 2936 08bd C30B     		.2byte	0xbc3
 2937 08bf 83000000 		.4byte	0x83
 2938 08c3 36050000 		.4byte	.LLST38
 2939 08c7 0D       		.uleb128 0xd
 2940 08c8 06000000 		.4byte	.LVL123
 2941 08cc 8D080000 		.4byte	0x88d
 2942 08d0 00       		.byte	0
 2943 08d1 0F       		.uleb128 0xf
 2944 08d2 26020000 		.4byte	.LASF82
 2945 08d6 01       		.byte	0x1
 2946 08d7 6E0B     		.2byte	0xb6e
 2947 08d9 00000000 		.4byte	.LFB39
 2948 08dd 0C000000 		.4byte	.LFE39-.LFB39
 2949 08e1 01       		.uleb128 0x1
 2950 08e2 9C       		.byte	0x9c
 2951 08e3 17       		.uleb128 0x17
 2952 08e4 E1010000 		.4byte	.LASF83
 2953 08e8 01       		.byte	0x1
 2954 08e9 6D0A     		.2byte	0xa6d
 2955 08eb 00000000 		.4byte	.LFB30
 2956 08ef 44000000 		.4byte	.LFE30-.LFB30
 2957 08f3 01       		.uleb128 0x1
 2958 08f4 9C       		.byte	0x9c
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 109


 2959 08f5 45090000 		.4byte	0x945
 2960 08f9 19       		.uleb128 0x19
 2961 08fa 6900     		.ascii	"i\000"
 2962 08fc 01       		.byte	0x1
 2963 08fd 6F0A     		.2byte	0xa6f
 2964 08ff 83000000 		.4byte	0x83
 2965 0903 54050000 		.4byte	.LLST39
 2966 0907 16       		.uleb128 0x16
 2967 0908 1C000000 		.4byte	.LVL133
 2968 090c A9030000 		.4byte	0x3a9
 2969 0910 23090000 		.4byte	0x923
 2970 0914 15       		.uleb128 0x15
 2971 0915 01       		.uleb128 0x1
 2972 0916 51       		.byte	0x51
 2973 0917 05       		.uleb128 0x5
 2974 0918 03       		.byte	0x3
 2975 0919 00000000 		.4byte	CySysTickServiceCallbacks
 2976 091d 15       		.uleb128 0x15
 2977 091e 01       		.uleb128 0x1
 2978 091f 50       		.byte	0x50
 2979 0920 01       		.uleb128 0x1
 2980 0921 3F       		.byte	0x3f
 2981 0922 00       		.byte	0
 2982 0923 0D       		.uleb128 0xd
 2983 0924 2C000000 		.4byte	.LVL135
 2984 0928 3A080000 		.4byte	0x83a
 2985 092c 0D       		.uleb128 0xd
 2986 092d 30000000 		.4byte	.LVL136
 2987 0931 D1080000 		.4byte	0x8d1
 2988 0935 14       		.uleb128 0x14
 2989 0936 36000000 		.4byte	.LVL137
 2990 093a BD020000 		.4byte	0x2bd
 2991 093e 15       		.uleb128 0x15
 2992 093f 01       		.uleb128 0x1
 2993 0940 50       		.byte	0x50
 2994 0941 01       		.uleb128 0x1
 2995 0942 3F       		.byte	0x3f
 2996 0943 00       		.byte	0
 2997 0944 00       		.byte	0
 2998 0945 0A       		.uleb128 0xa
 2999 0946 26030000 		.4byte	.LASF84
 3000 094a 01       		.byte	0x1
 3001 094b 490A     		.2byte	0xa49
 3002 094d 00000000 		.4byte	.LFB29
 3003 0951 20000000 		.4byte	.LFE29-.LFB29
 3004 0955 01       		.uleb128 0x1
 3005 0956 9C       		.byte	0x9c
 3006 0957 6E090000 		.4byte	0x96e
 3007 095b 0D       		.uleb128 0xd
 3008 095c 0E000000 		.4byte	.LVL138
 3009 0960 E3080000 		.4byte	0x8e3
 3010 0964 0D       		.uleb128 0xd
 3011 0965 18000000 		.4byte	.LVL139
 3012 0969 08080000 		.4byte	0x808
 3013 096d 00       		.byte	0
 3014 096e 0E       		.uleb128 0xe
 3015 096f 7E050000 		.4byte	.LASF85
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 110


 3016 0973 01       		.byte	0x1
 3017 0974 930B     		.2byte	0xb93
 3018 0976 E0000000 		.4byte	0xe0
 3019 097a 00000000 		.4byte	.LFB40
 3020 097e 10000000 		.4byte	.LFE40-.LFB40
 3021 0982 01       		.uleb128 0x1
 3022 0983 9C       		.byte	0x9c
 3023 0984 B5090000 		.4byte	0x9b5
 3024 0988 0B       		.uleb128 0xb
 3025 0989 9F010000 		.4byte	.LASF40
 3026 098d 01       		.byte	0x1
 3027 098e 930B     		.2byte	0xb93
 3028 0990 83000000 		.4byte	0x83
 3029 0994 73050000 		.4byte	.LLST40
 3030 0998 12       		.uleb128 0x12
 3031 0999 7A030000 		.4byte	.LASF86
 3032 099d 01       		.byte	0x1
 3033 099e 930B     		.2byte	0xb93
 3034 09a0 E0000000 		.4byte	0xe0
 3035 09a4 01       		.uleb128 0x1
 3036 09a5 51       		.byte	0x51
 3037 09a6 11       		.uleb128 0x11
 3038 09a7 47000000 		.4byte	.LASF87
 3039 09ab 01       		.byte	0x1
 3040 09ac 950B     		.2byte	0xb95
 3041 09ae E0000000 		.4byte	0xe0
 3042 09b2 01       		.uleb128 0x1
 3043 09b3 50       		.byte	0x50
 3044 09b4 00       		.byte	0
 3045 09b5 0E       		.uleb128 0xe
 3046 09b6 40010000 		.4byte	.LASF88
 3047 09ba 01       		.byte	0x1
 3048 09bb AD0B     		.2byte	0xbad
 3049 09bd E0000000 		.4byte	0xe0
 3050 09c1 00000000 		.4byte	.LFB41
 3051 09c5 0C000000 		.4byte	.LFE41-.LFB41
 3052 09c9 01       		.uleb128 0x1
 3053 09ca 9C       		.byte	0x9c
 3054 09cb E0090000 		.4byte	0x9e0
 3055 09cf 0B       		.uleb128 0xb
 3056 09d0 9F010000 		.4byte	.LASF40
 3057 09d4 01       		.byte	0x1
 3058 09d5 AD0B     		.2byte	0xbad
 3059 09d7 83000000 		.4byte	0x83
 3060 09db 94050000 		.4byte	.LLST41
 3061 09df 00       		.byte	0
 3062 09e0 0A       		.uleb128 0xa
 3063 09e1 F5010000 		.4byte	.LASF89
 3064 09e5 01       		.byte	0x1
 3065 09e6 E60B     		.2byte	0xbe6
 3066 09e8 00000000 		.4byte	.LFB43
 3067 09ec 70000000 		.4byte	.LFE43-.LFB43
 3068 09f0 01       		.uleb128 0x1
 3069 09f1 9C       		.byte	0x9c
 3070 09f2 050A0000 		.4byte	0xa05
 3071 09f6 12       		.uleb128 0x12
 3072 09f7 B4050000 		.4byte	.LASF90
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 111


 3073 09fb 01       		.byte	0x1
 3074 09fc E60B     		.2byte	0xbe6
 3075 09fe 050A0000 		.4byte	0xa05
 3076 0a02 01       		.uleb128 0x1
 3077 0a03 50       		.byte	0x50
 3078 0a04 00       		.byte	0
 3079 0a05 06       		.uleb128 0x6
 3080 0a06 04       		.byte	0x4
 3081 0a07 83000000 		.4byte	0x83
 3082 0a0b 1A       		.uleb128 0x1a
 3083 0a0c E0000000 		.4byte	0xe0
 3084 0a10 1B0A0000 		.4byte	0xa1b
 3085 0a14 1B       		.uleb128 0x1b
 3086 0a15 D9000000 		.4byte	0xd9
 3087 0a19 04       		.byte	0x4
 3088 0a1a 00       		.byte	0
 3089 0a1b 1C       		.uleb128 0x1c
 3090 0a1c 93050000 		.4byte	.LASF91
 3091 0a20 01       		.byte	0x1
 3092 0a21 23       		.byte	0x23
 3093 0a22 0B0A0000 		.4byte	0xa0b
 3094 0a26 05       		.uleb128 0x5
 3095 0a27 03       		.byte	0x3
 3096 0a28 00000000 		.4byte	CySysTickCallbacks
 3097 0a2c 1D       		.uleb128 0x1d
 3098 0a2d 88000000 		.4byte	.LASF92
 3099 0a31 01       		.byte	0x1
 3100 0a32 36       		.byte	0x36
 3101 0a33 83000000 		.4byte	0x83
 3102 0a37 05       		.uleb128 0x5
 3103 0a38 03       		.byte	0x3
 3104 0a39 00000000 		.4byte	CySysTickInitVar
 3105 0a3d 1D       		.uleb128 0x1d
 3106 0a3e 34040000 		.4byte	.LASF93
 3107 0a42 01       		.byte	0x1
 3108 0a43 1C       		.byte	0x1c
 3109 0a44 83000000 		.4byte	0x83
 3110 0a48 05       		.uleb128 0x5
 3111 0a49 03       		.byte	0x3
 3112 0a4a 00000000 		.4byte	cydelayFreqHz
 3113 0a4e 1D       		.uleb128 0x1d
 3114 0a4f 5B010000 		.4byte	.LASF94
 3115 0a53 01       		.byte	0x1
 3116 0a54 1D       		.byte	0x1d
 3117 0a55 83000000 		.4byte	0x83
 3118 0a59 05       		.uleb128 0x5
 3119 0a5a 03       		.byte	0x3
 3120 0a5b 00000000 		.4byte	cydelayFreqKhz
 3121 0a5f 1D       		.uleb128 0x1d
 3122 0a60 FF050000 		.4byte	.LASF95
 3123 0a64 01       		.byte	0x1
 3124 0a65 1E       		.byte	0x1e
 3125 0a66 6B000000 		.4byte	0x6b
 3126 0a6a 05       		.uleb128 0x5
 3127 0a6b 03       		.byte	0x3
 3128 0a6c 00000000 		.4byte	cydelayFreqMhz
 3129 0a70 1D       		.uleb128 0x1d
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 112


 3130 0a71 D4010000 		.4byte	.LASF96
 3131 0a75 01       		.byte	0x1
 3132 0a76 1F       		.byte	0x1f
 3133 0a77 83000000 		.4byte	0x83
 3134 0a7b 05       		.uleb128 0x5
 3135 0a7c 03       		.byte	0x3
 3136 0a7d 00000000 		.4byte	cydelay32kMs
 3137 0a81 1A       		.uleb128 0x1a
 3138 0a82 6B000000 		.4byte	0x6b
 3139 0a86 910A0000 		.4byte	0xa91
 3140 0a8a 1B       		.uleb128 0x1b
 3141 0a8b D9000000 		.4byte	0xd9
 3142 0a8f 2D       		.byte	0x2d
 3143 0a90 00       		.byte	0
 3144 0a91 1D       		.uleb128 0x1d
 3145 0a92 83030000 		.4byte	.LASF97
 3146 0a96 01       		.byte	0x1
 3147 0a97 3B       		.byte	0x3b
 3148 0a98 A20A0000 		.4byte	0xaa2
 3149 0a9c 05       		.uleb128 0x5
 3150 0a9d 03       		.byte	0x3
 3151 0a9e 00000000 		.4byte	cyImoFreqMhz2Reg
 3152 0aa2 1E       		.uleb128 0x1e
 3153 0aa3 810A0000 		.4byte	0xa81
 3154 0aa7 1F       		.uleb128 0x1f
 3155 0aa8 72020000 		.4byte	.LASF102
 3156 0aac 03       		.byte	0x3
 3157 0aad 61       		.byte	0x61
 3158 0aae 6B000000 		.4byte	0x6b
 3159 0ab2 20       		.uleb128 0x20
 3160 0ab3 59040000 		.4byte	.LASF103
 3161 0ab7 03       		.byte	0x3
 3162 0ab8 62       		.byte	0x62
 3163 0ab9 C30A0000 		.4byte	0xac3
 3164 0abd 21       		.uleb128 0x21
 3165 0abe 6B000000 		.4byte	0x6b
 3166 0ac2 00       		.byte	0
 3167 0ac3 22       		.uleb128 0x22
 3168 0ac4 AC040000 		.4byte	.LASF104
 3169 0ac8 03       		.byte	0x3
 3170 0ac9 5D       		.byte	0x5d
 3171 0aca 21       		.uleb128 0x21
 3172 0acb 83000000 		.4byte	0x83
 3173 0acf 00       		.byte	0
 3174 0ad0 00       		.byte	0
 3175              		.section	.debug_abbrev,"",%progbits
 3176              	.Ldebug_abbrev0:
 3177 0000 01       		.uleb128 0x1
 3178 0001 11       		.uleb128 0x11
 3179 0002 01       		.byte	0x1
 3180 0003 25       		.uleb128 0x25
 3181 0004 0E       		.uleb128 0xe
 3182 0005 13       		.uleb128 0x13
 3183 0006 0B       		.uleb128 0xb
 3184 0007 03       		.uleb128 0x3
 3185 0008 0E       		.uleb128 0xe
 3186 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 113


 3187 000a 0E       		.uleb128 0xe
 3188 000b 55       		.uleb128 0x55
 3189 000c 17       		.uleb128 0x17
 3190 000d 11       		.uleb128 0x11
 3191 000e 01       		.uleb128 0x1
 3192 000f 10       		.uleb128 0x10
 3193 0010 17       		.uleb128 0x17
 3194 0011 00       		.byte	0
 3195 0012 00       		.byte	0
 3196 0013 02       		.uleb128 0x2
 3197 0014 24       		.uleb128 0x24
 3198 0015 00       		.byte	0
 3199 0016 0B       		.uleb128 0xb
 3200 0017 0B       		.uleb128 0xb
 3201 0018 3E       		.uleb128 0x3e
 3202 0019 0B       		.uleb128 0xb
 3203 001a 03       		.uleb128 0x3
 3204 001b 0E       		.uleb128 0xe
 3205 001c 00       		.byte	0
 3206 001d 00       		.byte	0
 3207 001e 03       		.uleb128 0x3
 3208 001f 24       		.uleb128 0x24
 3209 0020 00       		.byte	0
 3210 0021 0B       		.uleb128 0xb
 3211 0022 0B       		.uleb128 0xb
 3212 0023 3E       		.uleb128 0x3e
 3213 0024 0B       		.uleb128 0xb
 3214 0025 03       		.uleb128 0x3
 3215 0026 08       		.uleb128 0x8
 3216 0027 00       		.byte	0
 3217 0028 00       		.byte	0
 3218 0029 04       		.uleb128 0x4
 3219 002a 16       		.uleb128 0x16
 3220 002b 00       		.byte	0
 3221 002c 03       		.uleb128 0x3
 3222 002d 0E       		.uleb128 0xe
 3223 002e 3A       		.uleb128 0x3a
 3224 002f 0B       		.uleb128 0xb
 3225 0030 3B       		.uleb128 0x3b
 3226 0031 05       		.uleb128 0x5
 3227 0032 49       		.uleb128 0x49
 3228 0033 13       		.uleb128 0x13
 3229 0034 00       		.byte	0
 3230 0035 00       		.byte	0
 3231 0036 05       		.uleb128 0x5
 3232 0037 35       		.uleb128 0x35
 3233 0038 00       		.byte	0
 3234 0039 49       		.uleb128 0x49
 3235 003a 13       		.uleb128 0x13
 3236 003b 00       		.byte	0
 3237 003c 00       		.byte	0
 3238 003d 06       		.uleb128 0x6
 3239 003e 0F       		.uleb128 0xf
 3240 003f 00       		.byte	0
 3241 0040 0B       		.uleb128 0xb
 3242 0041 0B       		.uleb128 0xb
 3243 0042 49       		.uleb128 0x49
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 114


 3244 0043 13       		.uleb128 0x13
 3245 0044 00       		.byte	0
 3246 0045 00       		.byte	0
 3247 0046 07       		.uleb128 0x7
 3248 0047 15       		.uleb128 0x15
 3249 0048 00       		.byte	0
 3250 0049 27       		.uleb128 0x27
 3251 004a 19       		.uleb128 0x19
 3252 004b 00       		.byte	0
 3253 004c 00       		.byte	0
 3254 004d 08       		.uleb128 0x8
 3255 004e 16       		.uleb128 0x16
 3256 004f 00       		.byte	0
 3257 0050 03       		.uleb128 0x3
 3258 0051 0E       		.uleb128 0xe
 3259 0052 3A       		.uleb128 0x3a
 3260 0053 0B       		.uleb128 0xb
 3261 0054 3B       		.uleb128 0x3b
 3262 0055 0B       		.uleb128 0xb
 3263 0056 49       		.uleb128 0x49
 3264 0057 13       		.uleb128 0x13
 3265 0058 00       		.byte	0
 3266 0059 00       		.byte	0
 3267 005a 09       		.uleb128 0x9
 3268 005b 2E       		.uleb128 0x2e
 3269 005c 00       		.byte	0
 3270 005d 3F       		.uleb128 0x3f
 3271 005e 19       		.uleb128 0x19
 3272 005f 03       		.uleb128 0x3
 3273 0060 0E       		.uleb128 0xe
 3274 0061 3A       		.uleb128 0x3a
 3275 0062 0B       		.uleb128 0xb
 3276 0063 3B       		.uleb128 0x3b
 3277 0064 0B       		.uleb128 0xb
 3278 0065 27       		.uleb128 0x27
 3279 0066 19       		.uleb128 0x19
 3280 0067 11       		.uleb128 0x11
 3281 0068 01       		.uleb128 0x1
 3282 0069 12       		.uleb128 0x12
 3283 006a 06       		.uleb128 0x6
 3284 006b 40       		.uleb128 0x40
 3285 006c 18       		.uleb128 0x18
 3286 006d 9742     		.uleb128 0x2117
 3287 006f 19       		.uleb128 0x19
 3288 0070 00       		.byte	0
 3289 0071 00       		.byte	0
 3290 0072 0A       		.uleb128 0xa
 3291 0073 2E       		.uleb128 0x2e
 3292 0074 01       		.byte	0x1
 3293 0075 3F       		.uleb128 0x3f
 3294 0076 19       		.uleb128 0x19
 3295 0077 03       		.uleb128 0x3
 3296 0078 0E       		.uleb128 0xe
 3297 0079 3A       		.uleb128 0x3a
 3298 007a 0B       		.uleb128 0xb
 3299 007b 3B       		.uleb128 0x3b
 3300 007c 05       		.uleb128 0x5
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 115


 3301 007d 27       		.uleb128 0x27
 3302 007e 19       		.uleb128 0x19
 3303 007f 11       		.uleb128 0x11
 3304 0080 01       		.uleb128 0x1
 3305 0081 12       		.uleb128 0x12
 3306 0082 06       		.uleb128 0x6
 3307 0083 40       		.uleb128 0x40
 3308 0084 18       		.uleb128 0x18
 3309 0085 9742     		.uleb128 0x2117
 3310 0087 19       		.uleb128 0x19
 3311 0088 01       		.uleb128 0x1
 3312 0089 13       		.uleb128 0x13
 3313 008a 00       		.byte	0
 3314 008b 00       		.byte	0
 3315 008c 0B       		.uleb128 0xb
 3316 008d 05       		.uleb128 0x5
 3317 008e 00       		.byte	0
 3318 008f 03       		.uleb128 0x3
 3319 0090 0E       		.uleb128 0xe
 3320 0091 3A       		.uleb128 0x3a
 3321 0092 0B       		.uleb128 0xb
 3322 0093 3B       		.uleb128 0x3b
 3323 0094 05       		.uleb128 0x5
 3324 0095 49       		.uleb128 0x49
 3325 0096 13       		.uleb128 0x13
 3326 0097 02       		.uleb128 0x2
 3327 0098 17       		.uleb128 0x17
 3328 0099 00       		.byte	0
 3329 009a 00       		.byte	0
 3330 009b 0C       		.uleb128 0xc
 3331 009c 34       		.uleb128 0x34
 3332 009d 00       		.byte	0
 3333 009e 03       		.uleb128 0x3
 3334 009f 0E       		.uleb128 0xe
 3335 00a0 3A       		.uleb128 0x3a
 3336 00a1 0B       		.uleb128 0xb
 3337 00a2 3B       		.uleb128 0x3b
 3338 00a3 05       		.uleb128 0x5
 3339 00a4 49       		.uleb128 0x49
 3340 00a5 13       		.uleb128 0x13
 3341 00a6 02       		.uleb128 0x2
 3342 00a7 17       		.uleb128 0x17
 3343 00a8 00       		.byte	0
 3344 00a9 00       		.byte	0
 3345 00aa 0D       		.uleb128 0xd
 3346 00ab 898201   		.uleb128 0x4109
 3347 00ae 00       		.byte	0
 3348 00af 11       		.uleb128 0x11
 3349 00b0 01       		.uleb128 0x1
 3350 00b1 31       		.uleb128 0x31
 3351 00b2 13       		.uleb128 0x13
 3352 00b3 00       		.byte	0
 3353 00b4 00       		.byte	0
 3354 00b5 0E       		.uleb128 0xe
 3355 00b6 2E       		.uleb128 0x2e
 3356 00b7 01       		.byte	0x1
 3357 00b8 3F       		.uleb128 0x3f
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 116


 3358 00b9 19       		.uleb128 0x19
 3359 00ba 03       		.uleb128 0x3
 3360 00bb 0E       		.uleb128 0xe
 3361 00bc 3A       		.uleb128 0x3a
 3362 00bd 0B       		.uleb128 0xb
 3363 00be 3B       		.uleb128 0x3b
 3364 00bf 05       		.uleb128 0x5
 3365 00c0 27       		.uleb128 0x27
 3366 00c1 19       		.uleb128 0x19
 3367 00c2 49       		.uleb128 0x49
 3368 00c3 13       		.uleb128 0x13
 3369 00c4 11       		.uleb128 0x11
 3370 00c5 01       		.uleb128 0x1
 3371 00c6 12       		.uleb128 0x12
 3372 00c7 06       		.uleb128 0x6
 3373 00c8 40       		.uleb128 0x40
 3374 00c9 18       		.uleb128 0x18
 3375 00ca 9742     		.uleb128 0x2117
 3376 00cc 19       		.uleb128 0x19
 3377 00cd 01       		.uleb128 0x1
 3378 00ce 13       		.uleb128 0x13
 3379 00cf 00       		.byte	0
 3380 00d0 00       		.byte	0
 3381 00d1 0F       		.uleb128 0xf
 3382 00d2 2E       		.uleb128 0x2e
 3383 00d3 00       		.byte	0
 3384 00d4 3F       		.uleb128 0x3f
 3385 00d5 19       		.uleb128 0x19
 3386 00d6 03       		.uleb128 0x3
 3387 00d7 0E       		.uleb128 0xe
 3388 00d8 3A       		.uleb128 0x3a
 3389 00d9 0B       		.uleb128 0xb
 3390 00da 3B       		.uleb128 0x3b
 3391 00db 05       		.uleb128 0x5
 3392 00dc 27       		.uleb128 0x27
 3393 00dd 19       		.uleb128 0x19
 3394 00de 11       		.uleb128 0x11
 3395 00df 01       		.uleb128 0x1
 3396 00e0 12       		.uleb128 0x12
 3397 00e1 06       		.uleb128 0x6
 3398 00e2 40       		.uleb128 0x40
 3399 00e3 18       		.uleb128 0x18
 3400 00e4 9742     		.uleb128 0x2117
 3401 00e6 19       		.uleb128 0x19
 3402 00e7 00       		.byte	0
 3403 00e8 00       		.byte	0
 3404 00e9 10       		.uleb128 0x10
 3405 00ea 2E       		.uleb128 0x2e
 3406 00eb 00       		.byte	0
 3407 00ec 3F       		.uleb128 0x3f
 3408 00ed 19       		.uleb128 0x19
 3409 00ee 03       		.uleb128 0x3
 3410 00ef 0E       		.uleb128 0xe
 3411 00f0 3A       		.uleb128 0x3a
 3412 00f1 0B       		.uleb128 0xb
 3413 00f2 3B       		.uleb128 0x3b
 3414 00f3 05       		.uleb128 0x5
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 117


 3415 00f4 27       		.uleb128 0x27
 3416 00f5 19       		.uleb128 0x19
 3417 00f6 49       		.uleb128 0x49
 3418 00f7 13       		.uleb128 0x13
 3419 00f8 11       		.uleb128 0x11
 3420 00f9 01       		.uleb128 0x1
 3421 00fa 12       		.uleb128 0x12
 3422 00fb 06       		.uleb128 0x6
 3423 00fc 40       		.uleb128 0x40
 3424 00fd 18       		.uleb128 0x18
 3425 00fe 9742     		.uleb128 0x2117
 3426 0100 19       		.uleb128 0x19
 3427 0101 00       		.byte	0
 3428 0102 00       		.byte	0
 3429 0103 11       		.uleb128 0x11
 3430 0104 34       		.uleb128 0x34
 3431 0105 00       		.byte	0
 3432 0106 03       		.uleb128 0x3
 3433 0107 0E       		.uleb128 0xe
 3434 0108 3A       		.uleb128 0x3a
 3435 0109 0B       		.uleb128 0xb
 3436 010a 3B       		.uleb128 0x3b
 3437 010b 05       		.uleb128 0x5
 3438 010c 49       		.uleb128 0x49
 3439 010d 13       		.uleb128 0x13
 3440 010e 02       		.uleb128 0x2
 3441 010f 18       		.uleb128 0x18
 3442 0110 00       		.byte	0
 3443 0111 00       		.byte	0
 3444 0112 12       		.uleb128 0x12
 3445 0113 05       		.uleb128 0x5
 3446 0114 00       		.byte	0
 3447 0115 03       		.uleb128 0x3
 3448 0116 0E       		.uleb128 0xe
 3449 0117 3A       		.uleb128 0x3a
 3450 0118 0B       		.uleb128 0xb
 3451 0119 3B       		.uleb128 0x3b
 3452 011a 05       		.uleb128 0x5
 3453 011b 49       		.uleb128 0x49
 3454 011c 13       		.uleb128 0x13
 3455 011d 02       		.uleb128 0x2
 3456 011e 18       		.uleb128 0x18
 3457 011f 00       		.byte	0
 3458 0120 00       		.byte	0
 3459 0121 13       		.uleb128 0x13
 3460 0122 34       		.uleb128 0x34
 3461 0123 00       		.byte	0
 3462 0124 03       		.uleb128 0x3
 3463 0125 0E       		.uleb128 0xe
 3464 0126 3A       		.uleb128 0x3a
 3465 0127 0B       		.uleb128 0xb
 3466 0128 3B       		.uleb128 0x3b
 3467 0129 05       		.uleb128 0x5
 3468 012a 49       		.uleb128 0x49
 3469 012b 13       		.uleb128 0x13
 3470 012c 1C       		.uleb128 0x1c
 3471 012d 06       		.uleb128 0x6
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 118


 3472 012e 00       		.byte	0
 3473 012f 00       		.byte	0
 3474 0130 14       		.uleb128 0x14
 3475 0131 898201   		.uleb128 0x4109
 3476 0134 01       		.byte	0x1
 3477 0135 11       		.uleb128 0x11
 3478 0136 01       		.uleb128 0x1
 3479 0137 31       		.uleb128 0x31
 3480 0138 13       		.uleb128 0x13
 3481 0139 00       		.byte	0
 3482 013a 00       		.byte	0
 3483 013b 15       		.uleb128 0x15
 3484 013c 8A8201   		.uleb128 0x410a
 3485 013f 00       		.byte	0
 3486 0140 02       		.uleb128 0x2
 3487 0141 18       		.uleb128 0x18
 3488 0142 9142     		.uleb128 0x2111
 3489 0144 18       		.uleb128 0x18
 3490 0145 00       		.byte	0
 3491 0146 00       		.byte	0
 3492 0147 16       		.uleb128 0x16
 3493 0148 898201   		.uleb128 0x4109
 3494 014b 01       		.byte	0x1
 3495 014c 11       		.uleb128 0x11
 3496 014d 01       		.uleb128 0x1
 3497 014e 31       		.uleb128 0x31
 3498 014f 13       		.uleb128 0x13
 3499 0150 01       		.uleb128 0x1
 3500 0151 13       		.uleb128 0x13
 3501 0152 00       		.byte	0
 3502 0153 00       		.byte	0
 3503 0154 17       		.uleb128 0x17
 3504 0155 2E       		.uleb128 0x2e
 3505 0156 01       		.byte	0x1
 3506 0157 3F       		.uleb128 0x3f
 3507 0158 19       		.uleb128 0x19
 3508 0159 03       		.uleb128 0x3
 3509 015a 0E       		.uleb128 0xe
 3510 015b 3A       		.uleb128 0x3a
 3511 015c 0B       		.uleb128 0xb
 3512 015d 3B       		.uleb128 0x3b
 3513 015e 05       		.uleb128 0x5
 3514 015f 27       		.uleb128 0x27
 3515 0160 19       		.uleb128 0x19
 3516 0161 11       		.uleb128 0x11
 3517 0162 01       		.uleb128 0x1
 3518 0163 12       		.uleb128 0x12
 3519 0164 06       		.uleb128 0x6
 3520 0165 40       		.uleb128 0x40
 3521 0166 18       		.uleb128 0x18
 3522 0167 9642     		.uleb128 0x2116
 3523 0169 19       		.uleb128 0x19
 3524 016a 01       		.uleb128 0x1
 3525 016b 13       		.uleb128 0x13
 3526 016c 00       		.byte	0
 3527 016d 00       		.byte	0
 3528 016e 18       		.uleb128 0x18
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 119


 3529 016f 2E       		.uleb128 0x2e
 3530 0170 01       		.byte	0x1
 3531 0171 03       		.uleb128 0x3
 3532 0172 0E       		.uleb128 0xe
 3533 0173 3A       		.uleb128 0x3a
 3534 0174 0B       		.uleb128 0xb
 3535 0175 3B       		.uleb128 0x3b
 3536 0176 05       		.uleb128 0x5
 3537 0177 27       		.uleb128 0x27
 3538 0178 19       		.uleb128 0x19
 3539 0179 11       		.uleb128 0x11
 3540 017a 01       		.uleb128 0x1
 3541 017b 12       		.uleb128 0x12
 3542 017c 06       		.uleb128 0x6
 3543 017d 40       		.uleb128 0x40
 3544 017e 18       		.uleb128 0x18
 3545 017f 9642     		.uleb128 0x2116
 3546 0181 19       		.uleb128 0x19
 3547 0182 01       		.uleb128 0x1
 3548 0183 13       		.uleb128 0x13
 3549 0184 00       		.byte	0
 3550 0185 00       		.byte	0
 3551 0186 19       		.uleb128 0x19
 3552 0187 34       		.uleb128 0x34
 3553 0188 00       		.byte	0
 3554 0189 03       		.uleb128 0x3
 3555 018a 08       		.uleb128 0x8
 3556 018b 3A       		.uleb128 0x3a
 3557 018c 0B       		.uleb128 0xb
 3558 018d 3B       		.uleb128 0x3b
 3559 018e 05       		.uleb128 0x5
 3560 018f 49       		.uleb128 0x49
 3561 0190 13       		.uleb128 0x13
 3562 0191 02       		.uleb128 0x2
 3563 0192 17       		.uleb128 0x17
 3564 0193 00       		.byte	0
 3565 0194 00       		.byte	0
 3566 0195 1A       		.uleb128 0x1a
 3567 0196 01       		.uleb128 0x1
 3568 0197 01       		.byte	0x1
 3569 0198 49       		.uleb128 0x49
 3570 0199 13       		.uleb128 0x13
 3571 019a 01       		.uleb128 0x1
 3572 019b 13       		.uleb128 0x13
 3573 019c 00       		.byte	0
 3574 019d 00       		.byte	0
 3575 019e 1B       		.uleb128 0x1b
 3576 019f 21       		.uleb128 0x21
 3577 01a0 00       		.byte	0
 3578 01a1 49       		.uleb128 0x49
 3579 01a2 13       		.uleb128 0x13
 3580 01a3 2F       		.uleb128 0x2f
 3581 01a4 0B       		.uleb128 0xb
 3582 01a5 00       		.byte	0
 3583 01a6 00       		.byte	0
 3584 01a7 1C       		.uleb128 0x1c
 3585 01a8 34       		.uleb128 0x34
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 120


 3586 01a9 00       		.byte	0
 3587 01aa 03       		.uleb128 0x3
 3588 01ab 0E       		.uleb128 0xe
 3589 01ac 3A       		.uleb128 0x3a
 3590 01ad 0B       		.uleb128 0xb
 3591 01ae 3B       		.uleb128 0x3b
 3592 01af 0B       		.uleb128 0xb
 3593 01b0 49       		.uleb128 0x49
 3594 01b1 13       		.uleb128 0x13
 3595 01b2 02       		.uleb128 0x2
 3596 01b3 18       		.uleb128 0x18
 3597 01b4 00       		.byte	0
 3598 01b5 00       		.byte	0
 3599 01b6 1D       		.uleb128 0x1d
 3600 01b7 34       		.uleb128 0x34
 3601 01b8 00       		.byte	0
 3602 01b9 03       		.uleb128 0x3
 3603 01ba 0E       		.uleb128 0xe
 3604 01bb 3A       		.uleb128 0x3a
 3605 01bc 0B       		.uleb128 0xb
 3606 01bd 3B       		.uleb128 0x3b
 3607 01be 0B       		.uleb128 0xb
 3608 01bf 49       		.uleb128 0x49
 3609 01c0 13       		.uleb128 0x13
 3610 01c1 3F       		.uleb128 0x3f
 3611 01c2 19       		.uleb128 0x19
 3612 01c3 02       		.uleb128 0x2
 3613 01c4 18       		.uleb128 0x18
 3614 01c5 00       		.byte	0
 3615 01c6 00       		.byte	0
 3616 01c7 1E       		.uleb128 0x1e
 3617 01c8 26       		.uleb128 0x26
 3618 01c9 00       		.byte	0
 3619 01ca 49       		.uleb128 0x49
 3620 01cb 13       		.uleb128 0x13
 3621 01cc 00       		.byte	0
 3622 01cd 00       		.byte	0
 3623 01ce 1F       		.uleb128 0x1f
 3624 01cf 2E       		.uleb128 0x2e
 3625 01d0 00       		.byte	0
 3626 01d1 3F       		.uleb128 0x3f
 3627 01d2 19       		.uleb128 0x19
 3628 01d3 03       		.uleb128 0x3
 3629 01d4 0E       		.uleb128 0xe
 3630 01d5 3A       		.uleb128 0x3a
 3631 01d6 0B       		.uleb128 0xb
 3632 01d7 3B       		.uleb128 0x3b
 3633 01d8 0B       		.uleb128 0xb
 3634 01d9 27       		.uleb128 0x27
 3635 01da 19       		.uleb128 0x19
 3636 01db 49       		.uleb128 0x49
 3637 01dc 13       		.uleb128 0x13
 3638 01dd 3C       		.uleb128 0x3c
 3639 01de 19       		.uleb128 0x19
 3640 01df 00       		.byte	0
 3641 01e0 00       		.byte	0
 3642 01e1 20       		.uleb128 0x20
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 121


 3643 01e2 2E       		.uleb128 0x2e
 3644 01e3 01       		.byte	0x1
 3645 01e4 3F       		.uleb128 0x3f
 3646 01e5 19       		.uleb128 0x19
 3647 01e6 03       		.uleb128 0x3
 3648 01e7 0E       		.uleb128 0xe
 3649 01e8 3A       		.uleb128 0x3a
 3650 01e9 0B       		.uleb128 0xb
 3651 01ea 3B       		.uleb128 0x3b
 3652 01eb 0B       		.uleb128 0xb
 3653 01ec 27       		.uleb128 0x27
 3654 01ed 19       		.uleb128 0x19
 3655 01ee 3C       		.uleb128 0x3c
 3656 01ef 19       		.uleb128 0x19
 3657 01f0 01       		.uleb128 0x1
 3658 01f1 13       		.uleb128 0x13
 3659 01f2 00       		.byte	0
 3660 01f3 00       		.byte	0
 3661 01f4 21       		.uleb128 0x21
 3662 01f5 05       		.uleb128 0x5
 3663 01f6 00       		.byte	0
 3664 01f7 49       		.uleb128 0x49
 3665 01f8 13       		.uleb128 0x13
 3666 01f9 00       		.byte	0
 3667 01fa 00       		.byte	0
 3668 01fb 22       		.uleb128 0x22
 3669 01fc 2E       		.uleb128 0x2e
 3670 01fd 01       		.byte	0x1
 3671 01fe 3F       		.uleb128 0x3f
 3672 01ff 19       		.uleb128 0x19
 3673 0200 03       		.uleb128 0x3
 3674 0201 0E       		.uleb128 0xe
 3675 0202 3A       		.uleb128 0x3a
 3676 0203 0B       		.uleb128 0xb
 3677 0204 3B       		.uleb128 0x3b
 3678 0205 0B       		.uleb128 0xb
 3679 0206 27       		.uleb128 0x27
 3680 0207 19       		.uleb128 0x19
 3681 0208 3C       		.uleb128 0x3c
 3682 0209 19       		.uleb128 0x19
 3683 020a 00       		.byte	0
 3684 020b 00       		.byte	0
 3685 020c 00       		.byte	0
 3686              		.section	.debug_loc,"",%progbits
 3687              	.Ldebug_loc0:
 3688              	.LLST0:
 3689 0000 00000000 		.4byte	.LVL0
 3690 0004 07000000 		.4byte	.LVL1-1
 3691 0008 0100     		.2byte	0x1
 3692 000a 50       		.byte	0x50
 3693 000b 07000000 		.4byte	.LVL1-1
 3694 000f 1A000000 		.4byte	.LVL5
 3695 0013 0100     		.2byte	0x1
 3696 0015 54       		.byte	0x54
 3697 0016 1A000000 		.4byte	.LVL5
 3698 001a 20000000 		.4byte	.LFE2
 3699 001e 0400     		.2byte	0x4
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 122


 3700 0020 F3       		.byte	0xf3
 3701 0021 01       		.uleb128 0x1
 3702 0022 50       		.byte	0x50
 3703 0023 9F       		.byte	0x9f
 3704 0024 00000000 		.4byte	0
 3705 0028 00000000 		.4byte	0
 3706              	.LLST1:
 3707 002c 08000000 		.4byte	.LVL1
 3708 0030 19000000 		.4byte	.LVL4-1
 3709 0034 0100     		.2byte	0x1
 3710 0036 50       		.byte	0x50
 3711 0037 00000000 		.4byte	0
 3712 003b 00000000 		.4byte	0
 3713              	.LLST2:
 3714 003f 10000000 		.4byte	.LVL2
 3715 0043 14000000 		.4byte	.LVL3
 3716 0047 0100     		.2byte	0x1
 3717 0049 52       		.byte	0x52
 3718 004a 14000000 		.4byte	.LVL3
 3719 004e 19000000 		.4byte	.LVL4-1
 3720 0052 0100     		.2byte	0x1
 3721 0054 53       		.byte	0x53
 3722 0055 00000000 		.4byte	0
 3723 0059 00000000 		.4byte	0
 3724              	.LLST3:
 3725 005d 06000000 		.4byte	.LVL6
 3726 0061 11000000 		.4byte	.LVL8-1
 3727 0065 0100     		.2byte	0x1
 3728 0067 50       		.byte	0x50
 3729 0068 00000000 		.4byte	0
 3730 006c 00000000 		.4byte	0
 3731              	.LLST4:
 3732 0070 0E000000 		.4byte	.LVL7
 3733 0074 14000000 		.4byte	.LVL9
 3734 0078 0100     		.2byte	0x1
 3735 007a 54       		.byte	0x54
 3736 007b 14000000 		.4byte	.LVL9
 3737 007f 1C000000 		.4byte	.LFE3
 3738 0083 0100     		.2byte	0x1
 3739 0085 50       		.byte	0x50
 3740 0086 00000000 		.4byte	0
 3741 008a 00000000 		.4byte	0
 3742              	.LLST5:
 3743 008e 00000000 		.4byte	.LVL10
 3744 0092 07000000 		.4byte	.LVL11-1
 3745 0096 0100     		.2byte	0x1
 3746 0098 50       		.byte	0x50
 3747 0099 07000000 		.4byte	.LVL11-1
 3748 009d 0C000000 		.4byte	.LVL12
 3749 00a1 0100     		.2byte	0x1
 3750 00a3 54       		.byte	0x54
 3751 00a4 0C000000 		.4byte	.LVL12
 3752 00a8 28000000 		.4byte	.LFE4
 3753 00ac 0400     		.2byte	0x4
 3754 00ae F3       		.byte	0xf3
 3755 00af 01       		.uleb128 0x1
 3756 00b0 50       		.byte	0x50
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 123


 3757 00b1 9F       		.byte	0x9f
 3758 00b2 00000000 		.4byte	0
 3759 00b6 00000000 		.4byte	0
 3760              	.LLST6:
 3761 00ba 08000000 		.4byte	.LVL11
 3762 00be 1D000000 		.4byte	.LVL13-1
 3763 00c2 0100     		.2byte	0x1
 3764 00c4 50       		.byte	0x50
 3765 00c5 00000000 		.4byte	0
 3766 00c9 00000000 		.4byte	0
 3767              	.LLST7:
 3768 00cd 00000000 		.4byte	.LVL14
 3769 00d1 04000000 		.4byte	.LVL15
 3770 00d5 0100     		.2byte	0x1
 3771 00d7 50       		.byte	0x50
 3772 00d8 04000000 		.4byte	.LVL15
 3773 00dc 14000000 		.4byte	.LFE10
 3774 00e0 0100     		.2byte	0x1
 3775 00e2 52       		.byte	0x52
 3776 00e3 00000000 		.4byte	0
 3777 00e7 00000000 		.4byte	0
 3778              	.LLST8:
 3779 00eb 00000000 		.4byte	.LVL20
 3780 00ef 04000000 		.4byte	.LVL21
 3781 00f3 0100     		.2byte	0x1
 3782 00f5 50       		.byte	0x50
 3783 00f6 04000000 		.4byte	.LVL21
 3784 00fa 14000000 		.4byte	.LFE19
 3785 00fe 0400     		.2byte	0x4
 3786 0100 F3       		.byte	0xf3
 3787 0101 01       		.uleb128 0x1
 3788 0102 50       		.byte	0x50
 3789 0103 9F       		.byte	0x9f
 3790 0104 00000000 		.4byte	0
 3791 0108 00000000 		.4byte	0
 3792              	.LLST9:
 3793 010c 00000000 		.4byte	.LVL22
 3794 0110 08000000 		.4byte	.LVL23
 3795 0114 0100     		.2byte	0x1
 3796 0116 50       		.byte	0x50
 3797 0117 08000000 		.4byte	.LVL23
 3798 011b 18000000 		.4byte	.LFE20
 3799 011f 0400     		.2byte	0x4
 3800 0121 F3       		.byte	0xf3
 3801 0122 01       		.uleb128 0x1
 3802 0123 50       		.byte	0x50
 3803 0124 9F       		.byte	0x9f
 3804 0125 00000000 		.4byte	0
 3805 0129 00000000 		.4byte	0
 3806              	.LLST10:
 3807 012d 00000000 		.4byte	.LVL24
 3808 0131 04000000 		.4byte	.LVL25
 3809 0135 0100     		.2byte	0x1
 3810 0137 50       		.byte	0x50
 3811 0138 04000000 		.4byte	.LVL25
 3812 013c 14000000 		.4byte	.LFE21
 3813 0140 0400     		.2byte	0x4
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 124


 3814 0142 F3       		.byte	0xf3
 3815 0143 01       		.uleb128 0x1
 3816 0144 50       		.byte	0x50
 3817 0145 9F       		.byte	0x9f
 3818 0146 00000000 		.4byte	0
 3819 014a 00000000 		.4byte	0
 3820              	.LLST11:
 3821 014e 00000000 		.4byte	.LVL26
 3822 0152 04000000 		.4byte	.LVL27
 3823 0156 0100     		.2byte	0x1
 3824 0158 50       		.byte	0x50
 3825 0159 04000000 		.4byte	.LVL27
 3826 015d 14000000 		.4byte	.LFE22
 3827 0161 0400     		.2byte	0x4
 3828 0163 F3       		.byte	0xf3
 3829 0164 01       		.uleb128 0x1
 3830 0165 50       		.byte	0x50
 3831 0166 9F       		.byte	0x9f
 3832 0167 00000000 		.4byte	0
 3833 016b 00000000 		.4byte	0
 3834              	.LLST12:
 3835 016f 00000000 		.4byte	.LVL28
 3836 0173 04000000 		.4byte	.LVL29
 3837 0177 0100     		.2byte	0x1
 3838 0179 50       		.byte	0x50
 3839 017a 04000000 		.4byte	.LVL29
 3840 017e 14000000 		.4byte	.LFE23
 3841 0182 0400     		.2byte	0x4
 3842 0184 F3       		.byte	0xf3
 3843 0185 01       		.uleb128 0x1
 3844 0186 50       		.byte	0x50
 3845 0187 9F       		.byte	0x9f
 3846 0188 00000000 		.4byte	0
 3847 018c 00000000 		.4byte	0
 3848              	.LLST13:
 3849 0190 00000000 		.4byte	.LVL31
 3850 0194 0C000000 		.4byte	.LVL33
 3851 0198 0100     		.2byte	0x1
 3852 019a 50       		.byte	0x50
 3853 019b 0C000000 		.4byte	.LVL33
 3854 019f 20000000 		.4byte	.LFE13
 3855 01a3 0400     		.2byte	0x4
 3856 01a5 F3       		.byte	0xf3
 3857 01a6 01       		.uleb128 0x1
 3858 01a7 50       		.byte	0x50
 3859 01a8 9F       		.byte	0x9f
 3860 01a9 00000000 		.4byte	0
 3861 01ad 00000000 		.4byte	0
 3862              	.LLST14:
 3863 01b1 00000000 		.4byte	.LVL31
 3864 01b5 0F000000 		.4byte	.LVL34-1
 3865 01b9 0100     		.2byte	0x1
 3866 01bb 51       		.byte	0x51
 3867 01bc 0F000000 		.4byte	.LVL34-1
 3868 01c0 1E000000 		.4byte	.LVL36
 3869 01c4 0100     		.2byte	0x1
 3870 01c6 55       		.byte	0x55
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 125


 3871 01c7 1E000000 		.4byte	.LVL36
 3872 01cb 20000000 		.4byte	.LFE13
 3873 01cf 0400     		.2byte	0x4
 3874 01d1 F3       		.byte	0xf3
 3875 01d2 01       		.uleb128 0x1
 3876 01d3 51       		.byte	0x51
 3877 01d4 9F       		.byte	0x9f
 3878 01d5 00000000 		.4byte	0
 3879 01d9 00000000 		.4byte	0
 3880              	.LLST15:
 3881 01dd 00000000 		.4byte	.LVL37
 3882 01e1 0A000000 		.4byte	.LVL39
 3883 01e5 0100     		.2byte	0x1
 3884 01e7 50       		.byte	0x50
 3885 01e8 0A000000 		.4byte	.LVL39
 3886 01ec 1C000000 		.4byte	.LFE14
 3887 01f0 0400     		.2byte	0x4
 3888 01f2 F3       		.byte	0xf3
 3889 01f3 01       		.uleb128 0x1
 3890 01f4 50       		.byte	0x50
 3891 01f5 9F       		.byte	0x9f
 3892 01f6 00000000 		.4byte	0
 3893 01fa 00000000 		.4byte	0
 3894              	.LLST16:
 3895 01fe 00000000 		.4byte	.LVL41
 3896 0202 0C000000 		.4byte	.LVL43
 3897 0206 0100     		.2byte	0x1
 3898 0208 50       		.byte	0x50
 3899 0209 0C000000 		.4byte	.LVL43
 3900 020d 24000000 		.4byte	.LFE15
 3901 0211 0400     		.2byte	0x4
 3902 0213 F3       		.byte	0xf3
 3903 0214 01       		.uleb128 0x1
 3904 0215 50       		.byte	0x50
 3905 0216 9F       		.byte	0x9f
 3906 0217 00000000 		.4byte	0
 3907 021b 00000000 		.4byte	0
 3908              	.LLST17:
 3909 021f 00000000 		.4byte	.LVL41
 3910 0223 0F000000 		.4byte	.LVL44-1
 3911 0227 0100     		.2byte	0x1
 3912 0229 51       		.byte	0x51
 3913 022a 0F000000 		.4byte	.LVL44-1
 3914 022e 1C000000 		.4byte	.LVL46
 3915 0232 0100     		.2byte	0x1
 3916 0234 55       		.byte	0x55
 3917 0235 1C000000 		.4byte	.LVL46
 3918 0239 24000000 		.4byte	.LFE15
 3919 023d 0400     		.2byte	0x4
 3920 023f F3       		.byte	0xf3
 3921 0240 01       		.uleb128 0x1
 3922 0241 51       		.byte	0x51
 3923 0242 9F       		.byte	0x9f
 3924 0243 00000000 		.4byte	0
 3925 0247 00000000 		.4byte	0
 3926              	.LLST18:
 3927 024b 00000000 		.4byte	.LVL47
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 126


 3928 024f 0A000000 		.4byte	.LVL49
 3929 0253 0100     		.2byte	0x1
 3930 0255 50       		.byte	0x50
 3931 0256 0A000000 		.4byte	.LVL49
 3932 025a 20000000 		.4byte	.LFE16
 3933 025e 0400     		.2byte	0x4
 3934 0260 F3       		.byte	0xf3
 3935 0261 01       		.uleb128 0x1
 3936 0262 50       		.byte	0x50
 3937 0263 9F       		.byte	0x9f
 3938 0264 00000000 		.4byte	0
 3939 0268 00000000 		.4byte	0
 3940              	.LLST19:
 3941 026c 00000000 		.4byte	.LVL51
 3942 0270 0C000000 		.4byte	.LVL52
 3943 0274 0100     		.2byte	0x1
 3944 0276 50       		.byte	0x50
 3945 0277 0C000000 		.4byte	.LVL52
 3946 027b 4C000000 		.4byte	.LFE17
 3947 027f 0400     		.2byte	0x4
 3948 0281 F3       		.byte	0xf3
 3949 0282 01       		.uleb128 0x1
 3950 0283 50       		.byte	0x50
 3951 0284 9F       		.byte	0x9f
 3952 0285 00000000 		.4byte	0
 3953 0289 00000000 		.4byte	0
 3954              	.LLST20:
 3955 028d 00000000 		.4byte	.LVL51
 3956 0291 0F000000 		.4byte	.LVL53-1
 3957 0295 0100     		.2byte	0x1
 3958 0297 51       		.byte	0x51
 3959 0298 0F000000 		.4byte	.LVL53-1
 3960 029c 4C000000 		.4byte	.LFE17
 3961 02a0 0400     		.2byte	0x4
 3962 02a2 F3       		.byte	0xf3
 3963 02a3 01       		.uleb128 0x1
 3964 02a4 51       		.byte	0x51
 3965 02a5 9F       		.byte	0x9f
 3966 02a6 00000000 		.4byte	0
 3967 02aa 00000000 		.4byte	0
 3968              	.LLST21:
 3969 02ae 26000000 		.4byte	.LVL56
 3970 02b2 43000000 		.4byte	.LVL61-1
 3971 02b6 0100     		.2byte	0x1
 3972 02b8 50       		.byte	0x50
 3973 02b9 00000000 		.4byte	0
 3974 02bd 00000000 		.4byte	0
 3975              	.LLST22:
 3976 02c1 22000000 		.4byte	.LVL55
 3977 02c5 3C000000 		.4byte	.LVL59
 3978 02c9 0100     		.2byte	0x1
 3979 02cb 55       		.byte	0x55
 3980 02cc 00000000 		.4byte	0
 3981 02d0 00000000 		.4byte	0
 3982              	.LLST23:
 3983 02d4 32000000 		.4byte	.LVL57
 3984 02d8 3E000000 		.4byte	.LVL60
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 127


 3985 02dc 0100     		.2byte	0x1
 3986 02de 53       		.byte	0x53
 3987 02df 3E000000 		.4byte	.LVL60
 3988 02e3 44000000 		.4byte	.LVL62
 3989 02e7 0100     		.2byte	0x1
 3990 02e9 55       		.byte	0x55
 3991 02ea 00000000 		.4byte	0
 3992 02ee 00000000 		.4byte	0
 3993              	.LLST24:
 3994 02f2 00000000 		.4byte	.LVL63
 3995 02f6 0A000000 		.4byte	.LVL64
 3996 02fa 0100     		.2byte	0x1
 3997 02fc 50       		.byte	0x50
 3998 02fd 0A000000 		.4byte	.LVL64
 3999 0301 2C000000 		.4byte	.LFE18
 4000 0305 0400     		.2byte	0x4
 4001 0307 F3       		.byte	0xf3
 4002 0308 01       		.uleb128 0x1
 4003 0309 50       		.byte	0x50
 4004 030a 9F       		.byte	0x9f
 4005 030b 00000000 		.4byte	0
 4006 030f 00000000 		.4byte	0
 4007              	.LLST25:
 4008 0313 24000000 		.4byte	.LVL66
 4009 0317 26000000 		.4byte	.LVL67
 4010 031b 0100     		.2byte	0x1
 4011 031d 50       		.byte	0x50
 4012 031e 00000000 		.4byte	0
 4013 0322 00000000 		.4byte	0
 4014              	.LLST26:
 4015 0326 00000000 		.4byte	.LVL68
 4016 032a 06000000 		.4byte	.LVL69
 4017 032e 0100     		.2byte	0x1
 4018 0330 50       		.byte	0x50
 4019 0331 06000000 		.4byte	.LVL69
 4020 0335 26000000 		.4byte	.LVL73
 4021 0339 0100     		.2byte	0x1
 4022 033b 54       		.byte	0x54
 4023 033c 00000000 		.4byte	0
 4024 0340 00000000 		.4byte	0
 4025              	.LLST27:
 4026 0344 00000000 		.4byte	.LVL74
 4027 0348 08000000 		.4byte	.LVL75
 4028 034c 0100     		.2byte	0x1
 4029 034e 50       		.byte	0x50
 4030 034f 08000000 		.4byte	.LVL75
 4031 0353 14000000 		.4byte	.LFE27
 4032 0357 0400     		.2byte	0x4
 4033 0359 F3       		.byte	0xf3
 4034 035a 01       		.uleb128 0x1
 4035 035b 50       		.byte	0x50
 4036 035c 9F       		.byte	0x9f
 4037 035d 00000000 		.4byte	0
 4038 0361 00000000 		.4byte	0
 4039              	.LLST28:
 4040 0365 00000000 		.4byte	.LVL77
 4041 0369 0F000000 		.4byte	.LVL78-1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 128


 4042 036d 0100     		.2byte	0x1
 4043 036f 50       		.byte	0x50
 4044 0370 0F000000 		.4byte	.LVL78-1
 4045 0374 D4000000 		.4byte	.LVL100
 4046 0378 0100     		.2byte	0x1
 4047 037a 54       		.byte	0x54
 4048 037b D4000000 		.4byte	.LVL100
 4049 037f 02010000 		.4byte	.LVL107
 4050 0383 0700     		.2byte	0x7
 4051 0385 74       		.byte	0x74
 4052 0386 B39C8080 		.sleb128 -268431821
 4052      7F
 4053 038b 9F       		.byte	0x9f
 4054 038c 02010000 		.4byte	.LVL107
 4055 0390 08010000 		.4byte	.LVL108
 4056 0394 0100     		.2byte	0x1
 4057 0396 54       		.byte	0x54
 4058 0397 08010000 		.4byte	.LVL108
 4059 039b 10010000 		.4byte	.LVL110
 4060 039f 0300     		.2byte	0x3
 4061 03a1 77       		.byte	0x77
 4062 03a2 03       		.sleb128 3
 4063 03a3 9F       		.byte	0x9f
 4064 03a4 10010000 		.4byte	.LVL110
 4065 03a8 64010000 		.4byte	.LFE5
 4066 03ac 0400     		.2byte	0x4
 4067 03ae F3       		.byte	0xf3
 4068 03af 01       		.uleb128 0x1
 4069 03b0 50       		.byte	0x50
 4070 03b1 9F       		.byte	0x9f
 4071 03b2 00000000 		.4byte	0
 4072 03b6 00000000 		.4byte	0
 4073              	.LLST29:
 4074 03ba 2A000000 		.4byte	.LVL80
 4075 03be 34000000 		.4byte	.LVL82
 4076 03c2 0100     		.2byte	0x1
 4077 03c4 5A       		.byte	0x5a
 4078 03c5 46000000 		.4byte	.LVL83
 4079 03c9 50000000 		.4byte	.LVL85
 4080 03cd 0100     		.2byte	0x1
 4081 03cf 5A       		.byte	0x5a
 4082 03d0 62000000 		.4byte	.LVL86
 4083 03d4 6C000000 		.4byte	.LVL88
 4084 03d8 0100     		.2byte	0x1
 4085 03da 5A       		.byte	0x5a
 4086 03db 7E000000 		.4byte	.LVL89
 4087 03df 88000000 		.4byte	.LVL91
 4088 03e3 0100     		.2byte	0x1
 4089 03e5 5A       		.byte	0x5a
 4090 03e6 90000000 		.4byte	.LVL92
 4091 03ea 02010000 		.4byte	.LVL107
 4092 03ee 0100     		.2byte	0x1
 4093 03f0 5A       		.byte	0x5a
 4094 03f1 00000000 		.4byte	0
 4095 03f5 00000000 		.4byte	0
 4096              	.LLST30:
 4097 03f9 32000000 		.4byte	.LVL81
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 129


 4098 03fd 34000000 		.4byte	.LVL82
 4099 0401 0100     		.2byte	0x1
 4100 0403 59       		.byte	0x59
 4101 0404 4E000000 		.4byte	.LVL84
 4102 0408 50000000 		.4byte	.LVL85
 4103 040c 0100     		.2byte	0x1
 4104 040e 59       		.byte	0x59
 4105 040f 6A000000 		.4byte	.LVL87
 4106 0413 6C000000 		.4byte	.LVL88
 4107 0417 0100     		.2byte	0x1
 4108 0419 59       		.byte	0x59
 4109 041a 86000000 		.4byte	.LVL90
 4110 041e 88000000 		.4byte	.LVL91
 4111 0422 0100     		.2byte	0x1
 4112 0424 59       		.byte	0x59
 4113 0425 98000000 		.4byte	.LVL93
 4114 0429 02010000 		.4byte	.LVL107
 4115 042d 0100     		.2byte	0x1
 4116 042f 59       		.byte	0x59
 4117 0430 00000000 		.4byte	0
 4118 0434 00000000 		.4byte	0
 4119              	.LLST31:
 4120 0438 9C000000 		.4byte	.LVL94
 4121 043c 02010000 		.4byte	.LVL107
 4122 0440 0100     		.2byte	0x1
 4123 0442 56       		.byte	0x56
 4124 0443 00000000 		.4byte	0
 4125 0447 00000000 		.4byte	0
 4126              	.LLST32:
 4127 044b B0000000 		.4byte	.LVL96
 4128 044f B4000000 		.4byte	.LVL97
 4129 0453 0200     		.2byte	0x2
 4130 0455 49       		.byte	0x49
 4131 0456 9F       		.byte	0x9f
 4132 0457 BC000000 		.4byte	.LVL98
 4133 045b 02010000 		.4byte	.LVL107
 4134 045f 0100     		.2byte	0x1
 4135 0461 55       		.byte	0x55
 4136 0462 00000000 		.4byte	0
 4137 0466 00000000 		.4byte	0
 4138              	.LLST33:
 4139 046a D8000000 		.4byte	.LVL101
 4140 046e DE000000 		.4byte	.LVL102
 4141 0472 0100     		.2byte	0x1
 4142 0474 53       		.byte	0x53
 4143 0475 DE000000 		.4byte	.LVL102
 4144 0479 E0000000 		.4byte	.LVL103
 4145 047d 0400     		.2byte	0x4
 4146 047f 72       		.byte	0x72
 4147 0480 00       		.sleb128 0
 4148 0481 06       		.byte	0x6
 4149 0482 9F       		.byte	0x9f
 4150 0483 E0000000 		.4byte	.LVL103
 4151 0487 E2000000 		.4byte	.LVL104
 4152 048b 0700     		.2byte	0x7
 4153 048d 0C       		.byte	0xc
 4154 048e 28FF0B40 		.4byte	0x400bff28
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 130


 4155 0492 06       		.byte	0x6
 4156 0493 9F       		.byte	0x9f
 4157 0494 00000000 		.4byte	0
 4158 0498 00000000 		.4byte	0
 4159              	.LLST34:
 4160 049c 12000000 		.4byte	.LVL79
 4161 04a0 AA000000 		.4byte	.LVL95
 4162 04a4 0200     		.2byte	0x2
 4163 04a6 91       		.byte	0x91
 4164 04a7 5C       		.sleb128 -36
 4165 04a8 B4000000 		.4byte	.LVL97
 4166 04ac BC000000 		.4byte	.LVL98
 4167 04b0 0200     		.2byte	0x2
 4168 04b2 91       		.byte	0x91
 4169 04b3 5C       		.sleb128 -36
 4170 04b4 02010000 		.4byte	.LVL107
 4171 04b8 08010000 		.4byte	.LVL108
 4172 04bc 0200     		.2byte	0x2
 4173 04be 91       		.byte	0x91
 4174 04bf 5C       		.sleb128 -36
 4175 04c0 00000000 		.4byte	0
 4176 04c4 00000000 		.4byte	0
 4177              	.LLST35:
 4178 04c8 00000000 		.4byte	.LVL111
 4179 04cc 14000000 		.4byte	.LVL112
 4180 04d0 0100     		.2byte	0x1
 4181 04d2 50       		.byte	0x50
 4182 04d3 14000000 		.4byte	.LVL112
 4183 04d7 18000000 		.4byte	.LVL113
 4184 04db 0100     		.2byte	0x1
 4185 04dd 53       		.byte	0x53
 4186 04de 18000000 		.4byte	.LVL113
 4187 04e2 44000000 		.4byte	.LFE6
 4188 04e6 0400     		.2byte	0x4
 4189 04e8 F3       		.byte	0xf3
 4190 04e9 01       		.uleb128 0x1
 4191 04ea 50       		.byte	0x50
 4192 04eb 9F       		.byte	0x9f
 4193 04ec 00000000 		.4byte	0
 4194 04f0 00000000 		.4byte	0
 4195              	.LLST36:
 4196 04f4 00000000 		.4byte	.LVL116
 4197 04f8 1A000000 		.4byte	.LVL117
 4198 04fc 0100     		.2byte	0x1
 4199 04fe 50       		.byte	0x50
 4200 04ff 1A000000 		.4byte	.LVL117
 4201 0503 4C000000 		.4byte	.LFE28
 4202 0507 0400     		.2byte	0x4
 4203 0509 F3       		.byte	0xf3
 4204 050a 01       		.uleb128 0x1
 4205 050b 50       		.byte	0x50
 4206 050c 9F       		.byte	0x9f
 4207 050d 00000000 		.4byte	0
 4208 0511 00000000 		.4byte	0
 4209              	.LLST37:
 4210 0515 00000000 		.4byte	.LVL121
 4211 0519 02000000 		.4byte	.LVL122
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 131


 4212 051d 0100     		.2byte	0x1
 4213 051f 50       		.byte	0x50
 4214 0520 02000000 		.4byte	.LVL122
 4215 0524 10000000 		.4byte	.LFE35
 4216 0528 0400     		.2byte	0x4
 4217 052a F3       		.byte	0xf3
 4218 052b 01       		.uleb128 0x1
 4219 052c 50       		.byte	0x50
 4220 052d 9F       		.byte	0x9f
 4221 052e 00000000 		.4byte	0
 4222 0532 00000000 		.4byte	0
 4223              	.LLST38:
 4224 0536 0C000000 		.4byte	.LVL124
 4225 053a 1C000000 		.4byte	.LVL127
 4226 053e 0100     		.2byte	0x1
 4227 0540 54       		.byte	0x54
 4228 0541 1E000000 		.4byte	.LVL128
 4229 0545 22000000 		.4byte	.LVL129
 4230 0549 0100     		.2byte	0x1
 4231 054b 54       		.byte	0x54
 4232 054c 00000000 		.4byte	0
 4233 0550 00000000 		.4byte	0
 4234              	.LLST39:
 4235 0554 02000000 		.4byte	.LVL130
 4236 0558 06000000 		.4byte	.LVL131
 4237 055c 0200     		.2byte	0x2
 4238 055e 30       		.byte	0x30
 4239 055f 9F       		.byte	0x9f
 4240 0560 06000000 		.4byte	.LVL131
 4241 0564 1B000000 		.4byte	.LVL133-1
 4242 0568 0100     		.2byte	0x1
 4243 056a 53       		.byte	0x53
 4244 056b 00000000 		.4byte	0
 4245 056f 00000000 		.4byte	0
 4246              	.LLST40:
 4247 0573 00000000 		.4byte	.LVL140
 4248 0577 06000000 		.4byte	.LVL141
 4249 057b 0100     		.2byte	0x1
 4250 057d 50       		.byte	0x50
 4251 057e 06000000 		.4byte	.LVL141
 4252 0582 10000000 		.4byte	.LFE40
 4253 0586 0400     		.2byte	0x4
 4254 0588 F3       		.byte	0xf3
 4255 0589 01       		.uleb128 0x1
 4256 058a 50       		.byte	0x50
 4257 058b 9F       		.byte	0x9f
 4258 058c 00000000 		.4byte	0
 4259 0590 00000000 		.4byte	0
 4260              	.LLST41:
 4261 0594 00000000 		.4byte	.LVL142
 4262 0598 02000000 		.4byte	.LVL143
 4263 059c 0100     		.2byte	0x1
 4264 059e 50       		.byte	0x50
 4265 059f 02000000 		.4byte	.LVL143
 4266 05a3 0C000000 		.4byte	.LFE41
 4267 05a7 0400     		.2byte	0x4
 4268 05a9 F3       		.byte	0xf3
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 132


 4269 05aa 01       		.uleb128 0x1
 4270 05ab 50       		.byte	0x50
 4271 05ac 9F       		.byte	0x9f
 4272 05ad 00000000 		.4byte	0
 4273 05b1 00000000 		.4byte	0
 4274              		.section	.debug_aranges,"",%progbits
 4275 0000 74010000 		.4byte	0x174
 4276 0004 0200     		.2byte	0x2
 4277 0006 00000000 		.4byte	.Ldebug_info0
 4278 000a 04       		.byte	0x4
 4279 000b 00       		.byte	0
 4280 000c 0000     		.2byte	0
 4281 000e 0000     		.2byte	0
 4282 0010 00000000 		.4byte	.LFB0
 4283 0014 14000000 		.4byte	.LFE0-.LFB0
 4284 0018 00000000 		.4byte	.LFB1
 4285 001c 10000000 		.4byte	.LFE1-.LFB1
 4286 0020 00000000 		.4byte	.LFB2
 4287 0024 20000000 		.4byte	.LFE2-.LFB2
 4288 0028 00000000 		.4byte	.LFB3
 4289 002c 1C000000 		.4byte	.LFE3-.LFB3
 4290 0030 00000000 		.4byte	.LFB4
 4291 0034 28000000 		.4byte	.LFE4-.LFB4
 4292 0038 00000000 		.4byte	.LFB7
 4293 003c 20000000 		.4byte	.LFE7-.LFB7
 4294 0040 00000000 		.4byte	.LFB8
 4295 0044 10000000 		.4byte	.LFE8-.LFB8
 4296 0048 00000000 		.4byte	.LFB9
 4297 004c 0C000000 		.4byte	.LFE9-.LFB9
 4298 0050 00000000 		.4byte	.LFB10
 4299 0054 14000000 		.4byte	.LFE10-.LFB10
 4300 0058 00000000 		.4byte	.LFB11
 4301 005c 10000000 		.4byte	.LFE11-.LFB11
 4302 0060 00000000 		.4byte	.LFB12
 4303 0064 0C000000 		.4byte	.LFE12-.LFB12
 4304 0068 00000000 		.4byte	.LFB19
 4305 006c 14000000 		.4byte	.LFE19-.LFB19
 4306 0070 00000000 		.4byte	.LFB20
 4307 0074 18000000 		.4byte	.LFE20-.LFB20
 4308 0078 00000000 		.4byte	.LFB21
 4309 007c 14000000 		.4byte	.LFE21-.LFB21
 4310 0080 00000000 		.4byte	.LFB22
 4311 0084 14000000 		.4byte	.LFE22-.LFB22
 4312 0088 00000000 		.4byte	.LFB23
 4313 008c 14000000 		.4byte	.LFE23-.LFB23
 4314 0090 00000000 		.4byte	.LFB24
 4315 0094 04000000 		.4byte	.LFE24-.LFB24
 4316 0098 00000000 		.4byte	.LFB13
 4317 009c 20000000 		.4byte	.LFE13-.LFB13
 4318 00a0 00000000 		.4byte	.LFB14
 4319 00a4 1C000000 		.4byte	.LFE14-.LFB14
 4320 00a8 00000000 		.4byte	.LFB15
 4321 00ac 24000000 		.4byte	.LFE15-.LFB15
 4322 00b0 00000000 		.4byte	.LFB16
 4323 00b4 20000000 		.4byte	.LFE16-.LFB16
 4324 00b8 00000000 		.4byte	.LFB17
 4325 00bc 4C000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 133


 4326 00c0 00000000 		.4byte	.LFB18
 4327 00c4 2C000000 		.4byte	.LFE18-.LFB18
 4328 00c8 00000000 		.4byte	.LFB25
 4329 00cc 18000000 		.4byte	.LFE25-.LFB25
 4330 00d0 00000000 		.4byte	.LFB26
 4331 00d4 30000000 		.4byte	.LFE26-.LFB26
 4332 00d8 00000000 		.4byte	.LFB27
 4333 00dc 14000000 		.4byte	.LFE27-.LFB27
 4334 00e0 00000000 		.4byte	.LFB5
 4335 00e4 64010000 		.4byte	.LFE5-.LFB5
 4336 00e8 00000000 		.4byte	.LFB6
 4337 00ec 44000000 		.4byte	.LFE6-.LFB6
 4338 00f0 00000000 		.4byte	.LFB28
 4339 00f4 4C000000 		.4byte	.LFE28-.LFB28
 4340 00f8 00000000 		.4byte	.LFB32
 4341 00fc 10000000 		.4byte	.LFE32-.LFB32
 4342 0100 00000000 		.4byte	.LFB33
 4343 0104 10000000 		.4byte	.LFE33-.LFB33
 4344 0108 00000000 		.4byte	.LFB31
 4345 010c 18000000 		.4byte	.LFE31-.LFB31
 4346 0110 00000000 		.4byte	.LFB34
 4347 0114 10000000 		.4byte	.LFE34-.LFB34
 4348 0118 00000000 		.4byte	.LFB35
 4349 011c 10000000 		.4byte	.LFE35-.LFB35
 4350 0120 00000000 		.4byte	.LFB36
 4351 0124 10000000 		.4byte	.LFE36-.LFB36
 4352 0128 00000000 		.4byte	.LFB37
 4353 012c 10000000 		.4byte	.LFE37-.LFB37
 4354 0130 00000000 		.4byte	.LFB38
 4355 0134 10000000 		.4byte	.LFE38-.LFB38
 4356 0138 00000000 		.4byte	.LFB42
 4357 013c 28000000 		.4byte	.LFE42-.LFB42
 4358 0140 00000000 		.4byte	.LFB39
 4359 0144 0C000000 		.4byte	.LFE39-.LFB39
 4360 0148 00000000 		.4byte	.LFB30
 4361 014c 44000000 		.4byte	.LFE30-.LFB30
 4362 0150 00000000 		.4byte	.LFB29
 4363 0154 20000000 		.4byte	.LFE29-.LFB29
 4364 0158 00000000 		.4byte	.LFB40
 4365 015c 10000000 		.4byte	.LFE40-.LFB40
 4366 0160 00000000 		.4byte	.LFB41
 4367 0164 0C000000 		.4byte	.LFE41-.LFB41
 4368 0168 00000000 		.4byte	.LFB43
 4369 016c 70000000 		.4byte	.LFE43-.LFB43
 4370 0170 00000000 		.4byte	0
 4371 0174 00000000 		.4byte	0
 4372              		.section	.debug_ranges,"",%progbits
 4373              	.Ldebug_ranges0:
 4374 0000 00000000 		.4byte	.LFB0
 4375 0004 14000000 		.4byte	.LFE0
 4376 0008 00000000 		.4byte	.LFB1
 4377 000c 10000000 		.4byte	.LFE1
 4378 0010 00000000 		.4byte	.LFB2
 4379 0014 20000000 		.4byte	.LFE2
 4380 0018 00000000 		.4byte	.LFB3
 4381 001c 1C000000 		.4byte	.LFE3
 4382 0020 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 134


 4383 0024 28000000 		.4byte	.LFE4
 4384 0028 00000000 		.4byte	.LFB7
 4385 002c 20000000 		.4byte	.LFE7
 4386 0030 00000000 		.4byte	.LFB8
 4387 0034 10000000 		.4byte	.LFE8
 4388 0038 00000000 		.4byte	.LFB9
 4389 003c 0C000000 		.4byte	.LFE9
 4390 0040 00000000 		.4byte	.LFB10
 4391 0044 14000000 		.4byte	.LFE10
 4392 0048 00000000 		.4byte	.LFB11
 4393 004c 10000000 		.4byte	.LFE11
 4394 0050 00000000 		.4byte	.LFB12
 4395 0054 0C000000 		.4byte	.LFE12
 4396 0058 00000000 		.4byte	.LFB19
 4397 005c 14000000 		.4byte	.LFE19
 4398 0060 00000000 		.4byte	.LFB20
 4399 0064 18000000 		.4byte	.LFE20
 4400 0068 00000000 		.4byte	.LFB21
 4401 006c 14000000 		.4byte	.LFE21
 4402 0070 00000000 		.4byte	.LFB22
 4403 0074 14000000 		.4byte	.LFE22
 4404 0078 00000000 		.4byte	.LFB23
 4405 007c 14000000 		.4byte	.LFE23
 4406 0080 00000000 		.4byte	.LFB24
 4407 0084 04000000 		.4byte	.LFE24
 4408 0088 00000000 		.4byte	.LFB13
 4409 008c 20000000 		.4byte	.LFE13
 4410 0090 00000000 		.4byte	.LFB14
 4411 0094 1C000000 		.4byte	.LFE14
 4412 0098 00000000 		.4byte	.LFB15
 4413 009c 24000000 		.4byte	.LFE15
 4414 00a0 00000000 		.4byte	.LFB16
 4415 00a4 20000000 		.4byte	.LFE16
 4416 00a8 00000000 		.4byte	.LFB17
 4417 00ac 4C000000 		.4byte	.LFE17
 4418 00b0 00000000 		.4byte	.LFB18
 4419 00b4 2C000000 		.4byte	.LFE18
 4420 00b8 00000000 		.4byte	.LFB25
 4421 00bc 18000000 		.4byte	.LFE25
 4422 00c0 00000000 		.4byte	.LFB26
 4423 00c4 30000000 		.4byte	.LFE26
 4424 00c8 00000000 		.4byte	.LFB27
 4425 00cc 14000000 		.4byte	.LFE27
 4426 00d0 00000000 		.4byte	.LFB5
 4427 00d4 64010000 		.4byte	.LFE5
 4428 00d8 00000000 		.4byte	.LFB6
 4429 00dc 44000000 		.4byte	.LFE6
 4430 00e0 00000000 		.4byte	.LFB28
 4431 00e4 4C000000 		.4byte	.LFE28
 4432 00e8 00000000 		.4byte	.LFB32
 4433 00ec 10000000 		.4byte	.LFE32
 4434 00f0 00000000 		.4byte	.LFB33
 4435 00f4 10000000 		.4byte	.LFE33
 4436 00f8 00000000 		.4byte	.LFB31
 4437 00fc 18000000 		.4byte	.LFE31
 4438 0100 00000000 		.4byte	.LFB34
 4439 0104 10000000 		.4byte	.LFE34
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 135


 4440 0108 00000000 		.4byte	.LFB35
 4441 010c 10000000 		.4byte	.LFE35
 4442 0110 00000000 		.4byte	.LFB36
 4443 0114 10000000 		.4byte	.LFE36
 4444 0118 00000000 		.4byte	.LFB37
 4445 011c 10000000 		.4byte	.LFE37
 4446 0120 00000000 		.4byte	.LFB38
 4447 0124 10000000 		.4byte	.LFE38
 4448 0128 00000000 		.4byte	.LFB42
 4449 012c 28000000 		.4byte	.LFE42
 4450 0130 00000000 		.4byte	.LFB39
 4451 0134 0C000000 		.4byte	.LFE39
 4452 0138 00000000 		.4byte	.LFB30
 4453 013c 44000000 		.4byte	.LFE30
 4454 0140 00000000 		.4byte	.LFB29
 4455 0144 20000000 		.4byte	.LFE29
 4456 0148 00000000 		.4byte	.LFB40
 4457 014c 10000000 		.4byte	.LFE40
 4458 0150 00000000 		.4byte	.LFB41
 4459 0154 0C000000 		.4byte	.LFE41
 4460 0158 00000000 		.4byte	.LFB43
 4461 015c 70000000 		.4byte	.LFE43
 4462 0160 00000000 		.4byte	0
 4463 0164 00000000 		.4byte	0
 4464              		.section	.debug_line,"",%progbits
 4465              	.Ldebug_line0:
 4466 0000 47040000 		.section	.debug_str,"MS",%progbits,1
 4466      02004F00 
 4466      00000201 
 4466      FB0E0D00 
 4466      01010101 
 4467              	.LASF49:
 4468 0000 72616D56 		.ascii	"ramVectorTable\000"
 4468      6563746F 
 4468      72546162 
 4468      6C6500
 4469              	.LASF65:
 4470 000f 62675472 		.ascii	"bgTrim4\000"
 4470      696D3400 
 4471              	.LASF10:
 4472 0017 75696E74 		.ascii	"uint16\000"
 4472      313600
 4473              	.LASF36:
 4474 001e 696E7453 		.ascii	"intState\000"
 4474      74617465 
 4474      00
 4475              	.LASF25:
 4476 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4476      73436C6B 
 4476      57726974 
 4476      65486663 
 4476      6C6B4469 
 4477              	.LASF48:
 4478 0040 6F6C6449 		.ascii	"oldIsr\000"
 4478      737200
 4479              	.LASF87:
 4480 0047 72657456 		.ascii	"retVal\000"
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 136


 4480      616C00
 4481              	.LASF35:
 4482 004e 43794469 		.ascii	"CyDisableInts\000"
 4482      7361626C 
 4482      65496E74 
 4482      7300
 4483              	.LASF68:
 4484 005c 63757272 		.ascii	"currentImoTrim2Value\000"
 4484      656E7449 
 4484      6D6F5472 
 4484      696D3256 
 4484      616C7565 
 4485              	.LASF7:
 4486 0071 6C6F6E67 		.ascii	"long long unsigned int\000"
 4486      206C6F6E 
 4486      6720756E 
 4486      7369676E 
 4486      65642069 
 4487              	.LASF92:
 4488 0088 43795379 		.ascii	"CySysTickInitVar\000"
 4488      73546963 
 4488      6B496E69 
 4488      74566172 
 4488      00
 4489              	.LASF37:
 4490 0099 4379456E 		.ascii	"CyEnableInts\000"
 4490      61626C65 
 4490      496E7473 
 4490      00
 4491              	.LASF58:
 4492 00a6 4379536F 		.ascii	"CySoftwareReset\000"
 4492      66747761 
 4492      72655265 
 4492      73657400 
 4493              	.LASF74:
 4494 00b6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4494      73546963 
 4494      6B456E61 
 4494      626C6549 
 4494      6E746572 
 4495              	.LASF41:
 4496 00cf 4379496E 		.ascii	"CyIntGetState\000"
 4496      74476574 
 4496      53746174 
 4496      6500
 4497              	.LASF6:
 4498 00dd 6C6F6E67 		.ascii	"long long int\000"
 4498      206C6F6E 
 4498      6720696E 
 4498      7400
 4499              	.LASF0:
 4500 00eb 7369676E 		.ascii	"signed char\000"
 4500      65642063 
 4500      68617200 
 4501              	.LASF64:
 4502 00f7 66726571 		.ascii	"freq\000"
 4502      00
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 137


 4503              	.LASF72:
 4504 00fc 43794465 		.ascii	"CyDelayFreq\000"
 4504      6C617946 
 4504      72657100 
 4505              	.LASF22:
 4506 0108 696E7465 		.ascii	"interruptState\000"
 4506      72727570 
 4506      74537461 
 4506      746500
 4507              	.LASF79:
 4508 0117 43795379 		.ascii	"CySysTickGetReload\000"
 4508      73546963 
 4508      6B476574 
 4508      52656C6F 
 4508      616400
 4509              	.LASF4:
 4510 012a 6C6F6E67 		.ascii	"long int\000"
 4510      20696E74 
 4510      00
 4511              	.LASF42:
 4512 0133 4379496E 		.ascii	"CyIntDisable\000"
 4512      74446973 
 4512      61626C65 
 4512      00
 4513              	.LASF88:
 4514 0140 43795379 		.ascii	"CySysTickGetCallback\000"
 4514      73546963 
 4514      6B476574 
 4514      43616C6C 
 4514      6261636B 
 4515              	.LASF9:
 4516 0155 75696E74 		.ascii	"uint8\000"
 4516      3800
 4517              	.LASF94:
 4518 015b 63796465 		.ascii	"cydelayFreqKhz\000"
 4518      6C617946 
 4518      7265714B 
 4518      687A00
 4519              	.LASF61:
 4520 016a 43794465 		.ascii	"CyDelayUs\000"
 4520      6C617955 
 4520      7300
 4521              	.LASF13:
 4522 0174 646F7562 		.ascii	"double\000"
 4522      6C6500
 4523              	.LASF55:
 4524 017b 73686966 		.ascii	"shift\000"
 4524      7400
 4525              	.LASF30:
 4526 0181 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4526      734C7664 
 4526      436C6561 
 4526      72496E74 
 4526      65727275 
 4527              	.LASF11:
 4528 0198 75696E74 		.ascii	"uint32\000"
 4528      333200
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 138


 4529              	.LASF40:
 4530 019f 6E756D62 		.ascii	"number\000"
 4530      657200
 4531              	.LASF38:
 4532 01a6 6D61736B 		.ascii	"mask\000"
 4532      00
 4533              	.LASF31:
 4534 01ab 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4534      73436C6B 
 4534      47657453 
 4534      7973636C 
 4534      6B536F75 
 4535              	.LASF57:
 4536 01c3 4379496E 		.ascii	"CyIntGetPriority\000"
 4536      74476574 
 4536      5072696F 
 4536      72697479 
 4536      00
 4537              	.LASF96:
 4538 01d4 63796465 		.ascii	"cydelay32kMs\000"
 4538      6C617933 
 4538      326B4D73 
 4538      00
 4539              	.LASF83:
 4540 01e1 43795379 		.ascii	"CySysTickInit\000"
 4540      73546963 
 4540      6B496E69 
 4540      7400
 4541              	.LASF56:
 4542 01ef 76616C75 		.ascii	"value\000"
 4542      6500
 4543              	.LASF89:
 4544 01f5 43794765 		.ascii	"CyGetUniqueId\000"
 4544      74556E69 
 4544      71756549 
 4544      6400
 4545              	.LASF81:
 4546 0203 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4546      73546963 
 4546      6B476574 
 4546      436F756E 
 4546      74466C61 
 4547              	.LASF8:
 4548 0219 756E7369 		.ascii	"unsigned int\000"
 4548      676E6564 
 4548      20696E74 
 4548      00
 4549              	.LASF82:
 4550 0226 43795379 		.ascii	"CySysTickClear\000"
 4550      73546963 
 4550      6B436C65 
 4550      617200
 4551              	.LASF5:
 4552 0235 6C6F6E67 		.ascii	"long unsigned int\000"
 4552      20756E73 
 4552      69676E65 
 4552      6420696E 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 139


 4552      7400
 4553              	.LASF78:
 4554 0247 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4554      734C7664 
 4554      47657449 
 4554      6E746572 
 4554      72757074 
 4555              	.LASF21:
 4556 0262 43795379 		.ascii	"CySysClkImoStop\000"
 4556      73436C6B 
 4556      496D6F53 
 4556      746F7000 
 4557              	.LASF102:
 4558 0272 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4558      74657243 
 4558      72697469 
 4558      63616C53 
 4558      65637469 
 4559              	.LASF43:
 4560 0289 4379496E 		.ascii	"CyIntSetPending\000"
 4560      74536574 
 4560      50656E64 
 4560      696E6700 
 4561              	.LASF32:
 4562 0299 43795379 		.ascii	"CySysGetResetReason\000"
 4562      73476574 
 4562      52657365 
 4562      74526561 
 4562      736F6E00 
 4563              	.LASF3:
 4564 02ad 73686F72 		.ascii	"short unsigned int\000"
 4564      7420756E 
 4564      7369676E 
 4564      65642069 
 4564      6E7400
 4565              	.LASF51:
 4566 02c0 4379496E 		.ascii	"CyIntSetVector\000"
 4566      74536574 
 4566      56656374 
 4566      6F7200
 4567              	.LASF99:
 4568 02cf 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 4568      6E657261 
 4568      7465645F 
 4568      536F7572 
 4568      63655C50 
 4569              	.LASF54:
 4570 02f0 7072696F 		.ascii	"priority\000"
 4570      72697479 
 4570      00
 4571              	.LASF63:
 4572 02f9 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4572      73436C6B 
 4572      57726974 
 4572      65496D6F 
 4572      46726571 
 4573              	.LASF46:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 140


 4574 030e 4379496E 		.ascii	"CyIntSetSysVector\000"
 4574      74536574 
 4574      53797356 
 4574      6563746F 
 4574      7200
 4575              	.LASF16:
 4576 0320 72656733 		.ascii	"reg32\000"
 4576      3200
 4577              	.LASF84:
 4578 0326 43795379 		.ascii	"CySysTickStart\000"
 4578      73546963 
 4578      6B537461 
 4578      727400
 4579              	.LASF34:
 4580 0335 72657475 		.ascii	"returnStatus\000"
 4580      726E5374 
 4580      61747573 
 4580      00
 4581              	.LASF18:
 4582 0342 73697A65 		.ascii	"sizetype\000"
 4582      74797065 
 4582      00
 4583              	.LASF44:
 4584 034b 4379496E 		.ascii	"CyIntClearPending\000"
 4584      74436C65 
 4584      61725065 
 4584      6E64696E 
 4584      6700
 4585              	.LASF47:
 4586 035d 61646472 		.ascii	"address\000"
 4586      65737300 
 4587              	.LASF66:
 4588 0365 62675472 		.ascii	"bgTrim5\000"
 4588      696D3500 
 4589              	.LASF24:
 4590 036d 73797363 		.ascii	"sysclkSource\000"
 4590      6C6B536F 
 4590      75726365 
 4590      00
 4591              	.LASF86:
 4592 037a 66756E63 		.ascii	"function\000"
 4592      74696F6E 
 4592      00
 4593              	.LASF97:
 4594 0383 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4594      6F467265 
 4594      714D687A 
 4594      32526567 
 4594      00
 4595              	.LASF80:
 4596 0394 43795379 		.ascii	"CySysTickGetValue\000"
 4596      73546963 
 4596      6B476574 
 4596      56616C75 
 4596      6500
 4597              	.LASF98:
 4598 03a6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 141


 4598      4320342E 
 4598      392E3320 
 4598      32303135 
 4598      30333033 
 4599 03d9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4599      20726576 
 4599      6973696F 
 4599      6E203232 
 4599      31323230 
 4600 040c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4600      66756E63 
 4600      74696F6E 
 4600      2D736563 
 4600      74696F6E 
 4601              	.LASF93:
 4602 0434 63796465 		.ascii	"cydelayFreqHz\000"
 4602      6C617946 
 4602      72657148 
 4602      7A00
 4603              	.LASF53:
 4604 0442 4379496E 		.ascii	"CyIntSetPriority\000"
 4604      74536574 
 4604      5072696F 
 4604      72697479 
 4604      00
 4605              	.LASF12:
 4606 0453 666C6F61 		.ascii	"float\000"
 4606      7400
 4607              	.LASF103:
 4608 0459 43794578 		.ascii	"CyExitCriticalSection\000"
 4608      69744372 
 4608      69746963 
 4608      616C5365 
 4608      6374696F 
 4609              	.LASF70:
 4610 046f 43795379 		.ascii	"CySysLvdEnable\000"
 4610      734C7664 
 4610      456E6162 
 4610      6C6500
 4611              	.LASF19:
 4612 047e 63795379 		.ascii	"cySysTickCallback\000"
 4612      73546963 
 4612      6B43616C 
 4612      6C626163 
 4612      6B00
 4613              	.LASF52:
 4614 0490 4379496E 		.ascii	"CyIntGetVector\000"
 4614      74476574 
 4614      56656374 
 4614      6F7200
 4615              	.LASF60:
 4616 049f 6D696C6C 		.ascii	"milliseconds\000"
 4616      69736563 
 4616      6F6E6473 
 4616      00
 4617              	.LASF104:
 4618 04ac 43794465 		.ascii	"CyDelayCycles\000"
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 142


 4618      6C617943 
 4618      79636C65 
 4618      7300
 4619              	.LASF15:
 4620 04ba 72656738 		.ascii	"reg8\000"
 4620      00
 4621              	.LASF71:
 4622 04bf 74687265 		.ascii	"threshold\000"
 4622      73686F6C 
 4622      6400
 4623              	.LASF45:
 4624 04c9 43794861 		.ascii	"CyHalt\000"
 4624      6C7400
 4625              	.LASF1:
 4626 04d0 756E7369 		.ascii	"unsigned char\000"
 4626      676E6564 
 4626      20636861 
 4626      7200
 4627              	.LASF2:
 4628 04de 73686F72 		.ascii	"short int\000"
 4628      7420696E 
 4628      7400
 4629              	.LASF39:
 4630 04e8 4379496E 		.ascii	"CyIntEnable\000"
 4630      74456E61 
 4630      626C6500 
 4631              	.LASF50:
 4632 04f4 4379496E 		.ascii	"CyIntGetSysVector\000"
 4632      74476574 
 4632      53797356 
 4632      6563746F 
 4632      7200
 4633              	.LASF27:
 4634 0506 636C6B53 		.ascii	"clkSelect\000"
 4634      656C6563 
 4634      7400
 4635              	.LASF33:
 4636 0510 72656173 		.ascii	"reason\000"
 4636      6F6E00
 4637              	.LASF14:
 4638 0517 63686172 		.ascii	"char\000"
 4638      00
 4639              	.LASF17:
 4640 051c 63796973 		.ascii	"cyisraddress\000"
 4640      72616464 
 4640      72657373 
 4640      00
 4641              	.LASF100:
 4642 0529 453A5C37 		.ascii	"E:\\744\\Education\\Git\\PSoC4_Projects\\Diploma_sk"
 4642      34345C45 
 4642      64756361 
 4642      74696F6E 
 4642      5C476974 
 4643 0557 65746368 		.ascii	"etch\\rfid.cydsn\000"
 4643      5C726669 
 4643      642E6379 
 4643      64736E00 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 143


 4644              	.LASF26:
 4645 0567 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4645      73436C6B 
 4645      57726974 
 4645      65537973 
 4645      636C6B44 
 4646              	.LASF85:
 4647 057e 43795379 		.ascii	"CySysTickSetCallback\000"
 4647      73546963 
 4647      6B536574 
 4647      43616C6C 
 4647      6261636B 
 4648              	.LASF91:
 4649 0593 43795379 		.ascii	"CySysTickCallbacks\000"
 4649      73546963 
 4649      6B43616C 
 4649      6C626163 
 4649      6B7300
 4650              	.LASF69:
 4651 05a6 696D6F54 		.ascii	"imoTrim1Value\000"
 4651      72696D31 
 4651      56616C75 
 4651      6500
 4652              	.LASF90:
 4653 05b4 756E6971 		.ascii	"uniqueId\000"
 4653      75654964 
 4653      00
 4654              	.LASF75:
 4655 05bd 43795379 		.ascii	"CySysTickEnable\000"
 4655      73546963 
 4655      6B456E61 
 4655      626C6500 
 4656              	.LASF59:
 4657 05cd 43794465 		.ascii	"CyDelay\000"
 4657      6C617900 
 4658              	.LASF76:
 4659 05d5 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4659      73546963 
 4659      6B446973 
 4659      61626C65 
 4659      496E7465 
 4660              	.LASF29:
 4661 05ef 43795379 		.ascii	"CySysLvdDisable\000"
 4661      734C7664 
 4661      44697361 
 4661      626C6500 
 4662              	.LASF95:
 4663 05ff 63796465 		.ascii	"cydelayFreqMhz\000"
 4663      6C617946 
 4663      7265714D 
 4663      687A00
 4664              	.LASF73:
 4665 060e 43795379 		.ascii	"CySysTickStop\000"
 4665      73546963 
 4665      6B53746F 
 4665      7000
 4666              	.LASF28:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccDpI1Rz.s 			page 144


 4667 061c 64697669 		.ascii	"divider\000"
 4667      64657200 
 4668              	.LASF20:
 4669 0624 43795379 		.ascii	"CySysClkImoStart\000"
 4669      73436C6B 
 4669      496D6F53 
 4669      74617274 
 4669      00
 4670              	.LASF67:
 4671 0635 6E657749 		.ascii	"newImoTrim2Value\000"
 4671      6D6F5472 
 4671      696D3256 
 4671      616C7565 
 4671      00
 4672              	.LASF62:
 4673 0646 6D696372 		.ascii	"microseconds\000"
 4673      6F736563 
 4673      6F6E6473 
 4673      00
 4674              	.LASF23:
 4675 0653 746D7052 		.ascii	"tmpReg\000"
 4675      656700
 4676              	.LASF77:
 4677 065a 43795379 		.ascii	"CySysTickSetReload\000"
 4677      73546963 
 4677      6B536574 
 4677      52656C6F 
 4677      616400
 4678              	.LASF101:
 4679 066d 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4679      73546963 
 4679      6B536572 
 4679      76696365 
 4679      43616C6C 
 4680              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
