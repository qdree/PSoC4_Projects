ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Enable, %function
  23              	PWM_Enable:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM.c **** *
  15:.\Generated_Source\PSoC4/PWM.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM.c **** *
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  25:.\Generated_Source\PSoC4/PWM.c **** 
  26:.\Generated_Source\PSoC4/PWM.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC4/PWM.c **** #ifdef PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM.c **** #endif /* PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM.c **** 
  32:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 2


  33:.\Generated_Source\PSoC4/PWM.c **** 
  34:.\Generated_Source\PSoC4/PWM.c **** 
  35:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
  37:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM.c **** *
  39:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM.c **** *
  44:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM.c **** *  None
  46:.\Generated_Source\PSoC4/PWM.c **** *
  47:.\Generated_Source\PSoC4/PWM.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM.c **** *  None
  49:.\Generated_Source\PSoC4/PWM.c **** *
  50:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM.c **** *
  54:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void) 
  56:.\Generated_Source\PSoC4/PWM.c **** {
  57:.\Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM.c ****     if(PWM_initVar == 0u)
  59:.\Generated_Source\PSoC4/PWM.c ****     {
  60:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
  61:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
  62:.\Generated_Source\PSoC4/PWM.c ****     }
  63:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
  64:.\Generated_Source\PSoC4/PWM.c **** 
  65:.\Generated_Source\PSoC4/PWM.c **** }
  66:.\Generated_Source\PSoC4/PWM.c **** 
  67:.\Generated_Source\PSoC4/PWM.c **** 
  68:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  70:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM.c **** *
  72:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM.c **** *  PWM_Start().
  76:.\Generated_Source\PSoC4/PWM.c **** *
  77:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM.c **** *  None
  79:.\Generated_Source\PSoC4/PWM.c **** *
  80:.\Generated_Source\PSoC4/PWM.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM.c **** *  None
  82:.\Generated_Source\PSoC4/PWM.c **** *
  83:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void) 
  85:.\Generated_Source\PSoC4/PWM.c **** {
  86:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
  87:.\Generated_Source\PSoC4/PWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction || PWM_UseControl) */
  89:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 3


  90:.\Generated_Source\PSoC4/PWM.c ****     #if(!PWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
  92:.\Generated_Source\PSoC4/PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM.c ****             uint8 PWM_interruptState;
  94:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM.c **** 
  97:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= PWM_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM.c **** 
 104:.\Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL3 & ((uint8 )(~PWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL3 = ctrl | PWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM.c **** 
 107:.\Generated_Source\PSoC4/PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNC;
 110:.\Generated_Source\PSoC4/PWM.c **** 
 111:.\Generated_Source\PSoC4/PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM.c **** 
 115:.\Generated_Source\PSoC4/PWM.c ****     #elif (PWM_UseControl)
 116:.\Generated_Source\PSoC4/PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL & ((uint8)(~PWM_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL = ctrl | PWM_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM.c **** 
 123:.\Generated_Source\PSoC4/PWM.c ****     #if (!PWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWM.c ****         #else /* (PWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM.c **** 
 133:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM.c **** 
 136:.\Generated_Source\PSoC4/PWM.c ****     PWM_WritePeriod(PWM_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC4/PWM.c **** 
 138:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWM.c ****         #else
 141:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare1(PWM_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare2(PWM_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM.c **** 
 145:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteKillTime(PWM_MinimumKillTime);
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 4


 147:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM.c **** 
 149:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteDeadTime(PWM_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM.c **** 
 153:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus || PWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM.c **** 
 157:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL2 |= PWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM.c ****     #else
 163:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
 164:.\Generated_Source\PSoC4/PWM.c **** 
 165:.\Generated_Source\PSoC4/PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM.c ****             PWM_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM.c ****             PWM_STATUS_AUX_CTRL |= PWM_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/PWM.c **** 
 171:.\Generated_Source\PSoC4/PWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM.c ****             CyExitCriticalSection(PWM_interruptState);
 173:.\Generated_Source\PSoC4/PWM.c **** 
 174:.\Generated_Source\PSoC4/PWM.c ****             /* Clear the FIFO to enable the PWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM.c ****             PWM_ClearFIFO();
 177:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM.c **** }
 180:.\Generated_Source\PSoC4/PWM.c **** 
 181:.\Generated_Source\PSoC4/PWM.c **** 
 182:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 184:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM.c **** *
 186:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM.c **** *
 189:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM.c **** *  None
 191:.\Generated_Source\PSoC4/PWM.c **** *
 192:.\Generated_Source\PSoC4/PWM.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM.c **** *  None
 194:.\Generated_Source\PSoC4/PWM.c **** *
 195:.\Generated_Source\PSoC4/PWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM.c **** *
 198:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:.\Generated_Source\PSoC4/PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 5


 202:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE |= PWM_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM.c **** 
 207:.\Generated_Source\PSoC4/PWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 024A     		ldr	r2, .L2
  30 0002 1178     		ldrb	r1, [r2]
  31 0004 8023     		mov	r3, #128
  32 0006 0B43     		orr	r3, r1
  33 0008 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM.c **** }
  34              		.loc 1 211 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 73000F40 		.word	1074724979
  41              		.cfi_endproc
  42              	.LFE2:
  43              		.size	PWM_Enable, .-PWM_Enable
  44              		.section	.text.PWM_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	PWM_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	PWM_Stop, %function
  50              	PWM_Stop:
  51              	.LFB3:
 212:.\Generated_Source\PSoC4/PWM.c **** 
 213:.\Generated_Source\PSoC4/PWM.c **** 
 214:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 216:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM.c **** *
 218:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM.c **** *
 222:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM.c **** *  None
 224:.\Generated_Source\PSoC4/PWM.c **** *
 225:.\Generated_Source\PSoC4/PWM.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM.c **** *  None
 227:.\Generated_Source\PSoC4/PWM.c **** *
 228:.\Generated_Source\PSoC4/PWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM.c **** *
 232:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 6


  52              		.loc 1 234 0
  53              		.cfi_startproc
 235:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL &= ((uint8)(~PWM_CTRL_ENABLE));
  54              		.loc 1 236 0
  55 0000 024A     		ldr	r2, .L5
  56 0002 1178     		ldrb	r1, [r2]
  57 0004 7F23     		mov	r3, #127
  58 0006 0B40     		and	r3, r1
  59 0008 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM.c **** 
 239:.\Generated_Source\PSoC4/PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE &= ((uint8)(~PWM_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM.c **** }
  60              		.loc 1 244 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 73000F40 		.word	1074724979
  67              		.cfi_endproc
  68              	.LFE3:
  69              		.size	PWM_Stop, .-PWM_Stop
  70              		.section	.text.PWM_WriteCounter,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_WriteCounter
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_WriteCounter, %function
  76              	PWM_WriteCounter:
  77              	.LFB4:
 245:.\Generated_Source\PSoC4/PWM.c **** 
 246:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM.c **** 
 249:.\Generated_Source\PSoC4/PWM.c **** 
 250:.\Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM.c ****         *
 254:.\Generated_Source\PSoC4/PWM.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM.c ****         *
 258:.\Generated_Source\PSoC4/PWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM.c ****         *
 262:.\Generated_Source\PSoC4/PWM.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM.c ****         *
 265:.\Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 7


 266:.\Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM.c ****         {
 268:.\Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM.c **** 
 270:.\Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIF
 272:.\Generated_Source\PSoC4/PWM.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM.c **** 
 276:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM.c **** 
 279:.\Generated_Source\PSoC4/PWM.c ****             #elif (PWM_UseControl)
 280:.\Generated_Source\PSoC4/PWM.c **** 
 281:.\Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHI
 283:.\Generated_Source\PSoC4/PWM.c ****                                                 PWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM.c **** 
 288:.\Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHI
 290:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM.c **** 
 295:.\Generated_Source\PSoC4/PWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~(PWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM.c ****                                             PWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM.c **** 
 300:.\Generated_Source\PSoC4/PWM.c ****             #else
 301:.\Generated_Source\PSoC4/PWM.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM.c ****         }
 304:.\Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM.c **** 
 306:.\Generated_Source\PSoC4/PWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM.c **** 
 308:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM.c **** 
 310:.\Generated_Source\PSoC4/PWM.c **** 
 311:.\Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM.c ****         *
 315:.\Generated_Source\PSoC4/PWM.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM.c ****         *
 318:.\Generated_Source\PSoC4/PWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM.c ****         *
 322:.\Generated_Source\PSoC4/PWM.c ****         * Return:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 8


 323:.\Generated_Source\PSoC4/PWM.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM.c ****         *
 325:.\Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM.c ****         {
 328:.\Generated_Source\PSoC4/PWM.c ****             #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIFT)) 
 330:.\Generated_Source\PSoC4/PWM.c ****                                            PWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM.c ****             #else
 332:.\Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM.c **** 
 335:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM_UseControl)
 336:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UseControl) */
 339:.\Generated_Source\PSoC4/PWM.c ****         }
 340:.\Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM.c **** 
 342:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM.c **** 
 344:.\Generated_Source\PSoC4/PWM.c **** 
 345:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM.c ****     *
 349:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM.c ****     *
 352:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM.c ****     *
 356:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM.c ****     *
 359:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM.c ****     void PWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM.c ****     {
 362:.\Generated_Source\PSoC4/PWM.c **** 
 363:.\Generated_Source\PSoC4/PWM.c ****         #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/PWM.c ****                                                  PWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM.c ****         #else
 367:.\Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM.c **** 
 370:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseControl)
 371:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseControl) */
 374:.\Generated_Source\PSoC4/PWM.c ****     }
 375:.\Generated_Source\PSoC4/PWM.c ****     #endif /*PWM_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM.c **** 
 377:.\Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM.c **** 
 379:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 9


 380:.\Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM.c **** 
 382:.\Generated_Source\PSoC4/PWM.c **** 
 383:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCounter
 385:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM.c ****     *
 387:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM.c ****     *
 393:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM.c ****     *
 396:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM.c ****     *
 399:.\Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM.c ****     *
 402:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/PWM.c ****                                        
 405:.\Generated_Source\PSoC4/PWM.c ****     {
  78              		.loc 1 405 0
  79              		.cfi_startproc
  80              	.LVL0:
 406:.\Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_COUNTER_LSB_PTR, counter);
  81              		.loc 1 406 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1880     		strh	r0, [r3]
 407:.\Generated_Source\PSoC4/PWM.c ****     }
  84              		.loc 1 407 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 04100F40 		.word	1074728964
  91              		.cfi_endproc
  92              	.LFE4:
  93              		.size	PWM_WriteCounter, .-PWM_WriteCounter
  94              		.section	.text.PWM_ReadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	PWM_ReadCounter
  97              		.code	16
  98              		.thumb_func
  99              		.type	PWM_ReadCounter, %function
 100              	PWM_ReadCounter:
 101              	.LFB5:
 408:.\Generated_Source\PSoC4/PWM.c **** 
 409:.\Generated_Source\PSoC4/PWM.c **** 
 410:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCounter
 412:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 10


 413:.\Generated_Source\PSoC4/PWM.c ****     *
 414:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM.c ****     *
 418:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM.c ****     *
 421:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM.c ****     *
 424:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM.c ****     {
 102              		.loc 1 426 0
 103              		.cfi_startproc
 427:.\Generated_Source\PSoC4/PWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM.c ****           (void)CY_GET_REG8(PWM_COUNTERCAP_LSB_PTR_8BIT);
 104              		.loc 1 430 0
 105 0000 024B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM.c **** 
 432:.\Generated_Source\PSoC4/PWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 107              		.loc 1 433 0
 108 0004 024B     		ldr	r3, .L11+4
 109 0006 1888     		ldrh	r0, [r3]
 110 0008 80B2     		uxth	r0, r0
 434:.\Generated_Source\PSoC4/PWM.c ****     }
 111              		.loc 1 434 0
 112              		@ sp needed
 113 000a 7047     		bx	lr
 114              	.L12:
 115              		.align	2
 116              	.L11:
 117 000c 12000F40 		.word	1074724882
 118 0010 A4100F40 		.word	1074729124
 119              		.cfi_endproc
 120              	.LFE5:
 121              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 122              		.section	.text.PWM_WritePeriod,"ax",%progbits
 123              		.align	2
 124              		.global	PWM_WritePeriod
 125              		.code	16
 126              		.thumb_func
 127              		.type	PWM_WritePeriod, %function
 128              	PWM_WritePeriod:
 129              	.LFB7:
 435:.\Generated_Source\PSoC4/PWM.c **** 
 436:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus)
 437:.\Generated_Source\PSoC4/PWM.c **** 
 438:.\Generated_Source\PSoC4/PWM.c **** 
 439:.\Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 11


 442:.\Generated_Source\PSoC4/PWM.c ****         *
 443:.\Generated_Source\PSoC4/PWM.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM.c ****         *
 446:.\Generated_Source\PSoC4/PWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM.c ****         *
 449:.\Generated_Source\PSoC4/PWM.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM.c ****         *
 452:.\Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM.c ****         void PWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM.c ****         {
 455:.\Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/PWM.c ****             {
 457:.\Generated_Source\PSoC4/PWM.c ****                 (void)PWM_ReadCapture();
 458:.\Generated_Source\PSoC4/PWM.c ****             }
 459:.\Generated_Source\PSoC4/PWM.c ****         }
 460:.\Generated_Source\PSoC4/PWM.c **** 
 461:.\Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_UseStatus */
 462:.\Generated_Source\PSoC4/PWM.c **** 
 463:.\Generated_Source\PSoC4/PWM.c **** #endif /* !PWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM.c **** 
 465:.\Generated_Source\PSoC4/PWM.c **** 
 466:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 468:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM.c **** *
 470:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM.c **** *
 474:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM.c **** *
 478:.\Generated_Source\PSoC4/PWM.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM.c **** *  None
 480:.\Generated_Source\PSoC4/PWM.c **** *
 481:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/PWM.c **** {
 130              		.loc 1 483 0
 131              		.cfi_startproc
 132              	.LVL1:
 484:.\Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM.c ****     #else
 487:.\Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, period);
 133              		.loc 1 487 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1880     		strh	r0, [r3]
 488:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM.c **** }
 136              		.loc 1 489 0
 137              		@ sp needed
 138 0004 7047     		bx	lr
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 12


 139              	.L15:
 140 0006 C046     		.align	2
 141              	.L14:
 142 0008 84100F40 		.word	1074729092
 143              		.cfi_endproc
 144              	.LFE7:
 145              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 146              		.section	.text.PWM_WriteCompare1,"ax",%progbits
 147              		.align	2
 148              		.global	PWM_WriteCompare1
 149              		.code	16
 150              		.thumb_func
 151              		.type	PWM_WriteCompare1, %function
 152              	PWM_WriteCompare1:
 153              	.LFB8:
 490:.\Generated_Source\PSoC4/PWM.c **** 
 491:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM.c **** 
 493:.\Generated_Source\PSoC4/PWM.c **** 
 494:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare
 496:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM.c ****     *
 498:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM.c ****     *
 505:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM.c ****     *
 508:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM.c ****     *
 511:.\Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM.c ****     *
 515:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/PWM.c ****                                        
 518:.\Generated_Source\PSoC4/PWM.c ****     {
 519:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM.c ****         #else
 522:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM.c **** 
 525:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_PWMMode == PWM__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM.c ****             #else
 529:.\Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_PWMMode == PWM__B_PWM__DITHER) */
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 13


 532:.\Generated_Source\PSoC4/PWM.c ****     }
 533:.\Generated_Source\PSoC4/PWM.c **** 
 534:.\Generated_Source\PSoC4/PWM.c **** 
 535:.\Generated_Source\PSoC4/PWM.c **** #else
 536:.\Generated_Source\PSoC4/PWM.c **** 
 537:.\Generated_Source\PSoC4/PWM.c **** 
 538:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM.c ****     *
 542:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM.c ****     *
 548:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM.c ****     *
 551:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM.c ****     *
 554:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/PWM.c ****                                         
 557:.\Generated_Source\PSoC4/PWM.c ****     {
 154              		.loc 1 557 0
 155              		.cfi_startproc
 156              	.LVL2:
 558:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM.c ****         #else
 561:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 157              		.loc 1 561 0
 158 0000 014B     		ldr	r3, .L17
 159 0002 1880     		strh	r0, [r3]
 562:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM.c ****     }
 160              		.loc 1 563 0
 161              		@ sp needed
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 C046     		.align	2
 165              	.L17:
 166 0008 44100F40 		.word	1074729028
 167              		.cfi_endproc
 168              	.LFE8:
 169              		.size	PWM_WriteCompare1, .-PWM_WriteCompare1
 170              		.section	.text.PWM_WriteCompare2,"ax",%progbits
 171              		.align	2
 172              		.global	PWM_WriteCompare2
 173              		.code	16
 174              		.thumb_func
 175              		.type	PWM_WriteCompare2, %function
 176              	PWM_WriteCompare2:
 177              	.LFB9:
 564:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 14


 565:.\Generated_Source\PSoC4/PWM.c **** 
 566:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM.c ****     *
 570:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM.c ****     *
 577:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM.c ****     *
 580:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM.c ****     *
 583:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/PWM.c ****                                         
 586:.\Generated_Source\PSoC4/PWM.c ****     {
 178              		.loc 1 586 0
 179              		.cfi_startproc
 180              	.LVL3:
 587:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM.c ****         #else
 590:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 181              		.loc 1 590 0
 182 0000 014B     		ldr	r3, .L20
 183 0002 1880     		strh	r0, [r3]
 591:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM.c ****     }
 184              		.loc 1 592 0
 185              		@ sp needed
 186 0004 7047     		bx	lr
 187              	.L21:
 188 0006 C046     		.align	2
 189              	.L20:
 190 0008 64100F40 		.word	1074729060
 191              		.cfi_endproc
 192              	.LFE9:
 193              		.size	PWM_WriteCompare2, .-PWM_WriteCompare2
 194              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 195              		.align	2
 196              		.global	PWM_SetInterruptMode
 197              		.code	16
 198              		.thumb_func
 199              		.type	PWM_SetInterruptMode, %function
 200              	PWM_SetInterruptMode:
 201              	.LFB10:
 593:.\Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM.c **** 
 595:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM.c **** 
 597:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 15


 598:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM.c ****     *
 602:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM.c ****     *
 605:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM.c ****     *
 608:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM.c ****     *
 611:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM.c ****     {
 614:.\Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG8(PWM_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM.c ****         #else
 618:.\Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM.c ****             PWM_DEADBAND_COUNT &= ((uint8)(~PWM_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM.c **** 
 622:.\Generated_Source\PSoC4/PWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC4/PWM.c ****                                                     PWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM.c ****             #else
 627:.\Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= deadtime & PWM_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM.c **** 
 630:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM.c ****     }
 632:.\Generated_Source\PSoC4/PWM.c **** 
 633:.\Generated_Source\PSoC4/PWM.c **** 
 634:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM.c ****     *
 638:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM.c ****     *
 641:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM.c ****     *
 644:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM.c ****     *
 647:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM.c ****     {
 650:.\Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG8(PWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM.c ****         #else
 654:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 16


 655:.\Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM.c ****                 return ((uint8)(((uint8)(PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWM.c ****                                                                            PWM_DEADBAND_COUNT_SHIFT
 659:.\Generated_Source\PSoC4/PWM.c ****             #else
 660:.\Generated_Source\PSoC4/PWM.c ****                 return (PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM.c ****     }
 664:.\Generated_Source\PSoC4/PWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM.c **** 
 666:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_UseStatus || PWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM.c **** 
 668:.\Generated_Source\PSoC4/PWM.c **** 
 669:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM.c ****     *
 673:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM.c ****     *
 677:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/PWM.c ****     *
 680:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM.c ****     *
 683:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM.c ****     void PWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM.c ****     {
 202              		.loc 1 685 0
 203              		.cfi_startproc
 204              	.LVL4:
 686:.\Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_STATUS_MASK_PTR, interruptMode);
 205              		.loc 1 686 0
 206 0000 014B     		ldr	r3, .L23
 207 0002 1870     		strb	r0, [r3]
 687:.\Generated_Source\PSoC4/PWM.c ****     }
 208              		.loc 1 687 0
 209              		@ sp needed
 210 0004 7047     		bx	lr
 211              	.L24:
 212 0006 C046     		.align	2
 213              	.L23:
 214 0008 83000F40 		.word	1074724995
 215              		.cfi_endproc
 216              	.LFE10:
 217              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 218              		.section	.text.PWM_ReadStatusRegister,"ax",%progbits
 219              		.align	2
 220              		.global	PWM_ReadStatusRegister
 221              		.code	16
 222              		.thumb_func
 223              		.type	PWM_ReadStatusRegister, %function
 224              	PWM_ReadStatusRegister:
 225              	.LFB11:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 17


 688:.\Generated_Source\PSoC4/PWM.c **** 
 689:.\Generated_Source\PSoC4/PWM.c **** 
 690:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM.c ****     *
 694:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM.c ****     *
 697:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM.c ****     *
 700:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM.c ****     *
 710:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/PWM.c ****     {
 226              		.loc 1 712 0
 227              		.cfi_startproc
 713:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_STATUS_PTR));
 228              		.loc 1 713 0
 229 0000 014B     		ldr	r3, .L26
 230 0002 1878     		ldrb	r0, [r3]
 231 0004 C0B2     		uxtb	r0, r0
 714:.\Generated_Source\PSoC4/PWM.c ****     }
 232              		.loc 1 714 0
 233              		@ sp needed
 234 0006 7047     		bx	lr
 235              	.L27:
 236              		.align	2
 237              	.L26:
 238 0008 63000F40 		.word	1074724963
 239              		.cfi_endproc
 240              	.LFE11:
 241              		.size	PWM_ReadStatusRegister, .-PWM_ReadStatusRegister
 242              		.section	.text.PWM_ReadControlRegister,"ax",%progbits
 243              		.align	2
 244              		.global	PWM_ReadControlRegister
 245              		.code	16
 246              		.thumb_func
 247              		.type	PWM_ReadControlRegister, %function
 248              	PWM_ReadControlRegister:
 249              	.LFB12:
 715:.\Generated_Source\PSoC4/PWM.c **** 
 716:.\Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM.c **** 
 718:.\Generated_Source\PSoC4/PWM.c **** 
 719:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_UseControl)
 720:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 18


 721:.\Generated_Source\PSoC4/PWM.c **** 
 722:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM.c ****     *
 726:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM.c ****     *
 730:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM.c ****     *
 733:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM.c ****     *
 736:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM.c ****     {
 250              		.loc 1 738 0
 251              		.cfi_startproc
 739:.\Generated_Source\PSoC4/PWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM.c **** 
 741:.\Generated_Source\PSoC4/PWM.c ****         result = CY_GET_REG8(PWM_CONTROL_PTR);
 252              		.loc 1 741 0
 253 0000 014B     		ldr	r3, .L29
 254 0002 1878     		ldrb	r0, [r3]
 255 0004 C0B2     		uxtb	r0, r0
 256              	.LVL5:
 742:.\Generated_Source\PSoC4/PWM.c ****         return (result);
 743:.\Generated_Source\PSoC4/PWM.c ****     }
 257              		.loc 1 743 0
 258              		@ sp needed
 259 0006 7047     		bx	lr
 260              	.L30:
 261              		.align	2
 262              	.L29:
 263 0008 73000F40 		.word	1074724979
 264              		.cfi_endproc
 265              	.LFE12:
 266              		.size	PWM_ReadControlRegister, .-PWM_ReadControlRegister
 267              		.section	.text.PWM_WriteControlRegister,"ax",%progbits
 268              		.align	2
 269              		.global	PWM_WriteControlRegister
 270              		.code	16
 271              		.thumb_func
 272              		.type	PWM_WriteControlRegister, %function
 273              	PWM_WriteControlRegister:
 274              	.LFB13:
 744:.\Generated_Source\PSoC4/PWM.c **** 
 745:.\Generated_Source\PSoC4/PWM.c **** 
 746:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM.c ****     *
 750:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM.c ****     *  the control register is not removed.
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 19


 753:.\Generated_Source\PSoC4/PWM.c ****     *
 754:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM.c ****     *
 761:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM.c ****     *
 764:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM.c ****     {
 275              		.loc 1 766 0
 276              		.cfi_startproc
 277              	.LVL6:
 767:.\Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_CONTROL_PTR, control);
 278              		.loc 1 767 0
 279 0000 014B     		ldr	r3, .L32
 280 0002 1870     		strb	r0, [r3]
 768:.\Generated_Source\PSoC4/PWM.c ****     }
 281              		.loc 1 768 0
 282              		@ sp needed
 283 0004 7047     		bx	lr
 284              	.L33:
 285 0006 C046     		.align	2
 286              	.L32:
 287 0008 73000F40 		.word	1074724979
 288              		.cfi_endproc
 289              	.LFE13:
 290              		.size	PWM_WriteControlRegister, .-PWM_WriteControlRegister
 291              		.section	.text.PWM_ReadCapture,"ax",%progbits
 292              		.align	2
 293              		.global	PWM_ReadCapture
 294              		.code	16
 295              		.thumb_func
 296              		.type	PWM_ReadCapture, %function
 297              	PWM_ReadCapture:
 298              	.LFB14:
 769:.\Generated_Source\PSoC4/PWM.c **** 
 770:.\Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseControl) */
 771:.\Generated_Source\PSoC4/PWM.c **** 
 772:.\Generated_Source\PSoC4/PWM.c **** 
 773:.\Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM.c **** 
 775:.\Generated_Source\PSoC4/PWM.c **** 
 776:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCapture
 778:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM.c ****     *
 780:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM.c ****     *
 783:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM.c ****     *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 20


 786:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM.c ****     *
 789:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM.c ****     {
 299              		.loc 1 791 0
 300              		.cfi_startproc
 792:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 301              		.loc 1 792 0
 302 0000 014B     		ldr	r3, .L35
 303 0002 1888     		ldrh	r0, [r3]
 304 0004 80B2     		uxth	r0, r0
 793:.\Generated_Source\PSoC4/PWM.c ****     }
 305              		.loc 1 793 0
 306              		@ sp needed
 307 0006 7047     		bx	lr
 308              	.L36:
 309              		.align	2
 310              	.L35:
 311 0008 A4100F40 		.word	1074729124
 312              		.cfi_endproc
 313              	.LFE14:
 314              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 315              		.section	.text.PWM_ClearFIFO,"ax",%progbits
 316              		.align	2
 317              		.global	PWM_ClearFIFO
 318              		.code	16
 319              		.thumb_func
 320              		.type	PWM_ClearFIFO, %function
 321              	PWM_ClearFIFO:
 322              	.LFB6:
 454:.\Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 323              		.loc 1 454 0
 324              		.cfi_startproc
 325 0000 08B5     		push	{r3, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC4/PWM.c ****             {
 329              		.loc 1 455 0
 330 0002 01E0     		b	.L38
 331              	.L39:
 457:.\Generated_Source\PSoC4/PWM.c ****             }
 332              		.loc 1 457 0
 333 0004 FFF7FEFF 		bl	PWM_ReadCapture
 334              	.LVL7:
 335              	.L38:
 455:.\Generated_Source\PSoC4/PWM.c ****             {
 336              		.loc 1 455 0
 337 0008 FFF7FEFF 		bl	PWM_ReadStatusRegister
 338              	.LVL8:
 339 000c C306     		lsl	r3, r0, #27
 340 000e F9D4     		bmi	.L39
 459:.\Generated_Source\PSoC4/PWM.c **** 
 341              		.loc 1 459 0
 342              		@ sp needed
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 21


 343 0010 08BD     		pop	{r3, pc}
 344              		.cfi_endproc
 345              	.LFE6:
 346              		.size	PWM_ClearFIFO, .-PWM_ClearFIFO
 347 0012 C046     		.section	.text.PWM_Init,"ax",%progbits
 348              		.align	2
 349              		.global	PWM_Init
 350              		.code	16
 351              		.thumb_func
 352              		.type	PWM_Init, %function
 353              	PWM_Init:
 354              	.LFB1:
  85:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
 355              		.loc 1 85 0
 356              		.cfi_startproc
 357 0000 10B5     		push	{r4, lr}
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 4, -8
 360              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 361              		.loc 1 117 0
 362 0002 1649     		ldr	r1, .L41
 363 0004 0B78     		ldrb	r3, [r1]
 364 0006 3F22     		mov	r2, #63
 365 0008 9343     		bic	r3, r2
 366              	.LVL9:
 119:.\Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 367              		.loc 1 119 0
 368 000a 363A     		sub	r2, r2, #54
 369 000c 1343     		orr	r3, r2
 370              	.LVL10:
 371 000e 0B70     		strb	r3, [r1]
 129:.\Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 372              		.loc 1 129 0
 373 0010 1349     		ldr	r1, .L41+4
 374 0012 0A78     		ldrb	r2, [r1]
 375 0014 0123     		mov	r3, #1
 376 0016 1A43     		orr	r2, r3
 377 0018 D2B2     		uxtb	r2, r2
 378 001a 0A70     		strb	r2, [r1]
 130:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 379              		.loc 1 130 0
 380 001c 114C     		ldr	r4, .L41+8
 381 001e 2278     		ldrb	r2, [r4]
 382 0020 1343     		orr	r3, r2
 383 0022 DBB2     		uxtb	r3, r3
 384 0024 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 385              		.loc 1 133 0
 386 0026 6420     		mov	r0, #100
 387 0028 FFF7FEFF 		bl	PWM_WriteCounter
 388              	.LVL11:
 136:.\Generated_Source\PSoC4/PWM.c **** 
 389              		.loc 1 136 0
 390 002c 6420     		mov	r0, #100
 391 002e FFF7FEFF 		bl	PWM_WritePeriod
 392              	.LVL12:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 22


 141:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare2(PWM_INIT_COMPARE_VALUE2);
 393              		.loc 1 141 0
 394 0032 0020     		mov	r0, #0
 395 0034 FFF7FEFF 		bl	PWM_WriteCompare1
 396              	.LVL13:
 142:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseOneCompareMode) */
 397              		.loc 1 142 0
 398 0038 0020     		mov	r0, #0
 399 003a FFF7FEFF 		bl	PWM_WriteCompare2
 400              	.LVL14:
 154:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 401              		.loc 1 154 0
 402 003e 0020     		mov	r0, #0
 403 0040 FFF7FEFF 		bl	PWM_SetInterruptMode
 404              	.LVL15:
 167:.\Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 405              		.loc 1 167 0
 406 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 407              	.LVL16:
 169:.\Generated_Source\PSoC4/PWM.c **** 
 408              		.loc 1 169 0
 409 0048 2278     		ldrb	r2, [r4]
 410 004a 1023     		mov	r3, #16
 411 004c 1343     		orr	r3, r2
 412 004e 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC4/PWM.c **** 
 413              		.loc 1 172 0
 414 0050 FFF7FEFF 		bl	CyExitCriticalSection
 415              	.LVL17:
 176:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 416              		.loc 1 176 0
 417 0054 FFF7FEFF 		bl	PWM_ClearFIFO
 418              	.LVL18:
 179:.\Generated_Source\PSoC4/PWM.c **** 
 419              		.loc 1 179 0
 420              		@ sp needed
 421 0058 10BD     		pop	{r4, pc}
 422              	.L42:
 423 005a C046     		.align	2
 424              	.L41:
 425 005c 73000F40 		.word	1074724979
 426 0060 92000F40 		.word	1074725010
 427 0064 93000F40 		.word	1074725011
 428              		.cfi_endproc
 429              	.LFE1:
 430              		.size	PWM_Init, .-PWM_Init
 431              		.section	.text.PWM_Start,"ax",%progbits
 432              		.align	2
 433              		.global	PWM_Start
 434              		.code	16
 435              		.thumb_func
 436              		.type	PWM_Start, %function
 437              	PWM_Start:
 438              	.LFB0:
  56:.\Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
 439              		.loc 1 56 0
 440              		.cfi_startproc
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 23


 441 0000 08B5     		push	{r3, lr}
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 3, -8
 444              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/PWM.c ****     {
 445              		.loc 1 58 0
 446 0002 064B     		ldr	r3, .L45
 447 0004 1B78     		ldrb	r3, [r3]
 448 0006 002B     		cmp	r3, #0
 449 0008 04D1     		bne	.L44
  60:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 450              		.loc 1 60 0
 451 000a FFF7FEFF 		bl	PWM_Init
 452              	.LVL19:
  61:.\Generated_Source\PSoC4/PWM.c ****     }
 453              		.loc 1 61 0
 454 000e 0122     		mov	r2, #1
 455 0010 024B     		ldr	r3, .L45
 456 0012 1A70     		strb	r2, [r3]
 457              	.L44:
  63:.\Generated_Source\PSoC4/PWM.c **** 
 458              		.loc 1 63 0
 459 0014 FFF7FEFF 		bl	PWM_Enable
 460              	.LVL20:
  65:.\Generated_Source\PSoC4/PWM.c **** 
 461              		.loc 1 65 0
 462              		@ sp needed
 463 0018 08BD     		pop	{r3, pc}
 464              	.L46:
 465 001a C046     		.align	2
 466              	.L45:
 467 001c 00000000 		.word	.LANCHOR0
 468              		.cfi_endproc
 469              	.LFE0:
 470              		.size	PWM_Start, .-PWM_Start
 471              		.section	.text.PWM_ReadCompare1,"ax",%progbits
 472              		.align	2
 473              		.global	PWM_ReadCompare1
 474              		.code	16
 475              		.thumb_func
 476              		.type	PWM_ReadCompare1, %function
 477              	PWM_ReadCompare1:
 478              	.LFB15:
 794:.\Generated_Source\PSoC4/PWM.c **** 
 795:.\Generated_Source\PSoC4/PWM.c **** #endif /* (!PWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM.c **** 
 797:.\Generated_Source\PSoC4/PWM.c **** 
 798:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM.c **** 
 800:.\Generated_Source\PSoC4/PWM.c **** 
 801:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare
 803:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM.c ****     *
 805:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 24


 808:.\Generated_Source\PSoC4/PWM.c ****     *
 809:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM.c ****     *
 812:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM.c ****     *
 815:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM.c ****     {
 818:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM.c ****             return ((uint16)CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM.c ****         #else
 821:.\Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM.c ****     }
 824:.\Generated_Source\PSoC4/PWM.c **** 
 825:.\Generated_Source\PSoC4/PWM.c **** #else
 826:.\Generated_Source\PSoC4/PWM.c **** 
 827:.\Generated_Source\PSoC4/PWM.c **** 
 828:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM.c ****     *
 832:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM.c ****     *
 835:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM.c ****     *
 838:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM.c ****     *
 841:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM.c ****     {
 479              		.loc 1 843 0
 480              		.cfi_startproc
 844:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 481              		.loc 1 844 0
 482 0000 014B     		ldr	r3, .L48
 483 0002 1888     		ldrh	r0, [r3]
 484 0004 80B2     		uxth	r0, r0
 845:.\Generated_Source\PSoC4/PWM.c ****     }
 485              		.loc 1 845 0
 486              		@ sp needed
 487 0006 7047     		bx	lr
 488              	.L49:
 489              		.align	2
 490              	.L48:
 491 0008 44100F40 		.word	1074729028
 492              		.cfi_endproc
 493              	.LFE15:
 494              		.size	PWM_ReadCompare1, .-PWM_ReadCompare1
 495              		.section	.text.PWM_ReadCompare2,"ax",%progbits
 496              		.align	2
 497              		.global	PWM_ReadCompare2
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 25


 498              		.code	16
 499              		.thumb_func
 500              		.type	PWM_ReadCompare2, %function
 501              	PWM_ReadCompare2:
 502              	.LFB16:
 846:.\Generated_Source\PSoC4/PWM.c **** 
 847:.\Generated_Source\PSoC4/PWM.c **** 
 848:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM.c ****     *
 852:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM.c ****     *
 855:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM.c ****     *
 858:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM.c ****     *
 861:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM.c ****     {
 503              		.loc 1 863 0
 504              		.cfi_startproc
 864:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE2_LSB_PTR));
 505              		.loc 1 864 0
 506 0000 014B     		ldr	r3, .L51
 507 0002 1888     		ldrh	r0, [r3]
 508 0004 80B2     		uxth	r0, r0
 865:.\Generated_Source\PSoC4/PWM.c ****     }
 509              		.loc 1 865 0
 510              		@ sp needed
 511 0006 7047     		bx	lr
 512              	.L52:
 513              		.align	2
 514              	.L51:
 515 0008 64100F40 		.word	1074729060
 516              		.cfi_endproc
 517              	.LFE16:
 518              		.size	PWM_ReadCompare2, .-PWM_ReadCompare2
 519              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 520              		.align	2
 521              		.global	PWM_ReadPeriod
 522              		.code	16
 523              		.thumb_func
 524              		.type	PWM_ReadPeriod, %function
 525              	PWM_ReadPeriod:
 526              	.LFB17:
 866:.\Generated_Source\PSoC4/PWM.c **** 
 867:.\Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM.c **** 
 869:.\Generated_Source\PSoC4/PWM.c **** 
 870:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 26


 874:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM.c **** *
 877:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM.c **** *  None
 879:.\Generated_Source\PSoC4/PWM.c **** *
 880:.\Generated_Source\PSoC4/PWM.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM.c **** *
 883:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM.c **** uint16 PWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM.c **** {
 527              		.loc 1 885 0
 528              		.cfi_startproc
 886:.\Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM.c ****         return ((uint16)CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM.c ****     #else
 889:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 529              		.loc 1 889 0
 530 0000 014B     		ldr	r3, .L54
 531 0002 1888     		ldrh	r0, [r3]
 532 0004 80B2     		uxth	r0, r0
 890:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM.c **** }
 533              		.loc 1 891 0
 534              		@ sp needed
 535 0006 7047     		bx	lr
 536              	.L55:
 537              		.align	2
 538              	.L54:
 539 0008 84100F40 		.word	1074729092
 540              		.cfi_endproc
 541              	.LFE17:
 542              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 543              		.global	PWM_initVar
 544              		.bss
 545              		.set	.LANCHOR0,. + 0
 546              		.type	PWM_initVar, %object
 547              		.size	PWM_initVar, 1
 548              	PWM_initVar:
 549 0000 00       		.space	1
 550              		.text
 551              	.Letext0:
 552              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 553              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 554              		.section	.debug_info,"",%progbits
 555              	.Ldebug_info0:
 556 0000 93030000 		.4byte	0x393
 557 0004 0400     		.2byte	0x4
 558 0006 00000000 		.4byte	.Ldebug_abbrev0
 559 000a 04       		.byte	0x4
 560 000b 01       		.uleb128 0x1
 561 000c 99010000 		.4byte	.LASF42
 562 0010 01       		.byte	0x1
 563 0011 58000000 		.4byte	.LASF43
 564 0015 DF000000 		.4byte	.LASF44
 565 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 27


 566 001d 00000000 		.4byte	0
 567 0021 00000000 		.4byte	.Ldebug_line0
 568 0025 02       		.uleb128 0x2
 569 0026 01       		.byte	0x1
 570 0027 06       		.byte	0x6
 571 0028 DB020000 		.4byte	.LASF0
 572 002c 02       		.uleb128 0x2
 573 002d 01       		.byte	0x1
 574 002e 08       		.byte	0x8
 575 002f 9C000000 		.4byte	.LASF1
 576 0033 02       		.uleb128 0x2
 577 0034 02       		.byte	0x2
 578 0035 05       		.byte	0x5
 579 0036 87020000 		.4byte	.LASF2
 580 003a 02       		.uleb128 0x2
 581 003b 02       		.byte	0x2
 582 003c 07       		.byte	0x7
 583 003d 35000000 		.4byte	.LASF3
 584 0041 02       		.uleb128 0x2
 585 0042 04       		.byte	0x4
 586 0043 05       		.byte	0x5
 587 0044 AB020000 		.4byte	.LASF4
 588 0048 02       		.uleb128 0x2
 589 0049 04       		.byte	0x4
 590 004a 07       		.byte	0x7
 591 004b AF000000 		.4byte	.LASF5
 592 004f 02       		.uleb128 0x2
 593 0050 08       		.byte	0x8
 594 0051 05       		.byte	0x5
 595 0052 30020000 		.4byte	.LASF6
 596 0056 02       		.uleb128 0x2
 597 0057 08       		.byte	0x8
 598 0058 07       		.byte	0x7
 599 0059 85000000 		.4byte	.LASF7
 600 005d 03       		.uleb128 0x3
 601 005e 04       		.byte	0x4
 602 005f 05       		.byte	0x5
 603 0060 696E7400 		.ascii	"int\000"
 604 0064 02       		.uleb128 0x2
 605 0065 04       		.byte	0x4
 606 0066 07       		.byte	0x7
 607 0067 2D010000 		.4byte	.LASF8
 608 006b 04       		.uleb128 0x4
 609 006c D1000000 		.4byte	.LASF9
 610 0070 02       		.byte	0x2
 611 0071 C2       		.byte	0xc2
 612 0072 2C000000 		.4byte	0x2c
 613 0076 04       		.uleb128 0x4
 614 0077 03010000 		.4byte	.LASF10
 615 007b 02       		.byte	0x2
 616 007c C3       		.byte	0xc3
 617 007d 3A000000 		.4byte	0x3a
 618 0081 02       		.uleb128 0x2
 619 0082 04       		.byte	0x4
 620 0083 04       		.byte	0x4
 621 0084 77000000 		.4byte	.LASF11
 622 0088 02       		.uleb128 0x2
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 28


 623 0089 08       		.byte	0x8
 624 008a 04       		.byte	0x4
 625 008b FC000000 		.4byte	.LASF12
 626 008f 02       		.uleb128 0x2
 627 0090 01       		.byte	0x1
 628 0091 08       		.byte	0x8
 629 0092 B4020000 		.4byte	.LASF13
 630 0096 05       		.uleb128 0x5
 631 0097 AA000000 		.4byte	.LASF14
 632 009b 02       		.byte	0x2
 633 009c 6C01     		.2byte	0x16c
 634 009e A2000000 		.4byte	0xa2
 635 00a2 06       		.uleb128 0x6
 636 00a3 6B000000 		.4byte	0x6b
 637 00a7 05       		.uleb128 0x5
 638 00a8 00000000 		.4byte	.LASF15
 639 00ac 02       		.byte	0x2
 640 00ad 6D01     		.2byte	0x16d
 641 00af B3000000 		.4byte	0xb3
 642 00b3 06       		.uleb128 0x6
 643 00b4 76000000 		.4byte	0x76
 644 00b8 02       		.uleb128 0x2
 645 00b9 04       		.byte	0x4
 646 00ba 07       		.byte	0x7
 647 00bb 27020000 		.4byte	.LASF16
 648 00bf 07       		.uleb128 0x7
 649 00c0 EF020000 		.4byte	.LASF17
 650 00c4 01       		.byte	0x1
 651 00c5 C7       		.byte	0xc7
 652 00c6 00000000 		.4byte	.LFB2
 653 00ca 10000000 		.4byte	.LFE2-.LFB2
 654 00ce 01       		.uleb128 0x1
 655 00cf 9C       		.byte	0x9c
 656 00d0 07       		.uleb128 0x7
 657 00d1 A2020000 		.4byte	.LASF18
 658 00d5 01       		.byte	0x1
 659 00d6 E9       		.byte	0xe9
 660 00d7 00000000 		.4byte	.LFB3
 661 00db 10000000 		.4byte	.LFE3-.LFB3
 662 00df 01       		.uleb128 0x1
 663 00e0 9C       		.byte	0x9c
 664 00e1 08       		.uleb128 0x8
 665 00e2 91020000 		.4byte	.LASF19
 666 00e6 01       		.byte	0x1
 667 00e7 9301     		.2byte	0x193
 668 00e9 00000000 		.4byte	.LFB4
 669 00ed 0C000000 		.4byte	.LFE4-.LFB4
 670 00f1 01       		.uleb128 0x1
 671 00f2 9C       		.byte	0x9c
 672 00f3 06010000 		.4byte	0x106
 673 00f7 09       		.uleb128 0x9
 674 00f8 7D000000 		.4byte	.LASF21
 675 00fc 01       		.byte	0x1
 676 00fd 9301     		.2byte	0x193
 677 00ff 76000000 		.4byte	0x76
 678 0103 01       		.uleb128 0x1
 679 0104 50       		.byte	0x50
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 29


 680 0105 00       		.byte	0
 681 0106 0A       		.uleb128 0xa
 682 0107 C1000000 		.4byte	.LASF28
 683 010b 01       		.byte	0x1
 684 010c A901     		.2byte	0x1a9
 685 010e 76000000 		.4byte	0x76
 686 0112 00000000 		.4byte	.LFB5
 687 0116 14000000 		.4byte	.LFE5-.LFB5
 688 011a 01       		.uleb128 0x1
 689 011b 9C       		.byte	0x9c
 690 011c 08       		.uleb128 0x8
 691 011d 74010000 		.4byte	.LASF20
 692 0121 01       		.byte	0x1
 693 0122 E201     		.2byte	0x1e2
 694 0124 00000000 		.4byte	.LFB7
 695 0128 0C000000 		.4byte	.LFE7-.LFB7
 696 012c 01       		.uleb128 0x1
 697 012d 9C       		.byte	0x9c
 698 012e 41010000 		.4byte	0x141
 699 0132 09       		.uleb128 0x9
 700 0133 24000000 		.4byte	.LASF22
 701 0137 01       		.byte	0x1
 702 0138 E201     		.2byte	0x1e2
 703 013a 76000000 		.4byte	0x76
 704 013e 01       		.uleb128 0x1
 705 013f 50       		.byte	0x50
 706 0140 00       		.byte	0
 707 0141 08       		.uleb128 0x8
 708 0142 50010000 		.4byte	.LASF23
 709 0146 01       		.byte	0x1
 710 0147 2B02     		.2byte	0x22b
 711 0149 00000000 		.4byte	.LFB8
 712 014d 0C000000 		.4byte	.LFE8-.LFB8
 713 0151 01       		.uleb128 0x1
 714 0152 9C       		.byte	0x9c
 715 0153 66010000 		.4byte	0x166
 716 0157 09       		.uleb128 0x9
 717 0158 E7020000 		.4byte	.LASF24
 718 015c 01       		.byte	0x1
 719 015d 2B02     		.2byte	0x22b
 720 015f 76000000 		.4byte	0x76
 721 0163 01       		.uleb128 0x1
 722 0164 50       		.byte	0x50
 723 0165 00       		.byte	0
 724 0166 08       		.uleb128 0x8
 725 0167 62010000 		.4byte	.LASF25
 726 016b 01       		.byte	0x1
 727 016c 4802     		.2byte	0x248
 728 016e 00000000 		.4byte	.LFB9
 729 0172 0C000000 		.4byte	.LFE9-.LFB9
 730 0176 01       		.uleb128 0x1
 731 0177 9C       		.byte	0x9c
 732 0178 8B010000 		.4byte	0x18b
 733 017c 09       		.uleb128 0x9
 734 017d E7020000 		.4byte	.LASF24
 735 0181 01       		.byte	0x1
 736 0182 4802     		.2byte	0x248
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 30


 737 0184 76000000 		.4byte	0x76
 738 0188 01       		.uleb128 0x1
 739 0189 50       		.byte	0x50
 740 018a 00       		.byte	0
 741 018b 08       		.uleb128 0x8
 742 018c 84010000 		.4byte	.LASF26
 743 0190 01       		.byte	0x1
 744 0191 AC02     		.2byte	0x2ac
 745 0193 00000000 		.4byte	.LFB10
 746 0197 0C000000 		.4byte	.LFE10-.LFB10
 747 019b 01       		.uleb128 0x1
 748 019c 9C       		.byte	0x9c
 749 019d B0010000 		.4byte	0x1b0
 750 01a1 09       		.uleb128 0x9
 751 01a2 3E020000 		.4byte	.LASF27
 752 01a6 01       		.byte	0x1
 753 01a7 AC02     		.2byte	0x2ac
 754 01a9 6B000000 		.4byte	0x6b
 755 01ad 01       		.uleb128 0x1
 756 01ae 50       		.byte	0x50
 757 01af 00       		.byte	0
 758 01b0 0A       		.uleb128 0xa
 759 01b1 FA020000 		.4byte	.LASF29
 760 01b5 01       		.byte	0x1
 761 01b6 C702     		.2byte	0x2c7
 762 01b8 6B000000 		.4byte	0x6b
 763 01bc 00000000 		.4byte	.LFB11
 764 01c0 0C000000 		.4byte	.LFE11-.LFB11
 765 01c4 01       		.uleb128 0x1
 766 01c5 9C       		.byte	0x9c
 767 01c6 0B       		.uleb128 0xb
 768 01c7 11030000 		.4byte	.LASF45
 769 01cb 01       		.byte	0x1
 770 01cc E102     		.2byte	0x2e1
 771 01ce 6B000000 		.4byte	0x6b
 772 01d2 00000000 		.4byte	.LFB12
 773 01d6 0C000000 		.4byte	.LFE12-.LFB12
 774 01da 01       		.uleb128 0x1
 775 01db 9C       		.byte	0x9c
 776 01dc EF010000 		.4byte	0x1ef
 777 01e0 0C       		.uleb128 0xc
 778 01e1 0F000000 		.4byte	.LASF35
 779 01e5 01       		.byte	0x1
 780 01e6 E302     		.2byte	0x2e3
 781 01e8 6B000000 		.4byte	0x6b
 782 01ec 01       		.uleb128 0x1
 783 01ed 50       		.byte	0x50
 784 01ee 00       		.byte	0
 785 01ef 08       		.uleb128 0x8
 786 01f0 4C020000 		.4byte	.LASF30
 787 01f4 01       		.byte	0x1
 788 01f5 FD02     		.2byte	0x2fd
 789 01f7 00000000 		.4byte	.LFB13
 790 01fb 0C000000 		.4byte	.LFE13-.LFB13
 791 01ff 01       		.uleb128 0x1
 792 0200 9C       		.byte	0x9c
 793 0201 14020000 		.4byte	0x214
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 31


 794 0205 09       		.uleb128 0x9
 795 0206 D7000000 		.4byte	.LASF31
 796 020a 01       		.byte	0x1
 797 020b FD02     		.2byte	0x2fd
 798 020d 6B000000 		.4byte	0x6b
 799 0211 01       		.uleb128 0x1
 800 0212 50       		.byte	0x50
 801 0213 00       		.byte	0
 802 0214 0A       		.uleb128 0xa
 803 0215 48000000 		.4byte	.LASF32
 804 0219 01       		.byte	0x1
 805 021a 1603     		.2byte	0x316
 806 021c 76000000 		.4byte	0x76
 807 0220 00000000 		.4byte	.LFB14
 808 0224 0C000000 		.4byte	.LFE14-.LFB14
 809 0228 01       		.uleb128 0x1
 810 0229 9C       		.byte	0x9c
 811 022a 08       		.uleb128 0x8
 812 022b 16000000 		.4byte	.LASF33
 813 022f 01       		.byte	0x1
 814 0230 C501     		.2byte	0x1c5
 815 0232 00000000 		.4byte	.LFB6
 816 0236 12000000 		.4byte	.LFE6-.LFB6
 817 023a 01       		.uleb128 0x1
 818 023b 9C       		.byte	0x9c
 819 023c 53020000 		.4byte	0x253
 820 0240 0D       		.uleb128 0xd
 821 0241 08000000 		.4byte	.LVL7
 822 0245 14020000 		.4byte	0x214
 823 0249 0D       		.uleb128 0xd
 824 024a 0C000000 		.4byte	.LVL8
 825 024e B0010000 		.4byte	0x1b0
 826 0252 00       		.byte	0
 827 0253 0E       		.uleb128 0xe
 828 0254 06000000 		.4byte	.LASF34
 829 0258 01       		.byte	0x1
 830 0259 54       		.byte	0x54
 831 025a 00000000 		.4byte	.LFB1
 832 025e 68000000 		.4byte	.LFE1-.LFB1
 833 0262 01       		.uleb128 0x1
 834 0263 9C       		.byte	0x9c
 835 0264 03030000 		.4byte	0x303
 836 0268 0F       		.uleb128 0xf
 837 0269 29030000 		.4byte	.LASF36
 838 026d 01       		.byte	0x1
 839 026e 57       		.byte	0x57
 840 026f 6B000000 		.4byte	0x6b
 841 0273 00000000 		.4byte	.LLST0
 842 0277 0F       		.uleb128 0xf
 843 0278 65020000 		.4byte	.LASF37
 844 027c 01       		.byte	0x1
 845 027d 5D       		.byte	0x5d
 846 027e 6B000000 		.4byte	0x6b
 847 0282 13000000 		.4byte	.LLST1
 848 0286 10       		.uleb128 0x10
 849 0287 2C000000 		.4byte	.LVL11
 850 028b E1000000 		.4byte	0xe1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 32


 851 028f 9A020000 		.4byte	0x29a
 852 0293 11       		.uleb128 0x11
 853 0294 01       		.uleb128 0x1
 854 0295 50       		.byte	0x50
 855 0296 02       		.uleb128 0x2
 856 0297 08       		.byte	0x8
 857 0298 64       		.byte	0x64
 858 0299 00       		.byte	0
 859 029a 10       		.uleb128 0x10
 860 029b 32000000 		.4byte	.LVL12
 861 029f 1C010000 		.4byte	0x11c
 862 02a3 AE020000 		.4byte	0x2ae
 863 02a7 11       		.uleb128 0x11
 864 02a8 01       		.uleb128 0x1
 865 02a9 50       		.byte	0x50
 866 02aa 02       		.uleb128 0x2
 867 02ab 08       		.byte	0x8
 868 02ac 64       		.byte	0x64
 869 02ad 00       		.byte	0
 870 02ae 10       		.uleb128 0x10
 871 02af 38000000 		.4byte	.LVL13
 872 02b3 41010000 		.4byte	0x141
 873 02b7 C1020000 		.4byte	0x2c1
 874 02bb 11       		.uleb128 0x11
 875 02bc 01       		.uleb128 0x1
 876 02bd 50       		.byte	0x50
 877 02be 01       		.uleb128 0x1
 878 02bf 30       		.byte	0x30
 879 02c0 00       		.byte	0
 880 02c1 10       		.uleb128 0x10
 881 02c2 3E000000 		.4byte	.LVL14
 882 02c6 66010000 		.4byte	0x166
 883 02ca D4020000 		.4byte	0x2d4
 884 02ce 11       		.uleb128 0x11
 885 02cf 01       		.uleb128 0x1
 886 02d0 50       		.byte	0x50
 887 02d1 01       		.uleb128 0x1
 888 02d2 30       		.byte	0x30
 889 02d3 00       		.byte	0
 890 02d4 10       		.uleb128 0x10
 891 02d5 44000000 		.4byte	.LVL15
 892 02d9 8B010000 		.4byte	0x18b
 893 02dd E7020000 		.4byte	0x2e7
 894 02e1 11       		.uleb128 0x11
 895 02e2 01       		.uleb128 0x1
 896 02e3 50       		.byte	0x50
 897 02e4 01       		.uleb128 0x1
 898 02e5 30       		.byte	0x30
 899 02e6 00       		.byte	0
 900 02e7 0D       		.uleb128 0xd
 901 02e8 48000000 		.4byte	.LVL16
 902 02ec 7E030000 		.4byte	0x37e
 903 02f0 0D       		.uleb128 0xd
 904 02f1 54000000 		.4byte	.LVL17
 905 02f5 89030000 		.4byte	0x389
 906 02f9 0D       		.uleb128 0xd
 907 02fa 58000000 		.4byte	.LVL18
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 33


 908 02fe 2A020000 		.4byte	0x22a
 909 0302 00       		.byte	0
 910 0303 0E       		.uleb128 0xe
 911 0304 2B000000 		.4byte	.LASF38
 912 0308 01       		.byte	0x1
 913 0309 37       		.byte	0x37
 914 030a 00000000 		.4byte	.LFB0
 915 030e 20000000 		.4byte	.LFE0-.LFB0
 916 0312 01       		.uleb128 0x1
 917 0313 9C       		.byte	0x9c
 918 0314 2B030000 		.4byte	0x32b
 919 0318 0D       		.uleb128 0xd
 920 0319 0E000000 		.4byte	.LVL19
 921 031d 53020000 		.4byte	0x253
 922 0321 0D       		.uleb128 0xd
 923 0322 18000000 		.4byte	.LVL20
 924 0326 BF000000 		.4byte	0xbf
 925 032a 00       		.byte	0
 926 032b 0A       		.uleb128 0xa
 927 032c B9020000 		.4byte	.LASF39
 928 0330 01       		.byte	0x1
 929 0331 4A03     		.2byte	0x34a
 930 0333 76000000 		.4byte	0x76
 931 0337 00000000 		.4byte	.LFB15
 932 033b 0C000000 		.4byte	.LFE15-.LFB15
 933 033f 01       		.uleb128 0x1
 934 0340 9C       		.byte	0x9c
 935 0341 0A       		.uleb128 0xa
 936 0342 CA020000 		.4byte	.LASF40
 937 0346 01       		.byte	0x1
 938 0347 5E03     		.2byte	0x35e
 939 0349 76000000 		.4byte	0x76
 940 034d 00000000 		.4byte	.LFB16
 941 0351 0C000000 		.4byte	.LFE16-.LFB16
 942 0355 01       		.uleb128 0x1
 943 0356 9C       		.byte	0x9c
 944 0357 0A       		.uleb128 0xa
 945 0358 78020000 		.4byte	.LASF41
 946 035c 01       		.byte	0x1
 947 035d 7403     		.2byte	0x374
 948 035f 76000000 		.4byte	0x76
 949 0363 00000000 		.4byte	.LFB17
 950 0367 0C000000 		.4byte	.LFE17-.LFB17
 951 036b 01       		.uleb128 0x1
 952 036c 9C       		.byte	0x9c
 953 036d 12       		.uleb128 0x12
 954 036e 0A010000 		.4byte	.LASF46
 955 0372 01       		.byte	0x1
 956 0373 20       		.byte	0x20
 957 0374 6B000000 		.4byte	0x6b
 958 0378 05       		.uleb128 0x5
 959 0379 03       		.byte	0x3
 960 037a 00000000 		.4byte	PWM_initVar
 961 037e 13       		.uleb128 0x13
 962 037f 16010000 		.4byte	.LASF47
 963 0383 03       		.byte	0x3
 964 0384 5E       		.byte	0x5e
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 34


 965 0385 6B000000 		.4byte	0x6b
 966 0389 14       		.uleb128 0x14
 967 038a 3A010000 		.4byte	.LASF48
 968 038e 03       		.byte	0x3
 969 038f 5F       		.byte	0x5f
 970 0390 15       		.uleb128 0x15
 971 0391 6B000000 		.4byte	0x6b
 972 0395 00       		.byte	0
 973 0396 00       		.byte	0
 974              		.section	.debug_abbrev,"",%progbits
 975              	.Ldebug_abbrev0:
 976 0000 01       		.uleb128 0x1
 977 0001 11       		.uleb128 0x11
 978 0002 01       		.byte	0x1
 979 0003 25       		.uleb128 0x25
 980 0004 0E       		.uleb128 0xe
 981 0005 13       		.uleb128 0x13
 982 0006 0B       		.uleb128 0xb
 983 0007 03       		.uleb128 0x3
 984 0008 0E       		.uleb128 0xe
 985 0009 1B       		.uleb128 0x1b
 986 000a 0E       		.uleb128 0xe
 987 000b 55       		.uleb128 0x55
 988 000c 17       		.uleb128 0x17
 989 000d 11       		.uleb128 0x11
 990 000e 01       		.uleb128 0x1
 991 000f 10       		.uleb128 0x10
 992 0010 17       		.uleb128 0x17
 993 0011 00       		.byte	0
 994 0012 00       		.byte	0
 995 0013 02       		.uleb128 0x2
 996 0014 24       		.uleb128 0x24
 997 0015 00       		.byte	0
 998 0016 0B       		.uleb128 0xb
 999 0017 0B       		.uleb128 0xb
 1000 0018 3E       		.uleb128 0x3e
 1001 0019 0B       		.uleb128 0xb
 1002 001a 03       		.uleb128 0x3
 1003 001b 0E       		.uleb128 0xe
 1004 001c 00       		.byte	0
 1005 001d 00       		.byte	0
 1006 001e 03       		.uleb128 0x3
 1007 001f 24       		.uleb128 0x24
 1008 0020 00       		.byte	0
 1009 0021 0B       		.uleb128 0xb
 1010 0022 0B       		.uleb128 0xb
 1011 0023 3E       		.uleb128 0x3e
 1012 0024 0B       		.uleb128 0xb
 1013 0025 03       		.uleb128 0x3
 1014 0026 08       		.uleb128 0x8
 1015 0027 00       		.byte	0
 1016 0028 00       		.byte	0
 1017 0029 04       		.uleb128 0x4
 1018 002a 16       		.uleb128 0x16
 1019 002b 00       		.byte	0
 1020 002c 03       		.uleb128 0x3
 1021 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 35


 1022 002e 3A       		.uleb128 0x3a
 1023 002f 0B       		.uleb128 0xb
 1024 0030 3B       		.uleb128 0x3b
 1025 0031 0B       		.uleb128 0xb
 1026 0032 49       		.uleb128 0x49
 1027 0033 13       		.uleb128 0x13
 1028 0034 00       		.byte	0
 1029 0035 00       		.byte	0
 1030 0036 05       		.uleb128 0x5
 1031 0037 16       		.uleb128 0x16
 1032 0038 00       		.byte	0
 1033 0039 03       		.uleb128 0x3
 1034 003a 0E       		.uleb128 0xe
 1035 003b 3A       		.uleb128 0x3a
 1036 003c 0B       		.uleb128 0xb
 1037 003d 3B       		.uleb128 0x3b
 1038 003e 05       		.uleb128 0x5
 1039 003f 49       		.uleb128 0x49
 1040 0040 13       		.uleb128 0x13
 1041 0041 00       		.byte	0
 1042 0042 00       		.byte	0
 1043 0043 06       		.uleb128 0x6
 1044 0044 35       		.uleb128 0x35
 1045 0045 00       		.byte	0
 1046 0046 49       		.uleb128 0x49
 1047 0047 13       		.uleb128 0x13
 1048 0048 00       		.byte	0
 1049 0049 00       		.byte	0
 1050 004a 07       		.uleb128 0x7
 1051 004b 2E       		.uleb128 0x2e
 1052 004c 00       		.byte	0
 1053 004d 3F       		.uleb128 0x3f
 1054 004e 19       		.uleb128 0x19
 1055 004f 03       		.uleb128 0x3
 1056 0050 0E       		.uleb128 0xe
 1057 0051 3A       		.uleb128 0x3a
 1058 0052 0B       		.uleb128 0xb
 1059 0053 3B       		.uleb128 0x3b
 1060 0054 0B       		.uleb128 0xb
 1061 0055 27       		.uleb128 0x27
 1062 0056 19       		.uleb128 0x19
 1063 0057 11       		.uleb128 0x11
 1064 0058 01       		.uleb128 0x1
 1065 0059 12       		.uleb128 0x12
 1066 005a 06       		.uleb128 0x6
 1067 005b 40       		.uleb128 0x40
 1068 005c 18       		.uleb128 0x18
 1069 005d 9742     		.uleb128 0x2117
 1070 005f 19       		.uleb128 0x19
 1071 0060 00       		.byte	0
 1072 0061 00       		.byte	0
 1073 0062 08       		.uleb128 0x8
 1074 0063 2E       		.uleb128 0x2e
 1075 0064 01       		.byte	0x1
 1076 0065 3F       		.uleb128 0x3f
 1077 0066 19       		.uleb128 0x19
 1078 0067 03       		.uleb128 0x3
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 36


 1079 0068 0E       		.uleb128 0xe
 1080 0069 3A       		.uleb128 0x3a
 1081 006a 0B       		.uleb128 0xb
 1082 006b 3B       		.uleb128 0x3b
 1083 006c 05       		.uleb128 0x5
 1084 006d 27       		.uleb128 0x27
 1085 006e 19       		.uleb128 0x19
 1086 006f 11       		.uleb128 0x11
 1087 0070 01       		.uleb128 0x1
 1088 0071 12       		.uleb128 0x12
 1089 0072 06       		.uleb128 0x6
 1090 0073 40       		.uleb128 0x40
 1091 0074 18       		.uleb128 0x18
 1092 0075 9742     		.uleb128 0x2117
 1093 0077 19       		.uleb128 0x19
 1094 0078 01       		.uleb128 0x1
 1095 0079 13       		.uleb128 0x13
 1096 007a 00       		.byte	0
 1097 007b 00       		.byte	0
 1098 007c 09       		.uleb128 0x9
 1099 007d 05       		.uleb128 0x5
 1100 007e 00       		.byte	0
 1101 007f 03       		.uleb128 0x3
 1102 0080 0E       		.uleb128 0xe
 1103 0081 3A       		.uleb128 0x3a
 1104 0082 0B       		.uleb128 0xb
 1105 0083 3B       		.uleb128 0x3b
 1106 0084 05       		.uleb128 0x5
 1107 0085 49       		.uleb128 0x49
 1108 0086 13       		.uleb128 0x13
 1109 0087 02       		.uleb128 0x2
 1110 0088 18       		.uleb128 0x18
 1111 0089 00       		.byte	0
 1112 008a 00       		.byte	0
 1113 008b 0A       		.uleb128 0xa
 1114 008c 2E       		.uleb128 0x2e
 1115 008d 00       		.byte	0
 1116 008e 3F       		.uleb128 0x3f
 1117 008f 19       		.uleb128 0x19
 1118 0090 03       		.uleb128 0x3
 1119 0091 0E       		.uleb128 0xe
 1120 0092 3A       		.uleb128 0x3a
 1121 0093 0B       		.uleb128 0xb
 1122 0094 3B       		.uleb128 0x3b
 1123 0095 05       		.uleb128 0x5
 1124 0096 27       		.uleb128 0x27
 1125 0097 19       		.uleb128 0x19
 1126 0098 49       		.uleb128 0x49
 1127 0099 13       		.uleb128 0x13
 1128 009a 11       		.uleb128 0x11
 1129 009b 01       		.uleb128 0x1
 1130 009c 12       		.uleb128 0x12
 1131 009d 06       		.uleb128 0x6
 1132 009e 40       		.uleb128 0x40
 1133 009f 18       		.uleb128 0x18
 1134 00a0 9742     		.uleb128 0x2117
 1135 00a2 19       		.uleb128 0x19
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 37


 1136 00a3 00       		.byte	0
 1137 00a4 00       		.byte	0
 1138 00a5 0B       		.uleb128 0xb
 1139 00a6 2E       		.uleb128 0x2e
 1140 00a7 01       		.byte	0x1
 1141 00a8 3F       		.uleb128 0x3f
 1142 00a9 19       		.uleb128 0x19
 1143 00aa 03       		.uleb128 0x3
 1144 00ab 0E       		.uleb128 0xe
 1145 00ac 3A       		.uleb128 0x3a
 1146 00ad 0B       		.uleb128 0xb
 1147 00ae 3B       		.uleb128 0x3b
 1148 00af 05       		.uleb128 0x5
 1149 00b0 27       		.uleb128 0x27
 1150 00b1 19       		.uleb128 0x19
 1151 00b2 49       		.uleb128 0x49
 1152 00b3 13       		.uleb128 0x13
 1153 00b4 11       		.uleb128 0x11
 1154 00b5 01       		.uleb128 0x1
 1155 00b6 12       		.uleb128 0x12
 1156 00b7 06       		.uleb128 0x6
 1157 00b8 40       		.uleb128 0x40
 1158 00b9 18       		.uleb128 0x18
 1159 00ba 9742     		.uleb128 0x2117
 1160 00bc 19       		.uleb128 0x19
 1161 00bd 01       		.uleb128 0x1
 1162 00be 13       		.uleb128 0x13
 1163 00bf 00       		.byte	0
 1164 00c0 00       		.byte	0
 1165 00c1 0C       		.uleb128 0xc
 1166 00c2 34       		.uleb128 0x34
 1167 00c3 00       		.byte	0
 1168 00c4 03       		.uleb128 0x3
 1169 00c5 0E       		.uleb128 0xe
 1170 00c6 3A       		.uleb128 0x3a
 1171 00c7 0B       		.uleb128 0xb
 1172 00c8 3B       		.uleb128 0x3b
 1173 00c9 05       		.uleb128 0x5
 1174 00ca 49       		.uleb128 0x49
 1175 00cb 13       		.uleb128 0x13
 1176 00cc 02       		.uleb128 0x2
 1177 00cd 18       		.uleb128 0x18
 1178 00ce 00       		.byte	0
 1179 00cf 00       		.byte	0
 1180 00d0 0D       		.uleb128 0xd
 1181 00d1 898201   		.uleb128 0x4109
 1182 00d4 00       		.byte	0
 1183 00d5 11       		.uleb128 0x11
 1184 00d6 01       		.uleb128 0x1
 1185 00d7 31       		.uleb128 0x31
 1186 00d8 13       		.uleb128 0x13
 1187 00d9 00       		.byte	0
 1188 00da 00       		.byte	0
 1189 00db 0E       		.uleb128 0xe
 1190 00dc 2E       		.uleb128 0x2e
 1191 00dd 01       		.byte	0x1
 1192 00de 3F       		.uleb128 0x3f
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 38


 1193 00df 19       		.uleb128 0x19
 1194 00e0 03       		.uleb128 0x3
 1195 00e1 0E       		.uleb128 0xe
 1196 00e2 3A       		.uleb128 0x3a
 1197 00e3 0B       		.uleb128 0xb
 1198 00e4 3B       		.uleb128 0x3b
 1199 00e5 0B       		.uleb128 0xb
 1200 00e6 27       		.uleb128 0x27
 1201 00e7 19       		.uleb128 0x19
 1202 00e8 11       		.uleb128 0x11
 1203 00e9 01       		.uleb128 0x1
 1204 00ea 12       		.uleb128 0x12
 1205 00eb 06       		.uleb128 0x6
 1206 00ec 40       		.uleb128 0x40
 1207 00ed 18       		.uleb128 0x18
 1208 00ee 9742     		.uleb128 0x2117
 1209 00f0 19       		.uleb128 0x19
 1210 00f1 01       		.uleb128 0x1
 1211 00f2 13       		.uleb128 0x13
 1212 00f3 00       		.byte	0
 1213 00f4 00       		.byte	0
 1214 00f5 0F       		.uleb128 0xf
 1215 00f6 34       		.uleb128 0x34
 1216 00f7 00       		.byte	0
 1217 00f8 03       		.uleb128 0x3
 1218 00f9 0E       		.uleb128 0xe
 1219 00fa 3A       		.uleb128 0x3a
 1220 00fb 0B       		.uleb128 0xb
 1221 00fc 3B       		.uleb128 0x3b
 1222 00fd 0B       		.uleb128 0xb
 1223 00fe 49       		.uleb128 0x49
 1224 00ff 13       		.uleb128 0x13
 1225 0100 02       		.uleb128 0x2
 1226 0101 17       		.uleb128 0x17
 1227 0102 00       		.byte	0
 1228 0103 00       		.byte	0
 1229 0104 10       		.uleb128 0x10
 1230 0105 898201   		.uleb128 0x4109
 1231 0108 01       		.byte	0x1
 1232 0109 11       		.uleb128 0x11
 1233 010a 01       		.uleb128 0x1
 1234 010b 31       		.uleb128 0x31
 1235 010c 13       		.uleb128 0x13
 1236 010d 01       		.uleb128 0x1
 1237 010e 13       		.uleb128 0x13
 1238 010f 00       		.byte	0
 1239 0110 00       		.byte	0
 1240 0111 11       		.uleb128 0x11
 1241 0112 8A8201   		.uleb128 0x410a
 1242 0115 00       		.byte	0
 1243 0116 02       		.uleb128 0x2
 1244 0117 18       		.uleb128 0x18
 1245 0118 9142     		.uleb128 0x2111
 1246 011a 18       		.uleb128 0x18
 1247 011b 00       		.byte	0
 1248 011c 00       		.byte	0
 1249 011d 12       		.uleb128 0x12
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 39


 1250 011e 34       		.uleb128 0x34
 1251 011f 00       		.byte	0
 1252 0120 03       		.uleb128 0x3
 1253 0121 0E       		.uleb128 0xe
 1254 0122 3A       		.uleb128 0x3a
 1255 0123 0B       		.uleb128 0xb
 1256 0124 3B       		.uleb128 0x3b
 1257 0125 0B       		.uleb128 0xb
 1258 0126 49       		.uleb128 0x49
 1259 0127 13       		.uleb128 0x13
 1260 0128 3F       		.uleb128 0x3f
 1261 0129 19       		.uleb128 0x19
 1262 012a 02       		.uleb128 0x2
 1263 012b 18       		.uleb128 0x18
 1264 012c 00       		.byte	0
 1265 012d 00       		.byte	0
 1266 012e 13       		.uleb128 0x13
 1267 012f 2E       		.uleb128 0x2e
 1268 0130 00       		.byte	0
 1269 0131 3F       		.uleb128 0x3f
 1270 0132 19       		.uleb128 0x19
 1271 0133 03       		.uleb128 0x3
 1272 0134 0E       		.uleb128 0xe
 1273 0135 3A       		.uleb128 0x3a
 1274 0136 0B       		.uleb128 0xb
 1275 0137 3B       		.uleb128 0x3b
 1276 0138 0B       		.uleb128 0xb
 1277 0139 27       		.uleb128 0x27
 1278 013a 19       		.uleb128 0x19
 1279 013b 49       		.uleb128 0x49
 1280 013c 13       		.uleb128 0x13
 1281 013d 3C       		.uleb128 0x3c
 1282 013e 19       		.uleb128 0x19
 1283 013f 00       		.byte	0
 1284 0140 00       		.byte	0
 1285 0141 14       		.uleb128 0x14
 1286 0142 2E       		.uleb128 0x2e
 1287 0143 01       		.byte	0x1
 1288 0144 3F       		.uleb128 0x3f
 1289 0145 19       		.uleb128 0x19
 1290 0146 03       		.uleb128 0x3
 1291 0147 0E       		.uleb128 0xe
 1292 0148 3A       		.uleb128 0x3a
 1293 0149 0B       		.uleb128 0xb
 1294 014a 3B       		.uleb128 0x3b
 1295 014b 0B       		.uleb128 0xb
 1296 014c 27       		.uleb128 0x27
 1297 014d 19       		.uleb128 0x19
 1298 014e 3C       		.uleb128 0x3c
 1299 014f 19       		.uleb128 0x19
 1300 0150 00       		.byte	0
 1301 0151 00       		.byte	0
 1302 0152 15       		.uleb128 0x15
 1303 0153 05       		.uleb128 0x5
 1304 0154 00       		.byte	0
 1305 0155 49       		.uleb128 0x49
 1306 0156 13       		.uleb128 0x13
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 40


 1307 0157 00       		.byte	0
 1308 0158 00       		.byte	0
 1309 0159 00       		.byte	0
 1310              		.section	.debug_loc,"",%progbits
 1311              	.Ldebug_loc0:
 1312              	.LLST0:
 1313 0000 0A000000 		.4byte	.LVL9
 1314 0004 0E000000 		.4byte	.LVL10
 1315 0008 0100     		.2byte	0x1
 1316 000a 53       		.byte	0x53
 1317 000b 00000000 		.4byte	0
 1318 000f 00000000 		.4byte	0
 1319              	.LLST1:
 1320 0013 48000000 		.4byte	.LVL16
 1321 0017 53000000 		.4byte	.LVL17-1
 1322 001b 0100     		.2byte	0x1
 1323 001d 50       		.byte	0x50
 1324 001e 00000000 		.4byte	0
 1325 0022 00000000 		.4byte	0
 1326              		.section	.debug_aranges,"",%progbits
 1327 0000 A4000000 		.4byte	0xa4
 1328 0004 0200     		.2byte	0x2
 1329 0006 00000000 		.4byte	.Ldebug_info0
 1330 000a 04       		.byte	0x4
 1331 000b 00       		.byte	0
 1332 000c 0000     		.2byte	0
 1333 000e 0000     		.2byte	0
 1334 0010 00000000 		.4byte	.LFB2
 1335 0014 10000000 		.4byte	.LFE2-.LFB2
 1336 0018 00000000 		.4byte	.LFB3
 1337 001c 10000000 		.4byte	.LFE3-.LFB3
 1338 0020 00000000 		.4byte	.LFB4
 1339 0024 0C000000 		.4byte	.LFE4-.LFB4
 1340 0028 00000000 		.4byte	.LFB5
 1341 002c 14000000 		.4byte	.LFE5-.LFB5
 1342 0030 00000000 		.4byte	.LFB7
 1343 0034 0C000000 		.4byte	.LFE7-.LFB7
 1344 0038 00000000 		.4byte	.LFB8
 1345 003c 0C000000 		.4byte	.LFE8-.LFB8
 1346 0040 00000000 		.4byte	.LFB9
 1347 0044 0C000000 		.4byte	.LFE9-.LFB9
 1348 0048 00000000 		.4byte	.LFB10
 1349 004c 0C000000 		.4byte	.LFE10-.LFB10
 1350 0050 00000000 		.4byte	.LFB11
 1351 0054 0C000000 		.4byte	.LFE11-.LFB11
 1352 0058 00000000 		.4byte	.LFB12
 1353 005c 0C000000 		.4byte	.LFE12-.LFB12
 1354 0060 00000000 		.4byte	.LFB13
 1355 0064 0C000000 		.4byte	.LFE13-.LFB13
 1356 0068 00000000 		.4byte	.LFB14
 1357 006c 0C000000 		.4byte	.LFE14-.LFB14
 1358 0070 00000000 		.4byte	.LFB6
 1359 0074 12000000 		.4byte	.LFE6-.LFB6
 1360 0078 00000000 		.4byte	.LFB1
 1361 007c 68000000 		.4byte	.LFE1-.LFB1
 1362 0080 00000000 		.4byte	.LFB0
 1363 0084 20000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 41


 1364 0088 00000000 		.4byte	.LFB15
 1365 008c 0C000000 		.4byte	.LFE15-.LFB15
 1366 0090 00000000 		.4byte	.LFB16
 1367 0094 0C000000 		.4byte	.LFE16-.LFB16
 1368 0098 00000000 		.4byte	.LFB17
 1369 009c 0C000000 		.4byte	.LFE17-.LFB17
 1370 00a0 00000000 		.4byte	0
 1371 00a4 00000000 		.4byte	0
 1372              		.section	.debug_ranges,"",%progbits
 1373              	.Ldebug_ranges0:
 1374 0000 00000000 		.4byte	.LFB2
 1375 0004 10000000 		.4byte	.LFE2
 1376 0008 00000000 		.4byte	.LFB3
 1377 000c 10000000 		.4byte	.LFE3
 1378 0010 00000000 		.4byte	.LFB4
 1379 0014 0C000000 		.4byte	.LFE4
 1380 0018 00000000 		.4byte	.LFB5
 1381 001c 14000000 		.4byte	.LFE5
 1382 0020 00000000 		.4byte	.LFB7
 1383 0024 0C000000 		.4byte	.LFE7
 1384 0028 00000000 		.4byte	.LFB8
 1385 002c 0C000000 		.4byte	.LFE8
 1386 0030 00000000 		.4byte	.LFB9
 1387 0034 0C000000 		.4byte	.LFE9
 1388 0038 00000000 		.4byte	.LFB10
 1389 003c 0C000000 		.4byte	.LFE10
 1390 0040 00000000 		.4byte	.LFB11
 1391 0044 0C000000 		.4byte	.LFE11
 1392 0048 00000000 		.4byte	.LFB12
 1393 004c 0C000000 		.4byte	.LFE12
 1394 0050 00000000 		.4byte	.LFB13
 1395 0054 0C000000 		.4byte	.LFE13
 1396 0058 00000000 		.4byte	.LFB14
 1397 005c 0C000000 		.4byte	.LFE14
 1398 0060 00000000 		.4byte	.LFB6
 1399 0064 12000000 		.4byte	.LFE6
 1400 0068 00000000 		.4byte	.LFB1
 1401 006c 68000000 		.4byte	.LFE1
 1402 0070 00000000 		.4byte	.LFB0
 1403 0074 20000000 		.4byte	.LFE0
 1404 0078 00000000 		.4byte	.LFB15
 1405 007c 0C000000 		.4byte	.LFE15
 1406 0080 00000000 		.4byte	.LFB16
 1407 0084 0C000000 		.4byte	.LFE16
 1408 0088 00000000 		.4byte	.LFB17
 1409 008c 0C000000 		.4byte	.LFE17
 1410 0090 00000000 		.4byte	0
 1411 0094 00000000 		.4byte	0
 1412              		.section	.debug_line,"",%progbits
 1413              	.Ldebug_line0:
 1414 0000 B2010000 		.section	.debug_str,"MS",%progbits,1
 1414      02004D00 
 1414      00000201 
 1414      FB0E0D00 
 1414      01010101 
 1415              	.LASF15:
 1416 0000 72656731 		.ascii	"reg16\000"
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 42


 1416      3600
 1417              	.LASF34:
 1418 0006 50574D5F 		.ascii	"PWM_Init\000"
 1418      496E6974 
 1418      00
 1419              	.LASF35:
 1420 000f 72657375 		.ascii	"result\000"
 1420      6C7400
 1421              	.LASF33:
 1422 0016 50574D5F 		.ascii	"PWM_ClearFIFO\000"
 1422      436C6561 
 1422      72464946 
 1422      4F00
 1423              	.LASF22:
 1424 0024 70657269 		.ascii	"period\000"
 1424      6F6400
 1425              	.LASF38:
 1426 002b 50574D5F 		.ascii	"PWM_Start\000"
 1426      53746172 
 1426      7400
 1427              	.LASF3:
 1428 0035 73686F72 		.ascii	"short unsigned int\000"
 1428      7420756E 
 1428      7369676E 
 1428      65642069 
 1428      6E7400
 1429              	.LASF32:
 1430 0048 50574D5F 		.ascii	"PWM_ReadCapture\000"
 1430      52656164 
 1430      43617074 
 1430      75726500 
 1431              	.LASF43:
 1432 0058 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 1432      6E657261 
 1432      7465645F 
 1432      536F7572 
 1432      63655C50 
 1433              	.LASF11:
 1434 0077 666C6F61 		.ascii	"float\000"
 1434      7400
 1435              	.LASF21:
 1436 007d 636F756E 		.ascii	"counter\000"
 1436      74657200 
 1437              	.LASF7:
 1438 0085 6C6F6E67 		.ascii	"long long unsigned int\000"
 1438      206C6F6E 
 1438      6720756E 
 1438      7369676E 
 1438      65642069 
 1439              	.LASF1:
 1440 009c 756E7369 		.ascii	"unsigned char\000"
 1440      676E6564 
 1440      20636861 
 1440      7200
 1441              	.LASF14:
 1442 00aa 72656738 		.ascii	"reg8\000"
 1442      00
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 43


 1443              	.LASF5:
 1444 00af 6C6F6E67 		.ascii	"long unsigned int\000"
 1444      20756E73 
 1444      69676E65 
 1444      6420696E 
 1444      7400
 1445              	.LASF28:
 1446 00c1 50574D5F 		.ascii	"PWM_ReadCounter\000"
 1446      52656164 
 1446      436F756E 
 1446      74657200 
 1447              	.LASF9:
 1448 00d1 75696E74 		.ascii	"uint8\000"
 1448      3800
 1449              	.LASF31:
 1450 00d7 636F6E74 		.ascii	"control\000"
 1450      726F6C00 
 1451              	.LASF44:
 1452 00df 443A5C37 		.ascii	"D:\\744\\psoc\\Timers\\T_1.cydsn\000"
 1452      34345C70 
 1452      736F635C 
 1452      54696D65 
 1452      72735C54 
 1453              	.LASF12:
 1454 00fc 646F7562 		.ascii	"double\000"
 1454      6C6500
 1455              	.LASF10:
 1456 0103 75696E74 		.ascii	"uint16\000"
 1456      313600
 1457              	.LASF46:
 1458 010a 50574D5F 		.ascii	"PWM_initVar\000"
 1458      696E6974 
 1458      56617200 
 1459              	.LASF47:
 1460 0116 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1460      74657243 
 1460      72697469 
 1460      63616C53 
 1460      65637469 
 1461              	.LASF8:
 1462 012d 756E7369 		.ascii	"unsigned int\000"
 1462      676E6564 
 1462      20696E74 
 1462      00
 1463              	.LASF48:
 1464 013a 43794578 		.ascii	"CyExitCriticalSection\000"
 1464      69744372 
 1464      69746963 
 1464      616C5365 
 1464      6374696F 
 1465              	.LASF23:
 1466 0150 50574D5F 		.ascii	"PWM_WriteCompare1\000"
 1466      57726974 
 1466      65436F6D 
 1466      70617265 
 1466      3100
 1467              	.LASF25:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 44


 1468 0162 50574D5F 		.ascii	"PWM_WriteCompare2\000"
 1468      57726974 
 1468      65436F6D 
 1468      70617265 
 1468      3200
 1469              	.LASF20:
 1470 0174 50574D5F 		.ascii	"PWM_WritePeriod\000"
 1470      57726974 
 1470      65506572 
 1470      696F6400 
 1471              	.LASF26:
 1472 0184 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 1472      53657449 
 1472      6E746572 
 1472      72757074 
 1472      4D6F6465 
 1473              	.LASF42:
 1474 0199 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1474      4320342E 
 1474      392E3320 
 1474      32303135 
 1474      30333033 
 1475 01cc 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1475      20726576 
 1475      6973696F 
 1475      6E203232 
 1475      31323230 
 1476 01ff 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1476      66756E63 
 1476      74696F6E 
 1476      2D736563 
 1476      74696F6E 
 1477              	.LASF16:
 1478 0227 73697A65 		.ascii	"sizetype\000"
 1478      74797065 
 1478      00
 1479              	.LASF6:
 1480 0230 6C6F6E67 		.ascii	"long long int\000"
 1480      206C6F6E 
 1480      6720696E 
 1480      7400
 1481              	.LASF27:
 1482 023e 696E7465 		.ascii	"interruptMode\000"
 1482      72727570 
 1482      744D6F64 
 1482      6500
 1483              	.LASF30:
 1484 024c 50574D5F 		.ascii	"PWM_WriteControlRegister\000"
 1484      57726974 
 1484      65436F6E 
 1484      74726F6C 
 1484      52656769 
 1485              	.LASF37:
 1486 0265 50574D5F 		.ascii	"PWM_interruptState\000"
 1486      696E7465 
 1486      72727570 
 1486      74537461 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 45


 1486      746500
 1487              	.LASF41:
 1488 0278 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 1488      52656164 
 1488      50657269 
 1488      6F6400
 1489              	.LASF2:
 1490 0287 73686F72 		.ascii	"short int\000"
 1490      7420696E 
 1490      7400
 1491              	.LASF19:
 1492 0291 50574D5F 		.ascii	"PWM_WriteCounter\000"
 1492      57726974 
 1492      65436F75 
 1492      6E746572 
 1492      00
 1493              	.LASF18:
 1494 02a2 50574D5F 		.ascii	"PWM_Stop\000"
 1494      53746F70 
 1494      00
 1495              	.LASF4:
 1496 02ab 6C6F6E67 		.ascii	"long int\000"
 1496      20696E74 
 1496      00
 1497              	.LASF13:
 1498 02b4 63686172 		.ascii	"char\000"
 1498      00
 1499              	.LASF39:
 1500 02b9 50574D5F 		.ascii	"PWM_ReadCompare1\000"
 1500      52656164 
 1500      436F6D70 
 1500      61726531 
 1500      00
 1501              	.LASF40:
 1502 02ca 50574D5F 		.ascii	"PWM_ReadCompare2\000"
 1502      52656164 
 1502      436F6D70 
 1502      61726532 
 1502      00
 1503              	.LASF0:
 1504 02db 7369676E 		.ascii	"signed char\000"
 1504      65642063 
 1504      68617200 
 1505              	.LASF24:
 1506 02e7 636F6D70 		.ascii	"compare\000"
 1506      61726500 
 1507              	.LASF17:
 1508 02ef 50574D5F 		.ascii	"PWM_Enable\000"
 1508      456E6162 
 1508      6C6500
 1509              	.LASF29:
 1510 02fa 50574D5F 		.ascii	"PWM_ReadStatusRegister\000"
 1510      52656164 
 1510      53746174 
 1510      75735265 
 1510      67697374 
 1511              	.LASF45:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccplxR5I.s 			page 46


 1512 0311 50574D5F 		.ascii	"PWM_ReadControlRegister\000"
 1512      52656164 
 1512      436F6E74 
 1512      726F6C52 
 1512      65676973 
 1513              	.LASF36:
 1514 0329 6374726C 		.ascii	"ctrl\000"
 1514      00
 1515              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
