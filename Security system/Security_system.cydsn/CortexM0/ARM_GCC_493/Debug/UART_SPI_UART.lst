ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_SpiUartReadRxData,"ax",%progbits
  18              		.align	2
  19              		.global	UART_SpiUartReadRxData
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_SpiUartReadRxData, %function
  23              	UART_SpiUartReadRxData:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_SPI_UART.c"
   1:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * File Name: UART_SPI_UART.c
   3:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   5:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  SPI and UART modes.
   8:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   9:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
  11:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  18:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_PVT.h"
  19:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  21:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************
  22:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *        SPI/UART Private Vars
  23:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ***************************************/
  24:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  25:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
  26:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferHead;
  27:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferTail;
  28:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8  UART_rxBufferOverflow;
  29:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  30:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  31:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
  32:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferHead;
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 2


  33:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferTail;
  34:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
  35:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  36:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER)
  37:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  38:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_rxBufferInternal[UART_INTERNAL_RX_BUFFER_SIZE];
  39:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER) */
  40:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  41:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER)
  42:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_txBufferInternal[UART_TX_BUFFER_SIZE];
  43:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER) */
  44:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  45:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  46:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_RX_DIRECTION)
  47:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
  48:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartReadRxData
  49:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
  50:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  51:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
  52:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  53:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  54:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  55:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  56:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  57:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     is empty.
  58:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  59:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
  60:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
  61:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  62:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
  63:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Next data element from the receive buffer.
  64:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  65:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Global Variables:
  66:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Look into UART_SpiInit for description.
  67:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  68:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
  69:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartReadRxData(void)
  70:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  26              		.loc 1 70 0
  27              		.cfi_startproc
  28              	.LVL0:
  71:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 rxData = 0u;
  72:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  73:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
  74:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
  75:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  76:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  77:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
  78:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  79:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_rxBufferHead != UART_rxBufferTail)
  80:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
  81:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  82:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  83:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Calculate index to read from */
  84:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locTail = (UART_rxBufferTail + 1u);
  85:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  86:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_INTERNAL_RX_BUFFER_SIZE == locTail)
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 3


  87:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
  88:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locTail = 0u;
  89:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
  90:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  91:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Get data from RX software buffer */
  92:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 rxData = UART_GetWordFromRxBuffer(locTail);
  93:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  94:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Change index in the buffer */
  95:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_rxBufferTail = locTail;
  96:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  97:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
  98:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
  99:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 100:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     if (0u == (UART_INTR_RX_MASK_REG & UART_INTR_RX_NOT_EMPTY))
 101:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     {
 102:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 103:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         * receiving data into software buffer.
 104:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         */
 105:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 106:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     }
 107:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 108:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #endif
 109:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 110:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 111:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 112:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 113:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 114:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Read data from RX FIFO */
 115:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
  29              		.loc 1 115 0
  30 0000 014B     		ldr	r3, .L2
  31 0002 1868     		ldr	r0, [r3]
  32              	.LVL1:
 116:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 117:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 118:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 119:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (rxData);
 120:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  33              		.loc 1 120 0
  34              		@ sp needed
  35 0004 7047     		bx	lr
  36              	.L3:
  37 0006 C046     		.align	2
  38              	.L2:
  39 0008 40030640 		.word	1074135872
  40              		.cfi_endproc
  41              	.LFE0:
  42              		.size	UART_SpiUartReadRxData, .-UART_SpiUartReadRxData
  43              		.section	.text.UART_SpiUartGetRxBufferSize,"ax",%progbits
  44              		.align	2
  45              		.global	UART_SpiUartGetRxBufferSize
  46              		.code	16
  47              		.thumb_func
  48              		.type	UART_SpiUartGetRxBufferSize, %function
  49              	UART_SpiUartGetRxBufferSize:
  50              	.LFB1:
 121:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 4


 122:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 123:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 124:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetRxBufferSize
 125:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 126:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 127:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 128:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 129:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 130:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO.
 131:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 132:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 133:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 134:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 135:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 136:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 137:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 138:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of received data elements
 139:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 140:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 141:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetRxBufferSize(void)
 142:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  51              		.loc 1 142 0
  52              		.cfi_startproc
 143:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 144:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
 145:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 146:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 147:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 148:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 149:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 150:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locHead = UART_rxBufferHead;
 151:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 152:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if(locHead >= UART_rxBufferTail)
 153:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 154:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead - UART_rxBufferTail);
 155:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 156:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 157:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 158:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead + (UART_INTERNAL_RX_BUFFER_SIZE - UART_rxBufferTail));
 159:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 160:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 161:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 162:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 163:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_RX_FIFO_ENTRIES;
  53              		.loc 1 163 0
  54 0000 024B     		ldr	r3, .L5
  55 0002 1B68     		ldr	r3, [r3]
  56 0004 0F20     		mov	r0, #15
  57 0006 1840     		and	r0, r3
  58              	.LVL2:
 164:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 165:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 166:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 167:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 168:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  59              		.loc 1 168 0
  60              		@ sp needed
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 5


  61 0008 7047     		bx	lr
  62              	.L6:
  63 000a C046     		.align	2
  64              	.L5:
  65 000c 08030640 		.word	1074135816
  66              		.cfi_endproc
  67              	.LFE1:
  68              		.size	UART_SpiUartGetRxBufferSize, .-UART_SpiUartGetRxBufferSize
  69              		.section	.text.UART_SpiUartClearRxBuffer,"ax",%progbits
  70              		.align	2
  71              		.global	UART_SpiUartClearRxBuffer
  72              		.code	16
  73              		.thumb_func
  74              		.type	UART_SpiUartClearRxBuffer, %function
  75              	UART_SpiUartClearRxBuffer:
  76              	.LFB2:
 169:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 170:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 171:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 172:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearRxBuffer
 173:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 174:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 175:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 176:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 177:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 178:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 179:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 180:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 181:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 182:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 183:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 184:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 185:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearRxBuffer(void)
 186:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  77              		.loc 1 186 0
  78              		.cfi_startproc
 187:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 188:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 189:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 190:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 191:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 192:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush RX software buffer */
 193:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferHead = UART_rxBufferTail;
 194:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferOverflow = 0u;
 195:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 196:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 197:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ALL);
 198:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 199:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 200:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 201:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 202:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 * data into software buffer.
 203:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 */
 204:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 205:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 206:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #endif
 207:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 6


 208:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 209:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 210:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 211:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 212:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 213:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
  79              		.loc 1 213 0
  80 0000 054B     		ldr	r3, .L8
  81 0002 1A68     		ldr	r2, [r3]
  82 0004 8021     		mov	r1, #128
  83 0006 4902     		lsl	r1, r1, #9
  84 0008 0A43     		orr	r2, r1
  85 000a 1A60     		str	r2, [r3]
  86 000c 1968     		ldr	r1, [r3]
  87 000e 034A     		ldr	r2, .L8+4
  88 0010 0A40     		and	r2, r1
  89 0012 1A60     		str	r2, [r3]
 214:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 215:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 216:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  90              		.loc 1 216 0
  91              		@ sp needed
  92 0014 7047     		bx	lr
  93              	.L9:
  94 0016 C046     		.align	2
  95              	.L8:
  96 0018 04030640 		.word	1074135812
  97 001c FFFFFEFF 		.word	-65537
  98              		.cfi_endproc
  99              	.LFE2:
 100              		.size	UART_SpiUartClearRxBuffer, .-UART_SpiUartClearRxBuffer
 101              		.section	.text.UART_SpiUartDisableIntRx,"ax",%progbits
 102              		.align	2
 103              		.global	UART_SpiUartDisableIntRx
 104              		.code	16
 105              		.thumb_func
 106              		.type	UART_SpiUartDisableIntRx, %function
 107              	UART_SpiUartDisableIntRx:
 108              	.LFB3:
 217:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 218:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_RX_DIRECTION) */
 219:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 220:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 221:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_TX_DIRECTION)
 222:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartWriteTxData
 224:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 226:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 227:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 228:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  bus time.
 229:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 230:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 231:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 232:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 233:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  txDataByte: the data to be transmitted.
 234:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 7


 235:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 236:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 237:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 238:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 239:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartWriteTxData(uint32 txData)
 240:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 241:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 242:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 243:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 244:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 245:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 246:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 247:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 248:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if ((UART_txBufferHead == UART_txBufferTail) &&
 249:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 250:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 251:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 252:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_TX_FIFO_WR_REG = txData;
 253:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 254:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data into TX software buffer */
 255:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 256:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 257:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Head index to put data */
 258:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locHead = (UART_txBufferHead + 1u);
 259:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 260:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Adjust TX software buffer index */
 261:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_TX_BUFFER_SIZE == locHead)
 262:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 263:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locHead = 0u;
 264:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 265:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 266:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 267:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 while (locHead == UART_txBufferTail)
 268:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 269:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 270:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 271:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer has at least one room */
 272:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 273:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 274:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_ClearTxInterruptSource(UART_INTR_TX_NOT_FULL);
 275:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 276:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_PutWordInTxBuffer(locHead, txData);
 277:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_txBufferHead = locHead;
 279:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 280:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 281:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (0u == (UART_INTR_TX_MASK_REG & UART_INTR_TX_NOT_FULL))
 282:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 283:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 284:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     UART_INTR_TX_MASK_REG |= (uint32) UART_INTR_TX_NOT_FULL;
 285:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 286:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 287:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 288:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 289:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 290:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 291:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             while (UART_SPI_UART_FIFO_SIZE == UART_GET_TX_FIFO_ENTRIES)
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 8


 292:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 293:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 294:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 295:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_TX_FIFO_WR_REG = txData;
 296:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 297:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 298:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 299:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 300:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 301:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 302:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartPutArray
 303:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 304:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 305:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 306:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 307:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 308:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 309:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  than transmit buffer size.
 310:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 311:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 312:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  wrBuf:  pointer to an array with data to be placed in transmit buffer.
 313:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  count:  number of data elements to be placed in the transmit buffer.
 314:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 315:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 316:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 317:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 318:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 319:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 320:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 321:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 i;
 322:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
 324:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 325:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_SpiUartWriteTxData((uint32) wrBuf[i]);
 326:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 327:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 328:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 329:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 330:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 331:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetTxBufferSize
 332:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 333:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 334:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 335:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Returns the number of elements currently in the transmit buffer.
 336:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  - TX software buffer is disabled: returns the number of used entries in
 337:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    TX FIFO.
 338:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  - TX software buffer is enabled: returns the number of elements currently
 339:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    used in the transmit buffer. This number does not include used entries in
 340:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 341:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    not full.
 342:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 343:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 344:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 345:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 346:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 347:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 348:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 9


 349:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 350:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetTxBufferSize(void)
 351:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 352:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 353:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 354:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
 355:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 356:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 357:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 358:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 359:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Get current Tail index */
 360:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locTail = UART_txBufferTail;
 361:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 362:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_txBufferHead >= locTail)
 363:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 364:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead - locTail);
 365:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 366:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 367:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 368:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead + (UART_TX_BUFFER_SIZE - locTail));
 369:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 370:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 371:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 372:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 373:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_TX_FIFO_ENTRIES;
 374:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 375:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 376:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 377:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 378:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 379:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 380:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 381:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 382:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearTxBuffer
 383:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 384:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 385:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 386:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 387:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 388:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 389:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 390:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 391:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 392:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 393:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 394:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 395:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearTxBuffer(void)
 396:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 397:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 398:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 399:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 400:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 401:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 402:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush TX software buffer */
 403:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_txBufferHead = UART_txBufferTail;
 404:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 405:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_INTR_TX_MASK_REG &= (uint32) ~UART_INTR_TX_NOT_FULL;
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 10


 406:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 407:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 408:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 409:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 410:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 411:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 412:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 413:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 414:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 415:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 416:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 417:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 418:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 419:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_TX_DIRECTION) */
 420:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 421:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 422:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 423:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntRx
 424:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ********************************************************************************
 425:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 426:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Summary:
 427:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 428:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 429:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Parameters:
 430:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  None
 431:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 432:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Return:
 433:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Returns the RX interrupt sources enabled before the function call.
 434:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 435:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 436:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntRx(void)
 437:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 109              		.loc 1 437 0
 110              		.cfi_startproc
 438:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSource;
 439:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 440:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSource = UART_GetRxInterruptMode();
 111              		.loc 1 440 0
 112 0000 024B     		ldr	r3, .L11
 113 0002 1868     		ldr	r0, [r3]
 114              	.LVL3:
 441:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 442:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetRxInterruptMode(UART_NO_INTR_SOURCES);
 115              		.loc 1 442 0
 116 0004 0022     		mov	r2, #0
 117 0006 1A60     		str	r2, [r3]
 443:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 444:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSource);
 445:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 118              		.loc 1 445 0
 119              		@ sp needed
 120 0008 7047     		bx	lr
 121              	.L12:
 122 000a C046     		.align	2
 123              	.L11:
 124 000c C80F0640 		.word	1074139080
 125              		.cfi_endproc
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 11


 126              	.LFE3:
 127              		.size	UART_SpiUartDisableIntRx, .-UART_SpiUartDisableIntRx
 128              		.section	.text.UART_SpiUartDisableIntTx,"ax",%progbits
 129              		.align	2
 130              		.global	UART_SpiUartDisableIntTx
 131              		.code	16
 132              		.thumb_func
 133              		.type	UART_SpiUartDisableIntTx, %function
 134              	UART_SpiUartDisableIntTx:
 135              	.LFB4:
 446:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 447:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 448:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 449:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntTx
 450:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ********************************************************************************
 451:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 452:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Summary:
 453:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables TX interrupt sources.
 454:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 455:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Parameters:
 456:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  None
 457:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 458:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Return:
 459:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Returns TX interrupt sources enabled before function call.
 460:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 461:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 462:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntTx(void)
 463:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 136              		.loc 1 463 0
 137              		.cfi_startproc
 464:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSourceMask;
 465:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 466:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSourceMask = UART_GetTxInterruptMode();
 138              		.loc 1 466 0
 139 0000 024B     		ldr	r3, .L14
 140 0002 1868     		ldr	r0, [r3]
 141              	.LVL4:
 467:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 468:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 142              		.loc 1 468 0
 143 0004 0022     		mov	r2, #0
 144 0006 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 470:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSourceMask);
 471:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 145              		.loc 1 471 0
 146              		@ sp needed
 147 0008 7047     		bx	lr
 148              	.L15:
 149 000a C046     		.align	2
 150              	.L14:
 151 000c 880F0640 		.word	1074139016
 152              		.cfi_endproc
 153              	.LFE4:
 154              		.size	UART_SpiUartDisableIntTx, .-UART_SpiUartDisableIntTx
 155              		.text
 156              	.Letext0:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 12


 157              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 158              		.section	.debug_info,"",%progbits
 159              	.Ldebug_info0:
 160 0000 50010000 		.4byte	0x150
 161 0004 0400     		.2byte	0x4
 162 0006 00000000 		.4byte	.Ldebug_abbrev0
 163 000a 04       		.byte	0x4
 164 000b 01       		.uleb128 0x1
 165 000c E7000000 		.4byte	.LASF22
 166 0010 01       		.byte	0x1
 167 0011 15000000 		.4byte	.LASF23
 168 0015 52000000 		.4byte	.LASF24
 169 0019 00000000 		.4byte	.Ldebug_ranges0+0
 170 001d 00000000 		.4byte	0
 171 0021 00000000 		.4byte	.Ldebug_line0
 172 0025 02       		.uleb128 0x2
 173 0026 01       		.byte	0x1
 174 0027 06       		.byte	0x6
 175 0028 04020000 		.4byte	.LASF0
 176 002c 02       		.uleb128 0x2
 177 002d 01       		.byte	0x1
 178 002e 08       		.byte	0x8
 179 002f 93010000 		.4byte	.LASF1
 180 0033 02       		.uleb128 0x2
 181 0034 02       		.byte	0x2
 182 0035 05       		.byte	0x5
 183 0036 23020000 		.4byte	.LASF2
 184 003a 02       		.uleb128 0x2
 185 003b 02       		.byte	0x2
 186 003c 07       		.byte	0x7
 187 003d F1010000 		.4byte	.LASF3
 188 0041 02       		.uleb128 0x2
 189 0042 04       		.byte	0x4
 190 0043 05       		.byte	0x5
 191 0044 BA010000 		.4byte	.LASF4
 192 0048 02       		.uleb128 0x2
 193 0049 04       		.byte	0x4
 194 004a 07       		.byte	0x7
 195 004b 9C000000 		.4byte	.LASF5
 196 004f 02       		.uleb128 0x2
 197 0050 08       		.byte	0x8
 198 0051 05       		.byte	0x5
 199 0052 00000000 		.4byte	.LASF6
 200 0056 02       		.uleb128 0x2
 201 0057 08       		.byte	0x8
 202 0058 07       		.byte	0x7
 203 0059 CA000000 		.4byte	.LASF7
 204 005d 03       		.uleb128 0x3
 205 005e 04       		.byte	0x4
 206 005f 05       		.byte	0x5
 207 0060 696E7400 		.ascii	"int\000"
 208 0064 02       		.uleb128 0x2
 209 0065 04       		.byte	0x4
 210 0066 07       		.byte	0x7
 211 0067 3E000000 		.4byte	.LASF8
 212 006b 04       		.uleb128 0x4
 213 006c 0E000000 		.4byte	.LASF12
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 13


 214 0070 02       		.byte	0x2
 215 0071 3A01     		.2byte	0x13a
 216 0073 48000000 		.4byte	0x48
 217 0077 02       		.uleb128 0x2
 218 0078 04       		.byte	0x4
 219 0079 04       		.byte	0x4
 220 007a E1000000 		.4byte	.LASF9
 221 007e 02       		.uleb128 0x2
 222 007f 08       		.byte	0x8
 223 0080 04       		.byte	0x4
 224 0081 DA010000 		.4byte	.LASF10
 225 0085 02       		.uleb128 0x2
 226 0086 01       		.byte	0x1
 227 0087 08       		.byte	0x8
 228 0088 75010000 		.4byte	.LASF11
 229 008c 04       		.uleb128 0x4
 230 008d EB010000 		.4byte	.LASF13
 231 0091 02       		.byte	0x2
 232 0092 E401     		.2byte	0x1e4
 233 0094 98000000 		.4byte	0x98
 234 0098 05       		.uleb128 0x5
 235 0099 6B000000 		.4byte	0x6b
 236 009d 02       		.uleb128 0x2
 237 009e 04       		.byte	0x4
 238 009f 07       		.byte	0x7
 239 00a0 2D020000 		.4byte	.LASF14
 240 00a4 06       		.uleb128 0x6
 241 00a5 C3010000 		.4byte	.LASF15
 242 00a9 01       		.byte	0x1
 243 00aa 45       		.byte	0x45
 244 00ab 6B000000 		.4byte	0x6b
 245 00af 00000000 		.4byte	.LFB0
 246 00b3 0C000000 		.4byte	.LFE0-.LFB0
 247 00b7 01       		.uleb128 0x1
 248 00b8 9C       		.byte	0x9c
 249 00b9 CD000000 		.4byte	0xcd
 250 00bd 07       		.uleb128 0x7
 251 00be 4B000000 		.4byte	.LASF17
 252 00c2 01       		.byte	0x1
 253 00c3 47       		.byte	0x47
 254 00c4 6B000000 		.4byte	0x6b
 255 00c8 00000000 		.4byte	.LLST0
 256 00cc 00       		.byte	0
 257 00cd 06       		.uleb128 0x6
 258 00ce AE000000 		.4byte	.LASF16
 259 00d2 01       		.byte	0x1
 260 00d3 8D       		.byte	0x8d
 261 00d4 6B000000 		.4byte	0x6b
 262 00d8 00000000 		.4byte	.LFB1
 263 00dc 10000000 		.4byte	.LFE1-.LFB1
 264 00e0 01       		.uleb128 0x1
 265 00e1 9C       		.byte	0x9c
 266 00e2 F4000000 		.4byte	0xf4
 267 00e6 08       		.uleb128 0x8
 268 00e7 10020000 		.4byte	.LASF18
 269 00eb 01       		.byte	0x1
 270 00ec 8F       		.byte	0x8f
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 14


 271 00ed 6B000000 		.4byte	0x6b
 272 00f1 01       		.uleb128 0x1
 273 00f2 50       		.byte	0x50
 274 00f3 00       		.byte	0
 275 00f4 09       		.uleb128 0x9
 276 00f5 36020000 		.4byte	.LASF25
 277 00f9 01       		.byte	0x1
 278 00fa B9       		.byte	0xb9
 279 00fb 00000000 		.4byte	.LFB2
 280 00ff 20000000 		.4byte	.LFE2-.LFB2
 281 0103 01       		.uleb128 0x1
 282 0104 9C       		.byte	0x9c
 283 0105 0A       		.uleb128 0xa
 284 0106 7A010000 		.4byte	.LASF19
 285 010a 01       		.byte	0x1
 286 010b B401     		.2byte	0x1b4
 287 010d 6B000000 		.4byte	0x6b
 288 0111 00000000 		.4byte	.LFB3
 289 0115 10000000 		.4byte	.LFE3-.LFB3
 290 0119 01       		.uleb128 0x1
 291 011a 9C       		.byte	0x9c
 292 011b 2E010000 		.4byte	0x12e
 293 011f 0B       		.uleb128 0xb
 294 0120 E1010000 		.4byte	.LASF20
 295 0124 01       		.byte	0x1
 296 0125 B601     		.2byte	0x1b6
 297 0127 6B000000 		.4byte	0x6b
 298 012b 01       		.uleb128 0x1
 299 012c 50       		.byte	0x50
 300 012d 00       		.byte	0
 301 012e 0C       		.uleb128 0xc
 302 012f A1010000 		.4byte	.LASF26
 303 0133 01       		.byte	0x1
 304 0134 CE01     		.2byte	0x1ce
 305 0136 6B000000 		.4byte	0x6b
 306 013a 00000000 		.4byte	.LFB4
 307 013e 10000000 		.4byte	.LFE4-.LFB4
 308 0142 01       		.uleb128 0x1
 309 0143 9C       		.byte	0x9c
 310 0144 0B       		.uleb128 0xb
 311 0145 15020000 		.4byte	.LASF21
 312 0149 01       		.byte	0x1
 313 014a D001     		.2byte	0x1d0
 314 014c 6B000000 		.4byte	0x6b
 315 0150 01       		.uleb128 0x1
 316 0151 50       		.byte	0x50
 317 0152 00       		.byte	0
 318 0153 00       		.byte	0
 319              		.section	.debug_abbrev,"",%progbits
 320              	.Ldebug_abbrev0:
 321 0000 01       		.uleb128 0x1
 322 0001 11       		.uleb128 0x11
 323 0002 01       		.byte	0x1
 324 0003 25       		.uleb128 0x25
 325 0004 0E       		.uleb128 0xe
 326 0005 13       		.uleb128 0x13
 327 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 15


 328 0007 03       		.uleb128 0x3
 329 0008 0E       		.uleb128 0xe
 330 0009 1B       		.uleb128 0x1b
 331 000a 0E       		.uleb128 0xe
 332 000b 55       		.uleb128 0x55
 333 000c 17       		.uleb128 0x17
 334 000d 11       		.uleb128 0x11
 335 000e 01       		.uleb128 0x1
 336 000f 10       		.uleb128 0x10
 337 0010 17       		.uleb128 0x17
 338 0011 00       		.byte	0
 339 0012 00       		.byte	0
 340 0013 02       		.uleb128 0x2
 341 0014 24       		.uleb128 0x24
 342 0015 00       		.byte	0
 343 0016 0B       		.uleb128 0xb
 344 0017 0B       		.uleb128 0xb
 345 0018 3E       		.uleb128 0x3e
 346 0019 0B       		.uleb128 0xb
 347 001a 03       		.uleb128 0x3
 348 001b 0E       		.uleb128 0xe
 349 001c 00       		.byte	0
 350 001d 00       		.byte	0
 351 001e 03       		.uleb128 0x3
 352 001f 24       		.uleb128 0x24
 353 0020 00       		.byte	0
 354 0021 0B       		.uleb128 0xb
 355 0022 0B       		.uleb128 0xb
 356 0023 3E       		.uleb128 0x3e
 357 0024 0B       		.uleb128 0xb
 358 0025 03       		.uleb128 0x3
 359 0026 08       		.uleb128 0x8
 360 0027 00       		.byte	0
 361 0028 00       		.byte	0
 362 0029 04       		.uleb128 0x4
 363 002a 16       		.uleb128 0x16
 364 002b 00       		.byte	0
 365 002c 03       		.uleb128 0x3
 366 002d 0E       		.uleb128 0xe
 367 002e 3A       		.uleb128 0x3a
 368 002f 0B       		.uleb128 0xb
 369 0030 3B       		.uleb128 0x3b
 370 0031 05       		.uleb128 0x5
 371 0032 49       		.uleb128 0x49
 372 0033 13       		.uleb128 0x13
 373 0034 00       		.byte	0
 374 0035 00       		.byte	0
 375 0036 05       		.uleb128 0x5
 376 0037 35       		.uleb128 0x35
 377 0038 00       		.byte	0
 378 0039 49       		.uleb128 0x49
 379 003a 13       		.uleb128 0x13
 380 003b 00       		.byte	0
 381 003c 00       		.byte	0
 382 003d 06       		.uleb128 0x6
 383 003e 2E       		.uleb128 0x2e
 384 003f 01       		.byte	0x1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 16


 385 0040 3F       		.uleb128 0x3f
 386 0041 19       		.uleb128 0x19
 387 0042 03       		.uleb128 0x3
 388 0043 0E       		.uleb128 0xe
 389 0044 3A       		.uleb128 0x3a
 390 0045 0B       		.uleb128 0xb
 391 0046 3B       		.uleb128 0x3b
 392 0047 0B       		.uleb128 0xb
 393 0048 27       		.uleb128 0x27
 394 0049 19       		.uleb128 0x19
 395 004a 49       		.uleb128 0x49
 396 004b 13       		.uleb128 0x13
 397 004c 11       		.uleb128 0x11
 398 004d 01       		.uleb128 0x1
 399 004e 12       		.uleb128 0x12
 400 004f 06       		.uleb128 0x6
 401 0050 40       		.uleb128 0x40
 402 0051 18       		.uleb128 0x18
 403 0052 9742     		.uleb128 0x2117
 404 0054 19       		.uleb128 0x19
 405 0055 01       		.uleb128 0x1
 406 0056 13       		.uleb128 0x13
 407 0057 00       		.byte	0
 408 0058 00       		.byte	0
 409 0059 07       		.uleb128 0x7
 410 005a 34       		.uleb128 0x34
 411 005b 00       		.byte	0
 412 005c 03       		.uleb128 0x3
 413 005d 0E       		.uleb128 0xe
 414 005e 3A       		.uleb128 0x3a
 415 005f 0B       		.uleb128 0xb
 416 0060 3B       		.uleb128 0x3b
 417 0061 0B       		.uleb128 0xb
 418 0062 49       		.uleb128 0x49
 419 0063 13       		.uleb128 0x13
 420 0064 02       		.uleb128 0x2
 421 0065 17       		.uleb128 0x17
 422 0066 00       		.byte	0
 423 0067 00       		.byte	0
 424 0068 08       		.uleb128 0x8
 425 0069 34       		.uleb128 0x34
 426 006a 00       		.byte	0
 427 006b 03       		.uleb128 0x3
 428 006c 0E       		.uleb128 0xe
 429 006d 3A       		.uleb128 0x3a
 430 006e 0B       		.uleb128 0xb
 431 006f 3B       		.uleb128 0x3b
 432 0070 0B       		.uleb128 0xb
 433 0071 49       		.uleb128 0x49
 434 0072 13       		.uleb128 0x13
 435 0073 02       		.uleb128 0x2
 436 0074 18       		.uleb128 0x18
 437 0075 00       		.byte	0
 438 0076 00       		.byte	0
 439 0077 09       		.uleb128 0x9
 440 0078 2E       		.uleb128 0x2e
 441 0079 00       		.byte	0
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 17


 442 007a 3F       		.uleb128 0x3f
 443 007b 19       		.uleb128 0x19
 444 007c 03       		.uleb128 0x3
 445 007d 0E       		.uleb128 0xe
 446 007e 3A       		.uleb128 0x3a
 447 007f 0B       		.uleb128 0xb
 448 0080 3B       		.uleb128 0x3b
 449 0081 0B       		.uleb128 0xb
 450 0082 27       		.uleb128 0x27
 451 0083 19       		.uleb128 0x19
 452 0084 11       		.uleb128 0x11
 453 0085 01       		.uleb128 0x1
 454 0086 12       		.uleb128 0x12
 455 0087 06       		.uleb128 0x6
 456 0088 40       		.uleb128 0x40
 457 0089 18       		.uleb128 0x18
 458 008a 9742     		.uleb128 0x2117
 459 008c 19       		.uleb128 0x19
 460 008d 00       		.byte	0
 461 008e 00       		.byte	0
 462 008f 0A       		.uleb128 0xa
 463 0090 2E       		.uleb128 0x2e
 464 0091 01       		.byte	0x1
 465 0092 3F       		.uleb128 0x3f
 466 0093 19       		.uleb128 0x19
 467 0094 03       		.uleb128 0x3
 468 0095 0E       		.uleb128 0xe
 469 0096 3A       		.uleb128 0x3a
 470 0097 0B       		.uleb128 0xb
 471 0098 3B       		.uleb128 0x3b
 472 0099 05       		.uleb128 0x5
 473 009a 27       		.uleb128 0x27
 474 009b 19       		.uleb128 0x19
 475 009c 49       		.uleb128 0x49
 476 009d 13       		.uleb128 0x13
 477 009e 11       		.uleb128 0x11
 478 009f 01       		.uleb128 0x1
 479 00a0 12       		.uleb128 0x12
 480 00a1 06       		.uleb128 0x6
 481 00a2 40       		.uleb128 0x40
 482 00a3 18       		.uleb128 0x18
 483 00a4 9742     		.uleb128 0x2117
 484 00a6 19       		.uleb128 0x19
 485 00a7 01       		.uleb128 0x1
 486 00a8 13       		.uleb128 0x13
 487 00a9 00       		.byte	0
 488 00aa 00       		.byte	0
 489 00ab 0B       		.uleb128 0xb
 490 00ac 34       		.uleb128 0x34
 491 00ad 00       		.byte	0
 492 00ae 03       		.uleb128 0x3
 493 00af 0E       		.uleb128 0xe
 494 00b0 3A       		.uleb128 0x3a
 495 00b1 0B       		.uleb128 0xb
 496 00b2 3B       		.uleb128 0x3b
 497 00b3 05       		.uleb128 0x5
 498 00b4 49       		.uleb128 0x49
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 18


 499 00b5 13       		.uleb128 0x13
 500 00b6 02       		.uleb128 0x2
 501 00b7 18       		.uleb128 0x18
 502 00b8 00       		.byte	0
 503 00b9 00       		.byte	0
 504 00ba 0C       		.uleb128 0xc
 505 00bb 2E       		.uleb128 0x2e
 506 00bc 01       		.byte	0x1
 507 00bd 3F       		.uleb128 0x3f
 508 00be 19       		.uleb128 0x19
 509 00bf 03       		.uleb128 0x3
 510 00c0 0E       		.uleb128 0xe
 511 00c1 3A       		.uleb128 0x3a
 512 00c2 0B       		.uleb128 0xb
 513 00c3 3B       		.uleb128 0x3b
 514 00c4 05       		.uleb128 0x5
 515 00c5 27       		.uleb128 0x27
 516 00c6 19       		.uleb128 0x19
 517 00c7 49       		.uleb128 0x49
 518 00c8 13       		.uleb128 0x13
 519 00c9 11       		.uleb128 0x11
 520 00ca 01       		.uleb128 0x1
 521 00cb 12       		.uleb128 0x12
 522 00cc 06       		.uleb128 0x6
 523 00cd 40       		.uleb128 0x40
 524 00ce 18       		.uleb128 0x18
 525 00cf 9742     		.uleb128 0x2117
 526 00d1 19       		.uleb128 0x19
 527 00d2 00       		.byte	0
 528 00d3 00       		.byte	0
 529 00d4 00       		.byte	0
 530              		.section	.debug_loc,"",%progbits
 531              	.Ldebug_loc0:
 532              	.LLST0:
 533 0000 00000000 		.4byte	.LVL0
 534 0004 04000000 		.4byte	.LVL1
 535 0008 0200     		.2byte	0x2
 536 000a 30       		.byte	0x30
 537 000b 9F       		.byte	0x9f
 538 000c 04000000 		.4byte	.LVL1
 539 0010 0C000000 		.4byte	.LFE0
 540 0014 0100     		.2byte	0x1
 541 0016 50       		.byte	0x50
 542 0017 00000000 		.4byte	0
 543 001b 00000000 		.4byte	0
 544              		.section	.debug_aranges,"",%progbits
 545 0000 3C000000 		.4byte	0x3c
 546 0004 0200     		.2byte	0x2
 547 0006 00000000 		.4byte	.Ldebug_info0
 548 000a 04       		.byte	0x4
 549 000b 00       		.byte	0
 550 000c 0000     		.2byte	0
 551 000e 0000     		.2byte	0
 552 0010 00000000 		.4byte	.LFB0
 553 0014 0C000000 		.4byte	.LFE0-.LFB0
 554 0018 00000000 		.4byte	.LFB1
 555 001c 10000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 19


 556 0020 00000000 		.4byte	.LFB2
 557 0024 20000000 		.4byte	.LFE2-.LFB2
 558 0028 00000000 		.4byte	.LFB3
 559 002c 10000000 		.4byte	.LFE3-.LFB3
 560 0030 00000000 		.4byte	.LFB4
 561 0034 10000000 		.4byte	.LFE4-.LFB4
 562 0038 00000000 		.4byte	0
 563 003c 00000000 		.4byte	0
 564              		.section	.debug_ranges,"",%progbits
 565              	.Ldebug_ranges0:
 566 0000 00000000 		.4byte	.LFB0
 567 0004 0C000000 		.4byte	.LFE0
 568 0008 00000000 		.4byte	.LFB1
 569 000c 10000000 		.4byte	.LFE1
 570 0010 00000000 		.4byte	.LFB2
 571 0014 20000000 		.4byte	.LFE2
 572 0018 00000000 		.4byte	.LFB3
 573 001c 10000000 		.4byte	.LFE3
 574 0020 00000000 		.4byte	.LFB4
 575 0024 10000000 		.4byte	.LFE4
 576 0028 00000000 		.4byte	0
 577 002c 00000000 		.4byte	0
 578              		.section	.debug_line,"",%progbits
 579              	.Ldebug_line0:
 580 0000 CB000000 		.section	.debug_str,"MS",%progbits,1
 580      02006300 
 580      00000201 
 580      FB0E0D00 
 580      01010101 
 581              	.LASF6:
 582 0000 6C6F6E67 		.ascii	"long long int\000"
 582      206C6F6E 
 582      6720696E 
 582      7400
 583              	.LASF12:
 584 000e 75696E74 		.ascii	"uint32\000"
 584      333200
 585              	.LASF23:
 586 0015 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_SPI_UART.c\000"
 586      6E657261 
 586      7465645F 
 586      536F7572 
 586      63655C50 
 587              	.LASF8:
 588 003e 756E7369 		.ascii	"unsigned int\000"
 588      676E6564 
 588      20696E74 
 588      00
 589              	.LASF17:
 590 004b 72784461 		.ascii	"rxData\000"
 590      746100
 591              	.LASF24:
 592 0052 453A5C37 		.ascii	"E:\\744\\Education\\Git\\PSoC4_Projects\\Security s"
 592      34345C45 
 592      64756361 
 592      74696F6E 
 592      5C476974 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 20


 593 0080 79737465 		.ascii	"ystem\\Security_system.cydsn\000"
 593      6D5C5365 
 593      63757269 
 593      74795F73 
 593      79737465 
 594              	.LASF5:
 595 009c 6C6F6E67 		.ascii	"long unsigned int\000"
 595      20756E73 
 595      69676E65 
 595      6420696E 
 595      7400
 596              	.LASF16:
 597 00ae 55415254 		.ascii	"UART_SpiUartGetRxBufferSize\000"
 597      5F537069 
 597      55617274 
 597      47657452 
 597      78427566 
 598              	.LASF7:
 599 00ca 6C6F6E67 		.ascii	"long long unsigned int\000"
 599      206C6F6E 
 599      6720756E 
 599      7369676E 
 599      65642069 
 600              	.LASF9:
 601 00e1 666C6F61 		.ascii	"float\000"
 601      7400
 602              	.LASF22:
 603 00e7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 603      4320342E 
 603      392E3320 
 603      32303135 
 603      30333033 
 604 011a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 604      20726576 
 604      6973696F 
 604      6E203232 
 604      31323230 
 605 014d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 605      66756E63 
 605      74696F6E 
 605      2D736563 
 605      74696F6E 
 606              	.LASF11:
 607 0175 63686172 		.ascii	"char\000"
 607      00
 608              	.LASF19:
 609 017a 55415254 		.ascii	"UART_SpiUartDisableIntRx\000"
 609      5F537069 
 609      55617274 
 609      44697361 
 609      626C6549 
 610              	.LASF1:
 611 0193 756E7369 		.ascii	"unsigned char\000"
 611      676E6564 
 611      20636861 
 611      7200
 612              	.LASF26:
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 21


 613 01a1 55415254 		.ascii	"UART_SpiUartDisableIntTx\000"
 613      5F537069 
 613      55617274 
 613      44697361 
 613      626C6549 
 614              	.LASF4:
 615 01ba 6C6F6E67 		.ascii	"long int\000"
 615      20696E74 
 615      00
 616              	.LASF15:
 617 01c3 55415254 		.ascii	"UART_SpiUartReadRxData\000"
 617      5F537069 
 617      55617274 
 617      52656164 
 617      52784461 
 618              	.LASF10:
 619 01da 646F7562 		.ascii	"double\000"
 619      6C6500
 620              	.LASF20:
 621 01e1 696E7453 		.ascii	"intSource\000"
 621      6F757263 
 621      6500
 622              	.LASF13:
 623 01eb 72656733 		.ascii	"reg32\000"
 623      3200
 624              	.LASF3:
 625 01f1 73686F72 		.ascii	"short unsigned int\000"
 625      7420756E 
 625      7369676E 
 625      65642069 
 625      6E7400
 626              	.LASF0:
 627 0204 7369676E 		.ascii	"signed char\000"
 627      65642063 
 627      68617200 
 628              	.LASF18:
 629 0210 73697A65 		.ascii	"size\000"
 629      00
 630              	.LASF21:
 631 0215 696E7453 		.ascii	"intSourceMask\000"
 631      6F757263 
 631      654D6173 
 631      6B00
 632              	.LASF2:
 633 0223 73686F72 		.ascii	"short int\000"
 633      7420696E 
 633      7400
 634              	.LASF14:
 635 022d 73697A65 		.ascii	"sizetype\000"
 635      74797065 
 635      00
 636              	.LASF25:
 637 0236 55415254 		.ascii	"UART_SpiUartClearRxBuffer\000"
 637      5F537069 
 637      55617274 
 637      436C6561 
 637      72527842 
ARM GAS  C:\Users\744\AppData\Local\Temp\ccO4X6hq.s 			page 22


 638              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
